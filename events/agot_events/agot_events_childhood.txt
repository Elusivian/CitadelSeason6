#Targ coin flip
#Unless the child is a player and under 6, they should never really see this event
namespace = agot_childhood_events
agot_childhood_events.0001 = { #Triggered on_6th_birthday - root should be the child
	type = character_event
	title = agot_childhood_events.0001.t
	desc = agot_childhood_events.0001.desc
	theme = family

	right_portrait = {
		character = scope:child
		triggered_animation = {
			trigger = { var:flipped_trait = flag:diligent }
			animation = thinking
		}

		triggered_animation = {
			trigger = { var:flipped_trait = flag:learning }
			animation = thinking
		}

		triggered_animation = {
			trigger = { var:flipped_trait = flag:martial }
			animation = marshal_wooden_sword
		}

		triggered_animation = {
			trigger = { var:flipped_trait = flag:intrigue }
			animation = eavesdrop
		}

		triggered_animation = {
			trigger = { var:flipped_trait = flag:stewardship }
			animation = thinking
		}

		triggered_animation = {
			trigger = { var:flipped_trait = flag:diplomacy }
			animation = personality_compassionate
		}

		triggered_animation = {
			trigger = { var:flipped_trait = flag:prowess }
			animation = marshal_wooden_sword
		}

		triggered_animation = {
			trigger = { var:flipped_trait = flag:shrewd }
			animation = thinking
		}

		triggered_animation = {
			trigger = { var:flipped_trait = flag:genius }
			animation = thinking
		}

		triggered_animation = {
			trigger = { var:flipped_trait = flag:lunatic_1 }
			animation = lunatic
		}

		triggered_animation = {
			trigger = { var:flipped_trait = flag:possessed_1 }
			animation = lunatic
		}

		triggered_animation = {
			trigger = { var:flipped_trait = flag:arbitrary }
			animation = personality_irrational
		}

		triggered_animation = {
			trigger = { var:flipped_trait = flag:paranoid }
			animation = paranoia
		}

		triggered_animation = {
			trigger = { var:flipped_trait = flag:wrathful }
			animation = anger
		}

		triggered_animation = {
			trigger = { var:flipped_trait = flag:fire_obsessed }
			animation = thinking
		}
	}

	immediate = {
		save_scope_as = child

		#hidden because otherwise tooltip is wrong
		hidden_effect = {
			random_list = {
			50 = { #bad trait
				random_list = {
					5 = {
						trigger = {
							NOT = { has_trait = lunatic_1 }
						}
						root = {
							add_trait = lunatic_1
						}
						set_variable = {
							name = flipped_trait
							value = flag:lunatic_1
						}
					}
					1 = {
						trigger = {
							NOT = { has_trait = possessed_1 }
						}
						root = {
							add_trait = possessed_1
						}
						set_variable = {
							name = flipped_trait
							value = flag:possessed_1
						}
					}
					9 = {
						trigger = {
							NOT = { has_trait = arbitrary }
							NOT = { has_trait = just }
							number_of_personality_traits < personality_trait_limit
						}
						root = {
							add_trait = arbitrary
						}
						set_variable = {
							name = flipped_trait
							value = flag:arbitrary
						}
					}
					15 = {
						trigger = {
							NOT = { has_trait = paranoid }
							NOT = { has_trait = trusting }
							number_of_personality_traits < personality_trait_limit
						}
						root = {
							add_trait = paranoid
						}
						set_variable = {
							name = flipped_trait
							value = flag:paranoid
						}
					}
					20 = {
						trigger = {
							NOT = { has_trait = wrathful }
							NOT = { has_trait = calm }
							number_of_personality_traits < personality_trait_limit
						}
						root = {
							add_trait = wrathful
						}
						set_variable = {
							name = flipped_trait
							value = flag:wrathful
						}
					}
					5 = {
						trigger = {
							NOT = { has_trait = fire_obsessed }
						}
						root = {
							add_trait = fire_obsessed
						}
						set_variable = {
							name = flipped_trait
							value = flag:fire_obsessed
						}
					}
				}
				every_parent = {
					limit = {
						is_ai = no
					}
					trigger_event = agot_childhood_events.0003
				}
			}
			50 = { #good trait
				random_list = {
					10 = {
						trigger = {
							NOT = { has_trait = diligent }
							NOT = { has_trait = lazy }
							number_of_personality_traits < personality_trait_limit
						}
						add_trait = diligent
						set_variable = {
							name = flipped_trait
							value = flag:diligent
						}
					}
					10 = {
						trigger = {
							OR = {
								has_trait = pensive
								has_trait = curious
							}
						}
						add_learning_skill = 5
						set_variable = {
							name = flipped_trait
							value = flag:learning
						}
						if = {
							limit = { has_variable = education_learning_variable }
							change_variable = {
								name = education_learning_variable
								add = 12
							}
						}
						else = {
							set_variable = {
								name = education_learning_variable
								value = 12
							}
						}
					}
					10 = {
						trigger = {
							OR = {
								has_trait = bossy
								has_trait = rowdy
							}
						}
						add_martial_skill = 5
						set_variable = {
							name = flipped_trait
							value = flag:martial
						}
						if = {
							limit = { has_variable = education_martial_variable }
							change_variable = {
								name = education_martial_variable
								add = 12
							}
						}
						else = {
							set_variable = {
								name = education_martial_variable
								value = 12
							}
						}
					}
					10 = {
						trigger = {
							OR = {
								has_trait = charming
								has_trait = rowdy
							}
						}
						add_intrigue_skill = 5
						set_variable = {
							name = flipped_trait
							value = flag:intrigue
						}
						if = {
							limit = { has_variable = education_intrigue_variable }
							change_variable = {
								name = education_intrigue_variable
								add = 12
							}
						}
						else = {
							set_variable = {
								name = education_intrigue_variable
								value = 12
							}
						}
					}
					10 = {
						trigger = {
							OR = {
								has_trait = pensive
								has_trait = bossy
							}
						}
						add_stewardship_skill = 5
						set_variable = {
							name = flipped_trait
							value = flag:stewardship
						}
						if = {
							limit = { has_variable = education_stewardship_variable }
							change_variable = {
								name = education_stewardship_variable
								add = 12
							}
						}
						else = {
							set_variable = {
								name = education_stewardship_variable
								value = 12
							}
						}
					}
					10 = {
						trigger = {
							OR = {
								has_trait = charming
								has_trait = curious
							}
						}
						add_diplomacy_skill = 5
						set_variable = {
							name = flipped_trait
							value = flag:diplomacy
						}
						if = {
							limit = { has_variable = education_diplomacy_variable }
							change_variable = {
								name = education_diplomacy_variable
								add = 12
							}
						}
						else = {
							set_variable = {
								name = education_diplomacy_variable
								value = 12
							}
						}
					}
					10 = {
						trigger = {
							OR = {
								has_trait = bossy
								has_trait = rowdy
							}
						}
						add_prowess_skill = 2
						blademaster_lifestyle_rank_up_effect = yes
						set_variable = {
							name = flipped_trait
							value = flag:prowess
						}
					}
					5 = {
						add_prowess_skill = 2
						add_learning_skill = 2
						add_martial_skill = 2
						add_intrigue_skill = 2
						add_stewardship_skill = 2
						add_diplomacy_skill = 2
						set_variable = {
							name = flipped_trait
							value = flag:shrewd
						}
						if = {
							limit = { has_variable = education_learning_variable }
							change_variable = {
								name = education_learning_variable
								add = 8
							}
						}
						else = {
							set_variable = {
								name = education_learning_variable
								value = 8
							}
						}
						if = {
							limit = { has_variable = education_martial_variable }
							change_variable = {
								name = education_martial_variable
								add = 8
							}
						}
						else = {
							set_variable = {
								name = education_martial_variable
								value = 8
							}
						}
						if = {
							limit = { has_variable = education_intrigue_variable }
							change_variable = {
								name = education_intrigue_variable
								add = 8
							}
						}
						else = {
							set_variable = {
								name = education_intrigue_variable
								value = 8
							}
						}
						if = {
							limit = { has_variable = education_stewardship_variable }
							change_variable = {
								name = education_stewardship_variable
								add = 8
							}
						}
						else = {
							set_variable = {
								name = education_stewardship_variable
								value = 8
							}
						}
						if = {
							limit = { has_variable = education_diplomacy_variable }
							change_variable = {
								name = education_diplomacy_variable
								add = 8
							}
						}
						else = {
							set_variable = {
								name = education_diplomacy_variable
								value = 8
							}
						}
					}
					2 = {
						add_prowess_skill = 5
						add_learning_skill = 5
						add_martial_skill = 5
						add_intrigue_skill = 5
						add_stewardship_skill = 5
						add_diplomacy_skill = 5
						set_variable = {
							name = flipped_trait
							value = flag:genius
						}
						if = {
							limit = { has_variable = education_learning_variable }
							change_variable = {
								name = education_learning_variable
								add = 20
							}
						}
						else = {
							set_variable = {
								name = education_learning_variable
								value = 20
							}
						}
						if = {
							limit = { has_variable = education_martial_variable }
							change_variable = {
								name = education_martial_variable
								add = 20
							}
						}
						else = {
							set_variable = {
								name = education_martial_variable
								value = 20
							}
						}
						if = {
							limit = { has_variable = education_intrigue_variable }
							change_variable = {
								name = education_intrigue_variable
								add = 20
							}
						}
						else = {
							set_variable = {
								name = education_intrigue_variable
								value = 20
							}
						}
						if = {
							limit = { has_variable = education_stewardship_variable }
							change_variable = {
								name = education_stewardship_variable
								add = 20
							}
						}
						else = {
							set_variable = {
								name = education_stewardship_variable
								value = 20
							}
						}
						if = {
							limit = { has_variable = education_diplomacy_variable }
							change_variable = {
								name = education_diplomacy_variable
								add = 20
							}
						}
						else = {
							set_variable = {
								name = education_diplomacy_variable
								value = 20
							}
						}
					}
				}
				every_parent = {
					limit = {
						is_ai = no
						prev = {
							has_variable = flipped_trait
						}
					}
					trigger_event = agot_childhood_events.0002
				}
			}
		}
		}
	}
	option = {
		name = agot_childhood_events.0001.a
	}
}

#Inform parents of good trait
# scope:child is the child receiving the trait
# scope:child.var:flipped_trait is the key of the trait e.g. flag:wrathful
agot_childhood_events.0002 = {
	type = character_event
	title = agot_childhood_events.0002.t
	desc = agot_childhood_events.0002.desc
	theme = family
	right_portrait = {
		character = root
		animation = idle
	}
	left_portrait = {
		character = scope:child
	}
	option = {
		name = agot_childhood_events.0002.a
	}
}

#Inform parents of bad trait
# scope:child is the child receiving the trait
# scope:child.var:flipped_trait is the key of the trait
agot_childhood_events.0003 = {
	type = character_event
	title = agot_childhood_events.0003.t
	desc = agot_childhood_events.0003.desc
	theme = family
	right_portrait = {
		character = root
		animation = idle
	}
	left_portrait = {
		character = scope:child
	}
	option = {
		name = agot_childhood_events.0003.a
	}
}

#Father is suspicious of child
agot_childhood_events.0004 = {
	type = character_event
	title = agot_childhood_events.0004.t
	desc = agot_childhood_events.0004.desc
	theme = family
	right_portrait = {
		character = root
		animation = idle
	}
	left_portrait = {
		character = scope:child
	}
	option = {
		name = agot_childhood_events.0004.a

		ai_chance = {
			base = 25
			modifier = {
				has_trait = trusting
				add = 200
			}
			modifier = {
				has_trait = compassionate
				add = 50
			}
		}
	}
	option = {
		name = agot_childhood_events.0004.b

		#start investigate legitamacy when available, for now sucks to suck if mother is dead
		trigger = {
			scope:child.mother = { is_alive = yes}
		}

		duel = {
			skill = intrigue
			target = scope:child.mother

			6 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 0.5
					min = -5
				}
				desc = agot_childhood_events.0004.b.success
				if = {
					limit = { scope:child.real_father = root }
					hidden_effect = {
						send_interface_toast = {
							title = agot_childhood_events.0004.b.success.notbastard.t
							custom_tooltip = agot_childhood_events.0004.b.success.notbastard.desc
							left_icon = scope:child
							right_icon = root
						}
					}
				}
				else = {
					scope:child.real_father = { save_scope_as = real_father}
					hidden_effect = {
						send_interface_toast = {
							title = agot_childhood_events.0004.b.success.bastard.t
							custom_tooltip = agot_childhood_events.0004.b.success.bastard.desc
							left_icon = scope:child
							right_icon = scope:child.real_father
						}
					}
				}
			}

			4 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -0.5
					min = -3
				}
				desc = agot_childhood_events.0004.b.failure
				hidden_effect = {
					send_interface_toast = {
						title = agot_childhood_events.0004.b.failure.t
						custom_tooltip = agot_childhood_events.0004.b.failure.desc
						left_icon = scope:child
						right_icon = root
					}
				}
			}
		}

		ai_chance = {
			base = 25
			modifier = {
				has_trait = paranoid
				add = 50
			}
			modifier = {
				has_trait = just
				add = 50
			}
			modifier = {
				has_trait = honest
				add = 50
			}
		}
	}
	option = {
		name = agot_childhood_events.0004.c
		random_list = {
			0 = {
				show_chance = no
				desc = agot_childhood_events.0004.c.tt.2

				#People find the accusation credible

				modifier = {
					add = 80
					scope:child = { has_character_flag = suspicious_strong_seed }
				}

				modifier = {
					add = 20
					has_trait = just
				}

				modifier = {
					add = 20
					scope:child.mother = { has_trait = deceitful }
				}

				modifier = {
					add = 20
					scope:child.mother = { has_trait = disloyal }
				}

				modifier = {
					add = 40
					scope:child.mother = { has_trait = lustful }
				}

				scope:child = { add_trait = disputed_heritage }

				if = {
					limit = {
						scope:child.mother = { is_alive = yes}
					}
					scope:child.mother = {
						add_opinion = {
							target = root
							modifier = shamed_me_opinion
						}
					}
				}

				hidden_effect = {
					send_interface_toast = {
						title = agot_childhood_events.0004.c.success.t
						custom_tooltip = agot_childhood_events.0004.c.success.desc
						left_icon = scope:child
						right_icon = root
					}
				}
			}
			0 = {
				show_chance = no
				desc = agot_childhood_events.0004.c.tt.1

				#Children unchanged, you get opinion malus

				modifier = {
					add = 20
					scope:child = {
						NOT = { has_character_flag = suspicious_strong_seed }
					}
				}

				modifier = {
					add = 20
					scope:child.mother = { has_trait = just }
				}

				modifier = {
					add = 40
					scope:child.mother = { has_trait = chaste }
				}

				modifier = {
					add = 20
					scope:child.mother = { has_trait = loyal }
				}

				modifier = {
					add = 40
					scope:child.mother = { has_trait = honest }
				}

				modifier = {
					add = 40
					has_trait = deceitful
				}

				modifier = {
					add = 20
					has_trait = paranoid
				}

				modifier = {
					add = 20
					has_trait = lunatic
				}

				hidden_effect = {
					every_vassal = {
						add_opinion = {
							target = root
							modifier = dishonorable_opinion
						}
					}
				}

				scope:child.mother = {
					add_opinion = {
						target = root
						modifier = shamed_me_opinion
					}
				}

				hidden_effect = {
					send_interface_toast = {
						title = agot_childhood_events.0004.c.failure.t
						custom_tooltip = agot_childhood_events.0004.c.failure.desc
						left_icon = scope:child
						right_icon = root
					}
				}
			}
		}
		ai_chance = {
			base = 0
			modifier = {
				has_trait = sadistic
				add = 50
			}
			modifier = {
				has_trait = callous
				add = 50
			}
			modifier = {
				has_trait = lunatic
				add = 50
			}
			modifier = {
				has_trait = rude
				add = 50
			}
			modifier = {
				has_trait = paranoid
				add = 50
			}
		}
	}
	option = {
		name = agot_childhood_events.0004.d

		custom_tooltip = {
			text = agot_childhood_events.0004.d.tt

			hidden_effect = {
				scope:child.mother = {
					every_secret = {
						limit = {
							secret_type = secret_disputed_heritage
							secret_target.mother = scope:child.mother
						}
						remove_secret = yes
					}
				}
			}
		}

		ai_chance = {
			base = 25
			modifier = {
				has_sexuality = homosexual
				add = 50
			}
			modifier = {
				has_sexuality = asexual
				add = 50
			}
			modifier = {
				has_trait = compassionate
				add = 25
			}
		}
	}
}

#tomboy event as child
agot_childhood_events.0005 = {
	type = character_event
	title = agot_childhood_events.0005.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:other_child
				}
				desc = agot_childhood_events.0005.desc
			}
			desc = agot_childhood_events.0005.desc.alone
		}
	}
	theme = martial
	override_background = { reference = courtyard }
	right_portrait = {
		character = root
		animation = personality_bold
	}
	left_portrait = {
		character = scope:other_child
		animation = personality_bold
		outfit_tags = { beggar_rags }
	}

	trigger = { is_alive = yes }

	immediate = {
		if = {
			limit = {
				is_ruler = yes
				any_courtier_or_guest = {
					age > 5
					age < 14
					is_human = yes
				}
			}
			random_courtier_or_guest = {
				limit = {
					age > 5
					age < 14
					is_human = yes
				}
				save_scope_as = other_child
			}
		}
	}

	option = {
		name = agot_childhood_events.0005.a
		custom_tooltip = agot_childhood_events.0005.tt

		add_character_flag = tomboy
		add_prowess_skill = 2
		set_variable = {
			name = education_martial_variable
			value = 8
		}

		ai_chance = { base = 100 }
	}

	option = {
		trigger = {
			OR = {
				has_trait = rowdy
				has_trait = bossy
			}
			is_ai = yes
			NOT = { has_focus = education_martial }
		}
		name = agot_childhood_events.0005.b
		custom_tooltip = agot_childhood_events.0005.tt

		add_character_flag = tomboy
		set_focus = education_martial
		add_prowess_skill = 2
		set_variable = {
			name = education_martial_variable
			value = 8
		}

		ai_chance = { base = 900 }
	}

	option = {
		name = agot_childhood_events.0005.c

		ai_chance = { base = 0 }
	}
}

#tomboy event as parent/guardian
agot_childhood_events.0006 = {
	type = character_event
	title = agot_childhood_events.0006.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:other_child
				}
				desc = agot_childhood_events.0006.desc
			}
			desc = agot_childhood_events.0006.desc.alone
		}
	}
	theme = martial
	override_background = { reference = courtyard }
	right_portrait = {
		character = scope:child
		animation = personality_bold
		outfit_tags = { beggar_rags }
	}
	left_portrait = {
		character = scope:other_child
		animation = anger
		outfit_tags = { beggar_rags }
	}

	trigger = { scope:child = { is_alive = yes } }

	immediate = {
		if = {
			limit = {
				is_ruler = yes
				any_courtier_or_guest = {
					age > 5
					age < 16
					is_human = yes
				}
			}
			random_courtier_or_guest = {
				limit = {
					age > 5
					age < 16
					is_human = yes
					NOT = { this = scope:child }
				}
				save_scope_as = other_child
			}
		}
	}

	option = {
		name = agot_childhood_events.0006.a
		custom_tooltip = agot_childhood_events.0006.tt

		scope:child = {
			add_character_flag = tomboy
			add_prowess_skill = 2
			set_variable = {
				name = education_martial_variable
				value = 8
			}
		}

		ai_chance = { base = 100 }
	}

	option = {
		trigger = {
			scope:child = {
				OR = {
					has_trait = rowdy
					has_trait = bossy
				}
				NOT = { has_focus = education_martial }
			}
		}
		name = agot_childhood_events.0006.b
		custom_tooltip = agot_childhood_events.0006.tt

		scope:child = {
			add_character_flag = tomboy
			set_focus = education_martial
			add_prowess_skill = 2
			set_variable = {
				name = education_martial_variable
				value = 8
			}
		}

		ai_chance = { base = 900 }
	}

	option = {
		name = agot_childhood_events.0006.c

		ai_chance = { base = 0 }
	}
}

#Child Dyes Hair
agot_childhood_events.0007 = {
	type = character_event
	title = agot_childhood_events.0007.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { #If there's a courtier to inspire child
					scope:dyed_hair = {
						is_courtier_of = root
					}
				}
				desc = agot_childhood_events.0007.desc.courtier
			}
			desc = agot_childhood_events.0007.desc.sellsword #Create a Sellsword to inspire
		}
	}
	theme = court
	left_portrait = {
		character = root
		animation = admiration
	}
	right_portrait = {
		character = scope:dyed_hair
		animation = ecstasy
	}

	trigger = {
		age >= 6
		age < 16
		OR = { #type of kid who would do this
			childhood_nice_child_trigger = yes
			childhood_loud_child_trigger = yes
		}
	}

	immediate = {
		if = {
			limit = {
				is_ruler = yes
				any_courtier_or_guest = {
					agot_has_dyed_hair = yes
				}
			}
			random_courtier_or_guest = {
				limit = {
					agot_has_dyed_hair = yes
				}
				save_scope_as = dyed_hair
			}
		}
		else = {
			create_character = {
				template = tyroshi_sellsword_character
				location = root.location
				save_scope_as = dyed_hair
			}
		}
	}

	option = { #Dye hair
		name = agot_childhood_events.0007.a
		custom_tooltip = agot_childhood_events.0007.tt

		add_trait = fashionable
		hidden_effect = {
			agot_random_hair_dye_effect = yes
		}
		ai_chance = {
			base = 30
			ai_value_modifier = {
				ai_sociability = 0.8
			}
		}
	}

	option = { #Nah
		name = agot_childhood_events.0007.b

		add_prestige = {
			value = minor_prestige_gain
		}
		ai_chance = {
			base = 70
			ai_value_modifier = {
				ai_sociability = -0.8
			}
		}
	}
	after = {
		hidden_effect = { #Kill the Sellsword post event
			if = {
				limit = {
					scope:dyed_hair = {
						NOT = {
							is_courtier_of = root
						}
					}
				}
				scope:dyed_hair = {
					death = {
						death_reason = death_vanished
					}
				}
			}
		}
	}
}

#Child Dyes Hair - Parent Perspective
agot_childhood_events.0008 = {
	type = character_event
	title = agot_childhood_events.0008.t
	desc = agot_childhood_events.0008.desc
	theme = court
	left_portrait = {
		character = root
		animation = disbelief
	}
	right_portrait = {
		character = scope:dyed_hair
		animation = ecstasy
	}

	trigger = {
		any_child = {
			age >= 6
			age < 16
			is_courtier_of = root
			OR = {
				childhood_nice_child_trigger = yes
				childhood_loud_child_trigger = yes
			}
		}
		NOT = { has_trait = fashionable }
		NOT = { has_variable = had_event_agot_childhood_events_0008 }
	}

	immediate = {
		set_variable = had_event_agot_childhood_events_0008
		random_child = {
			limit = {
				age >= 6
				age < 16
				is_courtier_of = root
				OR = {
					childhood_nice_child_trigger = yes
					childhood_loud_child_trigger = yes
				}
			}
			add_trait = fashionable
			agot_random_hair_dye_effect = yes
			save_scope_as = dyed_hair
		}
		capital_barony = {
			save_scope_as = home
		}
	}

	option = {
		name = agot_childhood_events.0008.a

		add_prestige = {
			value = minor_prestige_loss
		}

		ai_chance = { #Nice people will allow it
			base = 20
			ai_value_modifier = {
				ai_compassion = 0.8
			}
		}
	}

	option = {
		name = agot_childhood_events.0008.b
		scope:dyed_hair = {
			agot_remove_hair_dye_effect = yes
			add_opinion = {
				target = root
				modifier = told_off_by_sibling_opinion
				opinion = -30
			}
		}
		ai_chance = { #Meanies won't allow it
			base = 80
			ai_value_modifier = {
				ai_compassion = -0.8
			}
		}
	}

	option = {
		name = agot_childhood_events.0008.c
		custom_tooltip = agot_childhood_events.0008.c.tt
		trigger = {
			has_trait = eccentric
		}
		add_trait = fashionable
		hidden_effect = {
			agot_random_hair_dye_effect = yes
		}
		ai_chance = { #Do it weirdo
			base = 100
		}
	}
}

#Suggest a canon guardian for a canon child (player)
# root is the father
# scope:ward is the child that is to become a ward
# scope:guardian is the character that is to receive a guardianship offer
agot_childhood_events.0009 = {
	type = character_event
	title = agot_childhood_events.0009.t
	desc = agot_childhood_events.0009.desc
	theme = education
	override_background = {
		reference = bedchamber
	}
	left_portrait = {
		character = scope:ward_liege
		animation = thinking
	}
	lower_center_portrait = {
		character = scope:ward
	}
	right_portrait = {
		character = scope:guardian
		animation = idle
	}

	trigger = {
		OR = {
			scope:child.father = { is_ai = no }
			scope:child.mother = { is_ai = no }
		}
		scope:ward = { agot_canon_children_can_get_guardian_trigger = yes }
		OR = {
			scope:guardian = {
				agot_canon_children_can_become_guardian = {
					WARD = scope:ward
					WARD_LIEGE = scope:ward_liege
					GUARDIAN_LIEGE = scope:guardian_liege
				}
			}
			agot_canon_children_should_use_liege_as_guardian_for_heir_trigger = yes
		}
		scope:child = { NOT = { has_character_flag = generic_secret_identity } } #To ensure secret identity characters are excluded
	}

	option = {
		name = agot_childhood_events.0009.a
		custom_tooltip = agot_childhood_events.0009.a.tt
		highlight_portrait = scope:guardian_liege

		trigger = {
			agot_canon_children_should_use_liege_as_guardian_for_heir_trigger = yes
		}

		agot_canon_children_set_guardian_effect = { GUARDIAN = scope:ward_liege }

		ai_chance = { base = 1000 }
	}

	option = {
		name = agot_childhood_events.0009.b
		custom_tooltip = agot_childhood_events.0009.b.tt
		highlight_portrait = scope:guardian

		trigger = {
			scope:guardian = {
				agot_canon_children_can_become_guardian = {
					WARD = scope:ward
					WARD_LIEGE = scope:ward_liege
					GUARDIAN_LIEGE = scope:guardian_liege
				}
			}
		}

		agot_canon_children_set_guardian_effect = { GUARDIAN = scope:guardian }

		ai_chance = {
			base = 0
			modifier = {
				add = 1000
				agot_canon_children_should_use_liege_as_guardian_for_heir_trigger = no
			}
		}
	}

	option = {
		name = agot_childhood_events.0009.c
		custom_tooltip = agot_childhood_events.0009.c.tt

		open_interaction_window = {
			interaction = educate_child_interaction
			actor = scope:ward_liege
			recipient = scope:ward_liege
			secondary_recipient = scope:ward
		}

		ai_chance = { base = 0 }
	}

	option = {
		name = agot_childhood_events.0009.d
		custom_tooltip = agot_childhood_events.0009.d.tt

		ai_chance = { base = 0 }
		is_cancel_option = yes
	}

	after = {
		scope:ward = { remove_variable = canon_guardian }
	}
}

#Set a canon guardian for a canon child (AI)
# root is the child
# scope:ward is the child that is to become a ward
# scope:guardian is the character that is to receive a guardianship offer
agot_childhood_events.0010 = {
	hidden = yes

	trigger = {
		scope:ward = { agot_canon_children_can_get_guardian_trigger = yes }
		OR = {
			scope:guardian = {
				agot_canon_children_can_become_guardian = {
					WARD = scope:ward
					WARD_LIEGE = scope:ward_liege
					GUARDIAN_LIEGE = scope:guardian_liege
				}
			}
			agot_canon_children_should_use_liege_as_guardian_for_heir_trigger = yes
		}
		scope:child = { NOT = { has_character_flag = generic_secret_identity } } #To ensure secret identity characters are excluded
	}

	immediate = {
		scope:ward = { remove_variable = canon_guardian }

		if = {
			limit = { agot_canon_children_should_use_liege_as_guardian_for_heir_trigger = yes }
			agot_canon_children_set_guardian_effect = { GUARDIAN = scope:ward_liege }
		}
		else = {
			agot_canon_children_set_guardian_effect = { GUARDIAN = scope:guardian }
		}
	}
}