namespace = agot_proclamation_events

# Empire tier kingdom Proclamation for Seven Kingdoms and Westeros
agot_proclamation_events.0001 = {
	type = character_event
	title = agot_proclamation_events.0001.t
	desc = agot_proclamation_events.0001.desc
	#override_background = {
	#	reference =
	#}
	override_icon = {
		reference = "gfx/interface/icons/event_types/type_war.dds"
	}
	theme = war
	left_portrait = {
		character = ROOT
		#animation =
	}
	right_portrait = {
		character = scope:right_portrait
		#animation =
	}

	immediate = {
		save_scope_as = new_king
		primary_title = { save_scope_as = old_kingdom }
		# Get the empire title
		agot_proclaim_kingdom_effect = { SWITCH_TRIGGER = primary_title }
	}

	option = { #
		name = agot_proclamation_events.0001.a

		# Send notifications to your vassals and your neighbours
		every_vassal_or_below = {
			limit = { primary_title.tier > tier_barony }
			trigger_event = agot_proclamation_events.0002
		}
		every_player = {
			limit = {
				capital_county.title_province = { geographical_region = world_westeros_seven_kingdoms }
				NOT = { is_vassal_or_below_of = scope:new_king }
			}
			trigger_event = agot_proclamation_events.0002
		}

		trigger_event = agot_proclamation_events.0003
	}

	after = {
		if = {
			limit = {
				scope:new_king = {
					has_title = title:e_the_iron_islands
					NOT = { is_at_war = yes }
				}
			}
			every_ruler = {
				trigger_event = {
					id = agot_filler_westeros.0003
					days = 1
				}
				trigger_event = {
					id = agot_filler_westeros.0004
					days = 1
				}
				trigger_event = {
					id = agot_filler_westeros.0005
					days = 1
				}
				trigger_event = {
					id = agot_filler_westeros.0006
					days = 1
				}
			}
		}
		else_if = {
			limit = {
				scope:new_king = {
					has_title = title:e_dorne
					NOT = { is_at_war = yes }
				}
			}
			every_ruler = {
				trigger_event = {
					id = agot_filler_westeros.0007
					days = 1
				}
			}
		}
	}
}

# Notifications to your vassals and your neighbours
agot_proclamation_events.0002 = {
	type = letter_event
	opening = agot_proclamation_events.0002.t
	desc = agot_proclamation_events.0002.desc
	#override_background = {
	#	reference =
	#}
	override_icon = {
		reference = "gfx/interface/icons/event_types/type_war.dds"
	}
	#theme = war
	sender = scope:new_king

	immediate = {
	}

	option = { #
		name = agot_proclamation_events.0002.a
	}
}

# Take care of remaining kingdom tier titles
agot_proclamation_events.0003 = {
	type = character_event
	title = agot_proclamation_events.0003.t
	desc = agot_proclamation_events.0003.desc

	override_icon = {
		reference = "gfx/interface/icons/event_types/type_war.dds"
	}
	theme = war
	left_portrait = {
		character = root
	}

	immediate = {
		clear_saved_scope = new_empire_title
		clear_saved_scope = old_kingdom_title
		every_held_title = {
			limit = { tier = tier_kingdom }

			root = { add_to_variable_list = { name = root_kingdoms target = prev } }
		}
	}

	option = { #
		name = agot_proclamation_events.0003.a

		trigger = {
			mw_has_valid_proclamation_kingdom = no
		}

		if = {
			limit = {
				any_held_title = {
					tier = tier_kingdom
					any_title_to_title_neighboring_kingdom = {
						this = scope:old_kingdom
					}
				}
			}
			every_held_title = {
				limit = {
					tier = tier_kingdom
					OR = {
						any_title_to_title_neighboring_kingdom = {
							this = scope:old_kingdom
						}
						any_title_to_title_neighboring_kingdom = {

							any_title_to_title_neighboring_kingdom = {
								this = scope:old_kingdom
							}
						}
					}
				}
				set_de_jure_liege_title = root.primary_title
			}
		}
	}

	option = {
		name = agot_proclamation_events.0003.b

		trigger = {
			mw_has_valid_proclamation_kingdom = yes
		}

		every_in_list = {
			variable = root_kingdoms
			agot_proclaim_kingdom_effect = { SWITCH_TRIGGER = this }
		}
	}

	after = {
	}
}

##############################
# Iron Throne Alert Events   #
# 9900 - 9999                #
##############################

#on_title_gain hidden event to inform relevant players of Iron Throne succession
agot_proclamation_events.9900 = {
	hidden = yes

	trigger = {
		scope:title = title:e_the_iron_throne
	}

	immediate = {
		every_player = {
			limit = {
				NOT = { scope:new_holder = this }
				NOT = { scope:previous_holder = this }
			}
			if = {
				limit = {
					scope:transfer_type = flag:inheritance
					scope:new_holder = { NOT = { has_character_flag = usurper_proclamation_flag } }
				}
				send_interface_message = {
					type = msg_it_inheritance
					title = msg_it_inheritance_title
					desc = agot_proclamation_it_succession_msg_inheritance
					left_icon = scope:new_holder
					right_icon = scope:previous_holder
				}
			}
			else_if = {
				limit = {
					scope:transfer_type = flag:conquest
				}
				send_interface_message = {
					type = msg_it_inheritance
					title = msg_it_inheritance_title
					desc = agot_proclamation_it_succession_msg_conquest
					left_icon = scope:new_holder
					right_icon = scope:previous_holder
				}
			}
			else_if = {
				limit = {
					OR = {
						scope:transfer_type = flag:usurped
						scope:new_holder = { has_character_flag = usurper_proclamation_flag }
					}
				}
				send_interface_message = {
					type = msg_it_inheritance
					title = msg_it_inheritance_title
					desc = agot_proclamation_it_succession_msg_usurped
					left_icon = scope:new_holder
					right_icon = scope:previous_holder
				}
			}
			else_if = {
				limit = {
					scope:transfer_type = flag:abdication
				}
				send_interface_message = {
					type = msg_it_inheritance
					title = msg_it_inheritance_title
					desc = agot_proclamation_it_succession_msg_abdication
					left_icon = scope:new_holder
					right_icon = scope:previous_holder
				}
			}
			else = {
				send_interface_message = {
					type = msg_it_inheritance
					title = msg_it_inheritance_title
					desc = agot_proclamation_it_succession_msg_fallback
					left_icon = scope:new_holder
					right_icon = scope:previous_holder
				}
			}
		}
	}
}
