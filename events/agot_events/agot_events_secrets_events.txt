namespace = agot_secret_events

#I have been exposed as a Wildling
agot_secret_events.0001 = {
	type = character_event
	title = agot_secret_events.0001.t
	desc = agot_secret_events.0001.desc
	theme = secret
	right_portrait = scope:secret_exposer

	immediate = {
		secret_exposed_owner_effects_effect = { SECRET = scope:secret POV = root }
		secret_exposed_owner_opinion_effects_effect = yes
		play_music_cue = "mx_cue_murder"
	}

	option = {
		name = agot_secret_events.0001.a
		scope:secret_owner = {
			if = {
				limit = { is_female = yes }
				change_first_name = Alarra
			}
			else = {
				change_first_name = Alaric
			}
			var:orig_culture = {
				random_culture_county = {
					limit = { holder.culture = scope:secret_owner.var:orig_culture }
					holder = {
						random_courtier = {
							limit = {
								culture = scope:secret_owner.var:orig_culture
								OR = {
									AND = {
										is_male = yes
										scope:secret_owner = { is_male = yes }
									}
									AND = {
										is_female = yes
										scope:secret_owner = { is_female = yes }
									}
								}
							}
							save_scope_as = identity_theft_target
						}
					}
				}
			}
			change_first_name = { template_character = scope:identity_theft_target }
			set_culture = var:orig_culture
			set_character_faith = var:orig_faith
		}
	}
}

#Someone I care about has been exposed as a wildling
agot_secret_events.0101 = {
	type = character_event
	title = agot_secret_events.0101.t
	desc = agot_secret_events.0101.desc
	theme = secret
	override_background = {
		trigger = { allowed_to_imprison_character_trigger = { CHARACTER = scope:owner } } # Show throne room if you can order imprisonment
		reference = throne_room
	}
	left_portrait = scope:owner
	right_portrait = scope:secret_exposer

	immediate = {
		secret_exposed_notification_effects_effect = { SECRET = scope:secret CHARACTER = scope:owner }

		play_music_cue = "mx_cue_secret"
	}

	option = {
		trigger = {
			culture = { agot_is_wildling_culture = no }
		}
		name = {
			trigger = {
				opinion = {
					target = scope:owner
					value >= high_positive_opinion
				}
			}
			text = agot_secret_events.0101.likes_negative
		}
		name = {
			trigger = {
				opinion = {
					target = scope:owner
					value < high_positive_opinion
				}
			}
			text = agot_secret_events.0101.dislikes_negative
		}
	}


	#For liege: imprison
	option = {
		trigger = {
			allowed_to_imprison_character_trigger = { CHARACTER = scope:owner }
			culture = { agot_is_wildling_culture = no }
		}
		name = agot_secret_events.0101.b

		imprison_character_effect = {
			TARGET = scope:owner
			IMPRISONER = root
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_zeal = low_chance_impact_positive_ai_value
			}
			modifier = {
				has_trait = zealous
				add = 100
			}
			modifier = {
				opinion = {
					target = scope:owner
					value < 0
				}
				add = 100
			}
			modifier = {
				OR = {
					is_close_family_of = scope:owner
					is_spouse_of = scope:owner
					has_relation_lover = scope:owner
					has_relation_friend = scope:owner
				}
				add = -100
			}
		}
	}

	#For liege: forgive
	option = {
		trigger = {
			allowed_to_imprison_character_trigger = { CHARACTER = scope:owner }
			culture = { agot_is_wildling_culture = no }
		}
		name = agot_secret_events.0101.c

		reverse_add_opinion = {
			target = scope:owner
			modifier = grateful_opinion
			opinion = 30
		}

		stress_impact = {
			zealous = medium_stress_impact_gain
		}

		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = low_chance_impact_positive_ai_value
			}
			modifier = {
				has_trait = cynical
				add = 100
			}
			modifier = {
				scope:owner = { is_ai = no }
				add = 50
			}
		}
	}
}

#Secret Identities
agot_secret_events.1000 = {
	hidden = yes

	trigger = {
		any_secret = {
			secret_type = secret_agot_identity
		}
		trigger_if = {
			limit = { this = character:Stark_5 }
			character:Targaryen_1 = {
				OR = {
					is_alive = no
					NOT = { has_title = title:e_the_iron_throne }
				}
			}
		}
	}

	immediate = {
		every_secret = {
			limit = { secret_type = secret_agot_identity }
			expose_secret = root
		}
	}
}

agot_secret_events.1001 = {
	type = character_event
	title = agot_secret_events.1001.t
	desc = {
		desc = agot_secret_events.1001.desc
		triggered_desc = {
			trigger = {
				character:Targaryen_1 = {
					is_alive = yes
					has_title = title:e_the_iron_throne
				}
			}
			desc = agot_secret_events.1001.desc_aerys
		}
	}
	theme = secret

	override_background = {
		reference = agot_weirwood
	}

	left_portrait = {
		character = root
		animation = marshal
	}

	lower_left_portrait = {
		character = character:Blount_3
	}
	lower_center_portrait = {
		character = character:Haigh_27
	}
	lower_right_portrait = {
		character = character:Frey_35
	}

	immediate = {
		secret_exposed_owner_effects_effect = { SECRET = scope:secret POV = root }
		secret_exposed_owner_opinion_effects_effect = yes
		remove_character_flag = has_secret_identity

		if = {
			limit = {
				is_ai = no #prevents flag from getting immediately removed by ai recieving event
			}
			character:Stark_5 = { add_character_flag = knight_of_the_laughing_tree }
		}
		give_nickname = nick_knight_of_the_laughing_tree
		add_prestige_level = 1
		character:Targaryen_1 = { save_scope_as = aerys }
		if = {
			limit = {
				character:Blount_3 = { is_alive = yes }
			}
			character:Blount_3 = {
				add_opinion = {
					target = prev
					modifier = humiliated_opinion
					opinion = -40
				}
			}
		}
		if = {
			limit = {
				character:Haigh_27 = { is_alive = yes }
			}
			character:Haigh_27 = {
				add_opinion = {
					target = prev
					modifier = humiliated_opinion
					opinion = -40
				}
			}
		}
		if = {
			limit = {
				character:Frey_35 = { is_alive = yes }
			}
			character:Frey_35 = {
				add_opinion = {
					target = prev
					modifier = humiliated_opinion
					opinion = -40
				}
			}
		}
		if = {
			limit = {
				character:Targaryen_1 = { is_alive = yes }
			}
			character:Targaryen_1 = {
				add_opinion = {
					target = prev
					modifier = treachery_opinion
				}
			}
		}
		hidden_effect = {
			agot_create_personal_coa_for_historical_ai = { ACTOR = character:Stark_5 COA_KEY = lyanna_stark_personal_coa }
		}
	}

	option = {
		name = agot_secret_events.1001.a
	}

	after = {
		if = {
			limit = {
				is_ai = no #prevents flag from getting immediately removed by ai recieving event
			}
			character:Stark_5 = { remove_character_flag = knight_of_the_laughing_tree }
		}
	}
}

agot_secret_events.1002 = {
	type = character_event
	title = agot_secret_events.1002.t
	desc = {
		desc = agot_secret_events.1002.desc
		triggered_desc = {
			trigger = {
				character:Targaryen_1 = {
					is_alive = yes
					has_title = title:e_the_iron_throne
					NOT = { this = root }
				}
			}
			desc = agot_secret_events.1002.desc_aerys
		}
	}
	theme = secret

	override_background = {
		reference = agot_weirwood
	}

	left_portrait = {
		character = scope:owner
		animation = marshal
	}

	lower_left_portrait = {
		character = character:Blount_3
	}
	lower_center_portrait = {
		character = character:Haigh_27
	}
	lower_right_portrait = {
		character = character:Frey_35
	}

	immediate = {
		character:Targaryen_1 = { save_scope_as = aerys }
		secret_exposed_notification_effects_effect = { SECRET = scope:secret CHARACTER = scope:owner }
		if = {
			limit = {
				is_ai = no #prevents flag from getting immediately removed by ai recieving event
			}
			character:Stark_5 = { add_character_flag = knight_of_the_laughing_tree }
		}

		play_music_cue = "mx_cue_secret"
	}

	option = {
		name = agot_secret_events.1002.a
	}

	option = {
		trigger = {
			root = character:Targaryen_1
			has_title = title:e_the_iron_throne
		}
		name = agot_secret_events.1002.b

		imprison_character_effect = {
			TARGET = scope:owner
			IMPRISONER = root
		}
	}

	after = {
		if = {
			limit = {
				is_ai = no #prevents flag from getting immediately removed by ai recieving event
			}
			character:Stark_5 = { remove_character_flag = knight_of_the_laughing_tree }
		}
	}
}

###############################################################################################################################
### DYNAMIC SECRET IDENTITY 																								###
###############################################################################################################################

######### STORY START #########
### CHILD HAS GONE MISSING

#Make the Secret Child move to another court
agot_secret_events.2000 = {
	hidden = yes

	trigger = { is_alive = yes }

	immediate = {
		save_scope_as = secret_child
		scope:secret_child = { agot_move_secret_child = yes }
	}
}

#Keep only one secret child
agot_secret_events.2001 = {
	hidden = yes

	trigger = {
		is_alive = yes
		NOT = { has_character_flag = already_decided }
	}

	immediate = {
		add_character_flag = {
			flag = already_decided
			days = 90
		}
		random_in_list = {
			variable = random_secret_child_pool
			limit = { has_character_flag = generic_secret_identity }
			add_character_flag = {
				flag = i_am_the_one
				days = 90
			}
			save_scope_as = i_am_the_one
		}
		remove_list_variable = { name = random_secret_child_pool target = scope:i_am_the_one }
	}
}

#Kill unwanted secret child
agot_secret_events.2002 = {
	hidden = yes

	trigger = {
		is_alive = yes
		NOT = { has_character_flag = i_am_the_one }
	}

	immediate = {
		hidden_effect = {
			scope:secret_child = {
				var:secret_identity_character = { save_scope_as = dupe_char }
				title:c_ruins.holder = {
					trigger_event = {
						id = agot_secret_events.2003
						days = 1
					}
				}

				if = {
					limit = { exists = scope:king_executioner }
					death = { death_reason = death_execution killer = scope:king_executioner }
				}
				else = {
					death =  { death_reason = death_disappearance }
				}
			}
		}
	}
}

#Swap dead bodies
agot_secret_events.2003 = {
	hidden = yes

	immediate = {
		agot_swap_secret_child_bodies = yes
	}
}

######### YEARS LATER #########
### BECOMING ADULT

#Scenario: Secret Child is landless
agot_secret_events.2004 = {
	type = character_event
	title = agot_secret_events.2004.t
	desc = agot_secret_events.2004.desc
	theme = secret

	override_background = {
		reference = farmland
	}

	left_portrait = {
		character = scope:secret_child
		animation = thinking
	}

	right_portrait = {
		character = scope:helping_ruler
		animation = throne_room_ruler
	}

	trigger = {
		any_secret = { secret_type = secret_agot_identity }
		has_character_flag = generic_secret_identity
		is_alive = yes
		agot_can_be_ruler = yes
	}

	immediate = {
		play_music_cue = "mx_cue_secret"

		save_scope_as = secret_child
		liege = { save_scope_as = helping_ruler }

		save_opinion_value_as = {
			name = target_opinion
			target = scope:secret_child.var:secret_claim_capital.holder
		}
	}

	#Ask my liege if they want to help me push my claims
	option = {
		name = agot_secret_events.2004.a

		random_known_secret = {
			limit = {
				NOT = { is_known_by = scope:helping_ruler }
				secret_type = secret_agot_identity
			}
			reveal_to = scope:helping_ruler
		}

		scope:helping_ruler = {
			trigger_event = agot_secret_events.2007
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = 1
			}
		}
	}

	#My past self is dead, I won't reveal anyithing
	option = {
		name = agot_secret_events.2004.b

		remove_character_flag = has_secret_identity
		remove_character_flag = generic_secret_identity

		ai_chance = {
			base = 50
		}
	}

	#Time to go home
	option = {
		name = agot_secret_events.2004.c
		trigger = { scope:secret_child.var:secret_claim_capital.holder.house = scope:secret_child.var:secret_identity_character.house }

		agot_end_secret_identity_effect = yes
		scope:secret_child.var:secret_claim_capital.holder = {
			add_courtier = scope:secret_child
		}

		ai_chance = {
			base = 50

			ai_value_modifier = {
				ai_greed = 1
			}

			modifier = {
				scope:target_opinion > 10
				add = 100
			}
		}
	}

	#Adventure Time
	option = {
		name = agot_secret_events.2004.d

		random_ruler = {
			limit = { primary_title.tier > tier_barony }
			add_courtier = scope:secret_child
		}

		#Check again within 5 years
		agot_restart_adventure_effect = yes

		ai_chance = {
			base = 10

			ai_value_modifier = {
				ai_energy = 1
			}
		}
	}
}

#Scenario: Secret Child is landed and will push their claims
agot_secret_events.2005 = {
	type = character_event
	title = agot_secret_events.2005.t
	desc = agot_secret_events.2005.desc
	theme = secret

	override_background = {
		reference = farmland
	}

	right_portrait = {
		character = scope:secret_child
		animation = war_attacker
	}

	immediate = {
		save_opinion_value_as = {
			name = target_opinion
			target = scope:secret_child.var:secret_claim_capital.holder
		}
		scope:secret_child.var:secret_identity_character = {
			save_scope_as = true_char
		}
	}

	#Ye let's do it
	option = {
		name = agot_secret_events.2005.a
		custom_tooltip = agot_secret_events.2005.a.tt
		trigger = {
			scope:secret_child.top_liege = scope:secret_child.var:secret_claim_capital.holder.top_liege
			is_at_war = no
			scope:secret_child.var:secret_claim_capital.holder = {
				NOT = { has_variable = pre_war_liege }
				NOT = {
					any_relation = {
						type = friend
						this = scope:secret_child
					}
				}
				NOT = {
					any_relation = {
						type = lover
						this = scope:secret_child
					}
				}
			}
		}

		agot_end_secret_identity_effect = yes
		agot_secret_child_start_war_effect = yes

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = 1
			}
		}
	}

	#I reveal myself, but no war
	option = {
		name = agot_secret_events.2005.b

		agot_end_secret_identity_effect = yes

		ai_chance = {
			base = 50

			modifier = {
				scope:secret_child.var:secret_claim_capital.holder.house = scope:secret_child.var:secret_identity_character.house
				scope:target_opinion > 10
				add = 100
			}
		}
	}

	#I wait more
	option = {
		name = agot_secret_events.2005.c

		#Check again within 5 years
		agot_restart_adventure_effect = yes

		ai_chance = {
			base = 50
		}
	}

	#Nah
	option = {
		name = agot_secret_events.2005.d

		ai_chance = {
			base = 50
		}
	}
}

#Scenario: Secret Child is landed and refuses to push their claims
agot_secret_events.2006 = {
	type = character_event
	title = agot_secret_events.2006.t
	desc = agot_secret_events.2006.desc
	theme = secret

	override_background = {
		reference = farmland
	}

	right_portrait = {
		character = scope:secret_child
		animation = thinking
	}

	#I reveal myself
	option = {
		name = agot_secret_events.2006.a

		agot_end_secret_identity_effect = yes

		ai_chance = {
			base = 50
		}
	}

	#Nah
	option = {
		name = agot_secret_events.2006.b

		ai_chance = {
			base = 50
		}
	}
}

### WAR EVENTS

#Scenario: Secret Child is landless - Liege helps in war or not
agot_secret_events.2007 = {
	type = character_event
	title = agot_secret_events.2007.t
	desc = agot_secret_events.2007.desc
	theme = secret

	override_background = {
		reference = farmland
	}

	left_portrait = {
		character = scope:secret_child
		animation = thinking
	}

	right_portrait = {
		character = scope:helping_ruler
		animation = throne_room_ruler
	}

	immediate = {
		play_music_cue = "mx_cue_secret"

		scope:secret_child.var:secret_identity_character = {
			save_scope_as = true_char
		}

		save_opinion_value_as = {
			name = holder_opinion
			target = scope:secret_child.var:secret_claim_capital.holder
		}
		save_opinion_value_as = {
			name = secret_child_opinion
			target = scope:secret_child
		}
	}

	#Ye let's do it
	option = {
		name = agot_secret_events.2007.a
		custom_tooltip = agot_secret_events.2007.a.tt
		trigger = {
			scope:helping_ruler.top_liege = scope:secret_child.var:secret_claim_capital.holder.top_liege
			is_at_war = no
			scope:secret_child.var:secret_claim_capital.holder = {
				NOT = { has_variable = pre_war_liege }
				NOT = { is_allied_to = scope:helping_ruler }
				NOT = {
					any_close_family_member = {
						this = scope:helping_ruler
					}
				}
				NOT = {
					any_relation = {
						type = friend
						this = scope:helping_ruler
					}
				}
				NOT = {
					any_relation = {
						type = lover
						this = scope:helping_ruler
					}
				}
			}
		}

		scope:secret_child = { agot_end_secret_identity_effect = yes }
		agot_secret_child_start_war_effect = yes

		ai_chance = {
			base = 50

			ai_value_modifier = {
				ai_boldness = 1
			}
		}
	}

	#Nah
	option = {
		name = agot_secret_events.2007.b

		scope:secret_child = {
			trigger_event = {
				id = agot_secret_events.2008
				days = 7
			}
		}

		ai_chance = {
			base = 50

			modifier = {
				add = 100

				scope:holder_opinion > scope:secret_child_opinion
			}
		}
	}
}

#Scenario: Secret Child is landless - Secret Child not going to war
agot_secret_events.2008 = {
	type = character_event
	title = agot_secret_events.2008.t
	desc = agot_secret_events.2008.desc
	theme = secret

	override_background = {
		reference = farmland
	}

	right_portrait = {
		character = scope:secret_child
		animation = thinking
	}

	#Anyway, I'm still revealing my true self
	option = {
		name = agot_secret_events.2008.a

		agot_end_secret_identity_effect = yes

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_rationality = -1
			}
		}
	}

	#Ok
	option = {
		name = agot_secret_events.2008.b

		ai_chance = {
			base = 50
		}
	}

	#Adventure Time
	option = {
		name = agot_secret_events.2008.c

		random_ruler = {
			limit = { primary_title.tier > tier_barony }
			add_courtier = scope:secret_child
		}

		#Check again within 5 years
		agot_restart_adventure_effect = yes

		ai_chance = {
			base = 50

			ai_value_modifier = {
				ai_energy = 1
			}
		}
	}
}

#Revealed
agot_secret_events.2009 = {
	type = character_event
	title = agot_secret_events.2009.t
	desc = agot_secret_events.2009.desc
	theme = secret

	trigger = {
		NOT = { has_character_flag = reveal_notification_already_sent }
	}

	override_background = {
		reference = farmland
	}

	right_portrait = {
		character = scope:secret_child
		animation = thinking
	}

	#Ok
	option = {
		name = agot_secret_events.2009.a
	}
}