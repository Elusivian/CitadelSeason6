# Based on 'agot_events_dragon_dreams.txt'
namespace = agot_greensight

####################
# SCHEME DISCOVERY #
####################

agot_greensight.0001 = {  # By: Steelers
	type = character_event
	title = hostile_scheme_discovery.1001.t
	desc = {
		first_valid = {  # Intro desc
			triggered_desc = {
				trigger = {
					scope:greenseer = scope:target.host
				}
				desc = agot_greensight.0001.intro_own_foresight
			}
			triggered_desc = {
				trigger = {
					exists = scope:greenseer.location
					exists = scope:target.host.location
					scope:greenseer.location = scope:target.host.location
				}
				desc = agot_greensight.0001.intro_visit
			}
			desc = agot_greensight.0001.intro_letter
		}
		first_valid = {  # Type of scheme to be exposed
			triggered_desc = {
				trigger = {
					scope:scheme = { scheme_type = murder }
				}
				desc = agot_greensight.0001.murder
			}
			triggered_desc = {
				trigger = {
					scope:scheme = { scheme_type = abduct }
				}
				desc = agot_greensight.0001.abduction
			}
			triggered_desc = {
				trigger = {
					scope:scheme = { scheme_type = elope }
				}
				desc = agot_greensight.0001.elope
			}
			triggered_desc = {
				trigger = {
					scope:scheme = { scheme_type = steal_back_artifact }
				}
				desc = hostile_scheme_discovery.2001.steal_back_artifact
			}
			desc = agot_greensight.0001.fallback
		}
		first_valid = {  # Relation to Seer
			triggered_desc = {
				trigger = {
					NOT = { scope:target = root }
					scope:target = scope:greenseer
				}
				desc = agot_greensight.0001.target_seer
			}
			triggered_desc = {
				trigger = {
					NOT = { scope:target = root }
				}
				desc = agot_greensight.0001.target_other
			}
			desc = agot_greensight.0001.target_me
		}
		first_valid = {  # Reflection of Relation to Seer
			triggered_desc = {
				trigger = {
					scope:greenseer = {
						has_character_flag = greensight
						is_child_of = root
					}
				}
				desc = agot_greensight.0001.child_new_seer
			}
			triggered_desc = {
				trigger = {
					scope:greenseer = {
						has_character_flag = greensight
						this = root
					}
				}
				desc = agot_greensight.0001.self_new_seer
			}
			triggered_desc = {
				trigger = {
					scope:greenseer = {
						has_character_flag = greensight
					}
				}
				desc = agot_greensight.0001.relative_new_seer
			}
			desc = agot_greensight.0001.known_seer
		}
	}
	theme = generic_intrigue_scheme
	left_portrait = {
		character = scope:greenseer
		animation = paranoia
	}
	right_portrait = {
		trigger = {
			NOT = { scope:target = scope:greenseer }
		}
		character = scope:target
		animation = disbelief
	}

	immediate = {
		play_music_cue = "mx_cue_murder"
		scope:greenseer = {
			add_stress = major_stress_gain
			add_character_flag = {
				flag = foreseen
				days = 730
			}
		}
	}

	option = {  # Schemes are bad
		name = hostile_scheme_discovery.2001.a
		trait = greensight

		scope:greenseer = {
			if = {
				limit = { has_character_flag = greensight }
				remove_character_flag = greensight
				add_trait = greensight
			}
		}
		scope:scheme = {
			expose_scheme = yes
		}
		scope:owner = {
			trigger_event = hostile_scheme_discovery.3002
		}
	}
}

###################
# HARM PREVENTION #
###################

agot_greensight.0100 = {
	type = character_event
	title = agot_greensight.0100.t
	desc = {
		desc = agot_greensight.0100.desc.1
		first_valid = {
			triggered_desc = {
				trigger = { has_character_flag = root_is_seer }
				desc = agot_greensight.0100.desc.root_is_seer
			}
			triggered_desc = {
				trigger = { exists = var:seer }
				desc = agot_greensight.0100.desc.other_seer
			}
			desc = agot_greensight.0100.desc.fallback
		}
	}
	theme = intrigue

	option = {
		name = agot_greensight.0100.a
		trait = greensight
	}
}
