namespace = agot_dragon_dreams

####################
# SCHEME DISCOVERY #
####################

agot_dragon_dreams.0001 = {
	type = character_event
	title = hostile_scheme_discovery.1001.t
	desc = {
		desc = {
			first_valid = {
				triggered_desc = {
					trigger = {
						scope:dragon_dreamer = scope:target.host
					}
					desc = agot_dragon_dreams.0001.intro_own_dream
				}
				triggered_desc = {
					trigger = {
						exists = scope:dragon_dreamer.location
						exists = scope:target.host.location
						scope:dragon_dreamer.location = scope:target.host.location
					}
					desc = agot_dragon_dreams.0001.intro_visit
				}
				desc = agot_dragon_dreams.0001.intro_letter
			}
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:scheme = {
						scheme_type = murder
					}
				}
				desc = agot_dragon_dreams.0001.murder
			}
			triggered_desc = {
				trigger = {
					scope:scheme = {
						scheme_type = abduct
					}
				}
				desc = agot_dragon_dreams.0001.abduction
			}
			triggered_desc = {
				trigger = {
					scope:scheme = {
						scheme_type = elope
					}
				}
				desc = agot_dragon_dreams.0001.elope
			}
			triggered_desc = {
				trigger = {
					scope:scheme = {
						scheme_type = steal_back_artifact
					}
				}
				desc = hostile_scheme_discovery.2001.steal_back_artifact
			}
			desc = agot_dragon_dreams.0001.fallback
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					NOT = { scope:target = root }
					scope:target = scope:dragon_dreamer
				}
				desc = agot_dragon_dreams.0001.target_dreamer
			}
			triggered_desc = {
				trigger = {
					NOT = { scope:target = root }
				}
				desc = agot_dragon_dreams.0001.target_other
			}
			desc = agot_dragon_dreams.0001.target_me
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:dragon_dreamer = {
						has_character_flag = dragon_dreams
						is_child_of = root
					}
				}
				desc = agot_dragon_dreams.0001.child_new_dreamer
			}
			triggered_desc = {
				trigger = {
					scope:dragon_dreamer = {
						has_character_flag = dragon_dreams
						this = root
					}
				}
				desc = agot_dragon_dreams.0001.self_new_dreamer
			}
			triggered_desc = {
				trigger = {
					scope:dragon_dreamer = {
						has_character_flag = dragon_dreams
					}
				}
				desc = agot_dragon_dreams.0001.relative_new_dreamer
			}
			triggered_desc = {
				trigger = {
					scope:dragon_dreamer = root
				}
				desc = agot_dragon_dreams.0001.known_dreamer_self
			}
			desc = agot_dragon_dreams.0001.known_dreamer
		}
	}
	theme = generic_intrigue_scheme
	left_portrait = {
		character = scope:dragon_dreamer
		animation = paranoia
	}
	right_portrait = {
		trigger = {
			NOT = { scope:target = scope:dragon_dreamer }
		}
		character = scope:target
		animation = disbelief
	}

	immediate = {
		play_music_cue = "mx_cue_murder"
		scope:dragon_dreamer = {
			add_stress = major_stress_gain
			add_character_flag = {
				flag = dreamt
				days = 730
			}
		}
	}

	#Schemes are bad
	option = {
		trait = dragon_dreams
		scope:dragon_dreamer = {
			if = {
				limit = { has_character_flag = dragon_dreams }
				remove_character_flag = dragon_dreams
				add_trait = dragon_dreams
			}
		}

		name = hostile_scheme_discovery.2001.a
		scope:scheme = {
			expose_scheme = yes
		}
		scope:owner = {
			trigger_event = hostile_scheme_discovery.3002
		}
	}
}

###################
# HARM PREVENTION #
###################

agot_dragon_dreams.0100 = {
	type = character_event
	title = agot_dragon_dreams.0100.t
	desc = {
		desc = agot_dragon_dreams.0100.desc.1
		first_valid = {
			triggered_desc = {
				trigger = { has_character_flag = root_is_dreamer }
				desc = agot_dragon_dreams.0100.desc.root_is_dreamer
			}
			triggered_desc = {
				trigger = { exists = var:dreamer }
				desc = agot_dragon_dreams.0100.desc.other_dreamer
			}
			desc = agot_dragon_dreams.0100.desc.fallback
		}
	}
	theme = intrigue

	option = {
		name = agot_dragon_dreams.0100.a
		trait = dragon_dreams
	}
}
