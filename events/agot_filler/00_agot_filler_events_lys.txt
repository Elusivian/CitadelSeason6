namespace = agot_filler_lys

###############################################################################
# LYS THE LOVELY (0001-0010)
#   agot_filler_lys.0001 - Admiring the beauty of the city
#
# CAPTURED PIRATE (0011-0020)
#   agot_filler_lys.0011 - Pirate caught by guards is brought to you for judgement
#
# TEAR OF LYS MURDER MYSTERY (0021-0030)
#   agot_filler_lys.0021 - TODO: Start of Tears of Lys murder Mystery
#     agot_filler_lys.0022 - TODO:
#     ...
#
# A DAY AT THE MARKET (0031-0050)
#   agot_filler_lys.0031 - Start of spending the day at the market event chain
#     agot_filler_lys.0032 - Begin exploring the market v1
#       agot_filler_lys.0033 - Looking at jewelry
#       agot_filler_lys.0034 - Looking at tomes and scrolls
#       agot_filler_lys.0035 - Looking at furniture
#     agot_filler_lys.0040 - Begin exploring the market v2
#       agot_filler_lys.0041 - Visiting the alchemist
#       agot_filler_lys.0042 - Visiting the armorer
#       agot_filler_lys.0043 - Looking at perfumes
#
###############################################################################


##############################
# LYS THE LOVELY (0001-0010) #
##############################

# 0001 - Admiring the beauty of the city
# by: Steelers
agot_filler_lys.0001 = {
	type = character_event
	title = agot_filler_lys.0001.t
	desc = agot_filler_lys.0001.desc
	theme = seduction
	override_background = { reference = market }

	right_portrait = {
		character = root
		animation = admiration
	}

	trigger = {
		is_available = yes
		root.location = { geographical_region = world_essos_lys }
	}

	immediate = {
		# For lustful option, if player is unmarried/lover-less
		create_character = {
			location = root.location
			template = agot_succubus
			save_scope_as = succubus
		}
		# For modifier description
		set_variable = {
			name = Lys
			value = province:7388  # 7388 = b_lys
		}
	}

	# Makes me want to learn architecture
	option = {
		name = agot_filler_lys.0001.a
		ai_chance = {
			base = 25
			modifier = {
				add = 25
				OR = {
					stewardship >= medium_skill_rating
					has_education_stewardship_trigger = yes
					has_trait = shrewd
					has_trait_rank = {
						trait = intellect_good
						rank >= 1
					}
				}
			}
			modifier = {
				add = -25
				has_trait = lazy
			}
		}
		stress_impact = {
			lazy = miniscule_stress_gain
		}
		random_list = {
			75 = {  # Good outcome
				desc = agot_filler_lys.0001.a.a
				random_list = {
					0 = {  # Gain trait 'architect'
						trigger = { NOT = { has_trait = architect } }
						modifier = {
							add = 1
							OR = {
								AND = {
									stewardship > medium_skill_rating
									stewardship < high_skill_rating
								}
								has_trait = intellect_good_1
								has_trait = education_stewardship_2
							}
						}
						modifier = {
							add = 3
							OR = {
								AND = {
									stewardship >= high_skill_rating
									stewardship < extremely_high_skill_rating
								}
								has_trait = shrewd
								has_trait = intellect_good_2
								has_trait = education_stewardship_3
							}
						}
						modifier = {
							add = 5
							OR = {
								stewardship >= extremely_high_skill_rating
								has_trait = intellect_good_3
								has_trait = education_stewardship_4
							}
						}
						add_trait = architect
					}
					10 = {  # Gain massive stewardship exp.
						add_stewardship_lifestyle_xp = massive_lifestyle_xp
					}
					20 = {  # Gain big stewardship exp.
						add_stewardship_lifestyle_xp = major_lifestyle_xp
					}
					20 = {  # Gain character modifier
						add_character_modifier = {
							modifier = confident_organizer
							desc = agot_filler_lys.0001.modifier_desc
							years = 3
						}
					}
					20 = {  # Gain character modifier
						add_character_modifier = {
							modifier = useful_insights_modifier
							desc = agot_filler_lys.0001.modifier_desc
							years = 3
						}
					}
				}
				stress_impact = {
					diligent = miniscule_stress_loss
					stubborn = miniscule_stress_loss
				}
			}
			25 = {  # Bad outcome
				desc = agot_filler_lys.0001.a.b
				add_character_modifier = {
					modifier = confused_modifier
					years = 3
				}
				stress_impact = {
					base = miniscule_stress_gain
					diligent = miniscule_stress_gain
					stubborn = miniscule_stress_gain
				}
			}
		}
	}

	# Makes me want to learn about the world
	option = {
		name = agot_filler_lys.0001.b
		ai_chance = {
			base = 25
			modifier = {
				add = 25
				OR = {
					learning >= medium_skill_rating
					has_education_learning_trigger = yes
					has_trait = shrewd
					has_trait_rank = {
						trait = intellect_good
						rank >= 1
					}
				}
			}
			modifier = {
				add = -25
				has_trait = lazy
			}
		}
		stress_impact = {
			lazy = miniscule_stress_gain
		}
		random_list = {
			75 = {  # Good outcome
				desc = agot_filler_lys.0001.a.a
				random_list = {
					0 = {  # Gain trait 'scholar'
						trigger = { NOT = { has_trait = scholar } }
						modifier = {
							add = 1
							OR = {
								AND = {
									learning > medium_skill_rating
									learning < high_skill_rating
								}
								has_trait = intellect_good_1
								has_trait = education_learning_2
							}
						}
						modifier = {
							add = 3
							OR = {
								AND = {
									learning >= high_skill_rating
									learning < extremely_high_skill_rating
								}
								has_trait = shrewd
								has_trait = intellect_good_2
								has_trait = education_learning_3
							}
						}
						modifier = {
							add = 5
							OR = {
								learning >= extremely_high_skill_rating
								has_trait = intellect_good_3
								has_trait = education_learning_4
							}
						}
						add_trait = scholar
					}
					10 = {  # Gain massive learning exp.
						add_learning_lifestyle_xp = massive_lifestyle_xp
					}
					20 = {  # Gain big learning exp.
						add_learning_lifestyle_xp = major_lifestyle_xp
					}
					20 = {  # Gain character modifier
						add_character_modifier = {
							modifier = confident_scholar
							desc = agot_filler_lys.0001.modifier_desc
							years = 3
						}
					}
					20 = {  # Gain character modifier
						add_character_modifier = {
							modifier = useful_insights_modifier
							desc = agot_filler_lys.0001.modifier_desc
							years = 3
						}
					}
				}
				stress_impact = {
					diligent = miniscule_stress_loss
					stubborn = miniscule_stress_loss
				}
			}
			25 = {  # Bad outcome
				desc = agot_filler_lys.0001.a.b
				add_character_modifier = {
					modifier = confused_modifier
					years = 3
				}
				stress_impact = {
					base = miniscule_stress_gain
					diligent = miniscule_stress_gain
					stubborn = miniscule_stress_gain
				}
			}
		}
	}

	# Makes me feel lustful
	option = {
		name = agot_filler_lys.0001.c
		trigger = { is_adult = yes }
		ai_chance = {
			base = 25
			modifier = {
				add = 50
				has_trait = lustful
			}
			modifier = {
				add = -25
				has_trait = chaste
			}
			modifier = {
				add = -100
				exists = scope:cheated_on_betrothed
			}
		}
		stress_impact = {
			lustful = medium_stress_loss
			chaste = medium_stress_gain
		}
		if = {
			limit = { exists = primary_spouse }
			had_sex_with_effect = {
				CHARACTER = primary_spouse
				PREGNANCY_CHANCE = pregnancy_chance
			}
		}
		else_if = {
			limit = { exists = primary_partner }
			had_sex_with_effect = {
				CHARACTER = primary_partner
				PREGNANCY_CHANCE = pregnancy_chance
			}
		}
		else_if = {
			limit = { any_relation = { type = soulmate } }
			random_relation = {
				type = soulmate
				save_scope_as = soulmate
			}
			had_sex_with_effect = {
				CHARACTER = scope:soulmate
				PREGNANCY_CHANCE = pregnancy_chance
			}
		}
		else_if = {
			limit = { any_relation = { type = lover } }
			random_relation = {
				type = lover
				save_scope_as = lover
			}
			had_sex_with_effect = {
				CHARACTER = scope:lover
				PREGNANCY_CHANCE = pregnancy_chance
			}
		}
		else_if = {
			limit = { any_relation = { type = paramour } }
			random_relation = {
				type = paramour
				save_scope_as = paramour
			}
			had_sex_with_effect = {
				CHARACTER = scope:paramour
				PREGNANCY_CHANCE = pregnancy_chance
			}
		}
		else_if = {
			limit = { exists = betrothed }
			if = {
				limit = { betrothed = { is_adult = yes } }
				had_sex_with_effect = {
					CHARACTER = betrothed
					PREGNANCY_CHANCE = pregnancy_chance
				}
			}
			else = {
				save_temporary_scope_as = cheated_on_betrothed
				had_sex_with_effect = {
					CHARACTER = scope:succubus
					PREGNANCY_CHANCE = pregnancy_chance
				}
				save_scope_as = slept_with_succubus
			}
		}
		else = {
			had_sex_with_effect = {
				CHARACTER = scope:succubus
				PREGNANCY_CHANCE = pregnancy_chance
			}
			save_scope_as = slept_with_succubus
		}
	}

	# Makes me feel relaxed
	option = {
		name = agot_filler_lys.0001.d
		ai_chance = {
			base = 25
			modifier = {
				add = 25
				has_trait = lazy
			}
			modifier = {
				add = 5
				has_trait = calm
			}
		}
		add_character_modifier = {
			modifier = clear_mind_modifier
			desc = agot_filler_lys.0001.modifier_desc
			years = 3
		}
		stress_impact = {
			base = minor_stress_loss
			calm = miniscule_stress_loss
			lazy = medium_stress_loss
		}
	}

	after = {
		remove_variable = Lys
		if = {
			limit = { NOT = { exists = scope:slept_with_succubus } }
			scope:succubus = { silent_disappearance_effect = yes }
		}
	}
}


###############################
# CAPTURED PIRATE (0011-0020) #
###############################

# 0011 - Pirate caught by guards is brought to you for judgement
# by: Steelers
agot_filler_lys.0011 = {
	type = character_event
	title = agot_filler_lys.0011.t
	desc = agot_filler_lys.0011.desc
	theme = corruption
	override_background = { reference = throne_room }

	right_portrait = {
		character = root
		animation = personality_bold
	}
	left_portrait = {
		character = scope:pirate
		animation = beg
	}

	trigger = {
		is_available = yes
		is_landed = yes
		capital_county.title_province = { geographical_region = world_essos_lys }
		any_held_county = {
			is_coastal_county = yes
		}
	}

	immediate = {
		remove_short_term_gold = 15
		random_list = {
			85 = {
				create_character = {
					location = root.location
					template = agot_pirate_character
					save_scope_as = pirate
				}
			}
			10 = {
				create_character = {
					location = root.location
					template = agot_pirate_character_leader
					save_scope_as = pirate
				}
			}
			5 = {
				create_character = {
					location = root.location
					template = agot_friendly_pirate_character_leader
					save_scope_as = pirate
				}
			}
		}
		scope:pirate = {
			set_variable = {
				name = skill_val
				value = sum_of_all_skills_and_prowess_value
			}
		}
	}

	# Imprison the pirate
	option = {
		name = agot_filler_lys.0011.a
		custom_tooltip = agot_filler_lys.0011.returned_gold.tt
		ai_chance = {
			base = 50
			modifier = {
				add = 50
				has_trait = just
			}
			modifier = {
				add = -25
				has_trait = sadistic
			}
			modifier = {
				add = -25
				has_trait = wrathful
			}
			modifier = {
				add = -25
				has_trait = vengeful
			}
			modifier = {
				add = -25
				has_trait = torturer
			}
			modifier = {
				add = -25
				has_trait = lunatic_1
			}
			modifier = {
				add = -25
				has_trait = lunatic_genetic
			}
		}
		rightfully_imprison_character_effect = {
			TARGET = scope:pirate
			IMPRISONER = root
		}
		stress_impact = {
			sadistic = minor_stress_gain
			wrathful = minor_stress_gain
			vengeful = minor_stress_gain
			torturer = medium_stress_gain
			lunatic_1 = major_stress_gain
			lunatic_genetic = major_stress_gain
		}
		add_gold = 15
	}

	# Execute the pirate
	option = {
		name = agot_filler_lys.0011.b
		custom_tooltip = agot_filler_lys.0011.returned_gold.tt
		ai_chance = {
			base = 15
			modifier = {
				add = 100
				has_trait = sadistic
			}
			modifier = {
				add = 100
				has_trait = wrathful
			}
			modifier = {
				add = 100
				has_trait = vengeful
			}
			modifier = {
				add = 100
				has_trait = torturer
			}
			modifier = {
				add = 100
				has_trait = lunatic_1
			}
			modifier = {
				add = 100
				has_trait = lunatic_genetic
			}
			modifier = {
				add = -25
				has_trait = just
			}
			modifier = {
				add = -25
				has_trait = compassionate
			}
			modifier = {
				add = -25
				has_trait = calm
			}
			modifier = {
				add = -25
				has_trait = forgiving
			}
		}
		scope:pirate = {
			death = {
				killer = root
				death_reason = death_execution
			}
		}
		stress_impact = {
			sadistic = minor_stress_loss
			wrathful = minor_stress_loss
			vengeful = minor_stress_loss
			torturer = medium_stress_loss
			lunatic_1 = major_stress_loss
			lunatic_genetic = major_stress_loss
			just = minor_stress_gain
			calm = minor_stress_gain
			compassionate = major_stress_gain
			forgiving = major_stress_gain
		}
		add_gold = 15
	}

	# Add the pirate to your court
	option = {
		name = agot_filler_lys.0011.c
		custom_tooltip = agot_filler_lys.0011.no_returned_gold.tt
		ai_chance = {
			base = -25
			modifier = {
				add = scope:pirate.var:skill_val
			}
		}
		add_courtier = scope:pirate
	}

	# Let the pirate go
	option = {
		name = agot_filler_lys.0011.d
		custom_tooltip = agot_filler_lys.0011.returned_gold.tt
		ai_chance = {
			base = 5
			modifier = {
				add = 100
				has_trait = compassionate
			}
			modifier = {
				add = 100
				has_trait = forgiving
			}
			modifier = {
				add = -25
				has_trait = sadistic
			}
			modifier = {
				add = -25
				has_trait = wrathful
			}
			modifier = {
				add = -25
				has_trait = vengeful
			}
			modifier = {
				add = -25
				has_trait = torturer
			}
			modifier = {
				add = -25
				has_trait = lunatic_1
			}
			modifier = {
				add = -25
				has_trait = lunatic_genetic
			}
		}
		save_scope_as = let_pirate_go
		stress_impact = {
			compassionate = major_stress_loss
			forgiving = major_stress_loss
			sadistic = minor_stress_gain
			wrathful = minor_stress_gain
			vengeful = minor_stress_gain
			torturer = medium_stress_gain
			lunatic_1 = major_stress_gain
			lunatic_genetic = major_stress_gain
		}
		add_gold = 15
	}

	after = {
		if = {
			limit = { exists = scope:let_pirate_go }
			scope:pirate = { silent_disappearance_effect = yes }
		}
	}
}


##############################
# TEAR OF LYS MURDER MYSTERY #
##############################

# 0021 - Start of Tears of Lys murder Mystery
# STEELERS TODO:


###################################
# A DAY AT THE MARKET (0031-0050) #
###################################

#####################
# 0031 - CHAIN HEAD #
#####################

# 0031 - Start of spending the day at the market event chain
# by: Steelers
agot_filler_lys.0031 = {
	type = character_event
	title = agot_filler_lys.0031.t
	desc = agot_filler_lys.0031.desc
	theme = stewardship
	override_background = { reference = market }

	right_portrait = {
		character = root
		animation = happiness  # thinking  # boredom
	}

	trigger = {
		is_available_adult = yes
		is_landed = yes
		capital_county.title_province ?= { geographical_region = world_essos_lys_city }
		short_term_gold >= medium_gold_value_check
		NOT = { has_character_flag = went_to_super_market }
	}

	weight_multiplier = {
		base = 0
		modifier = {
			add = 0.5
			short_term_gold >= major_gold_value
		}
		modifier = {
			add = 0.5
			short_term_gold >= massive_gold_value
		}
	}

	option = {  # Yes, I want to go to the market
		name = agot_filler_lys.0031.a

		ai_chance = {
			base = 90
			modifier = {
				add = 50
				has_trait = gregarious
			}
			modifier = {
				add = -50
				has_trait = shy
			}
		}
		stress_impact = {
			greedy = miniscule_stress_loss
			gregarious = miniscule_stress_loss
			shy = miniscule_stress_gain
		}
		hidden_effect = {
			add_character_flag = went_to_super_market
			random_list = {
				50 = {
					trigger_event = agot_filler_lys.0032
				}
				50 = {
					trigger_event = agot_filler_lys.0040
				}
			}
		}
	}

	option = {  # No, I don't want to go to the market
		name = agot_filler_lys.0031.b

		ai_chance = {
			base = 10
			modifier = {
				add = 50
				has_trait = lazy
			}
			modifier = {
				add = 50
				has_trait = content
			}
		}
		stress_impact = {
			lazy = medium_stress_loss
			content = minor_stress_loss
		}
	}
}


###################
# 0032 - CHAIN v1 #
###################

## 0032 - Begin exploring the market v1 ##
# by: Steelers
agot_filler_lys.0032 = {
	type = character_event
	title = agot_filler_lys.0032.t
	desc = {
		first_valid = {
			# Jewelry
			triggered_desc = {
				trigger = { has_character_flag = jewelry_a }
				desc = agot_filler_lys.0032.desc.jewelry_a
			}
			triggered_desc = {
				trigger = { has_character_flag = jewelry_b }
				desc = agot_filler_lys.0032.desc.jewelry_b
			}
			triggered_desc = {
				trigger = { has_character_flag = jewelry_c }
				desc = agot_filler_lys.0032.desc.jewelry_c
			}
			triggered_desc = {
				trigger = { has_character_flag = jewelry_d }
				desc = agot_filler_lys.0032.desc.jewelry_d
			}
			# Books
			triggered_desc = {
				trigger = { has_character_flag = book_a }
				desc = agot_filler_lys.0032.desc.book_a
			}
			triggered_desc = {
				trigger = { has_character_flag = book_b }
				desc = agot_filler_lys.0032.desc.book_b
			}
			triggered_desc = {
				trigger = { has_character_flag = book_c }
				desc = agot_filler_lys.0032.desc.book_c
			}
			triggered_desc = {
				trigger = { has_character_flag = book_d }
				desc = agot_filler_lys.0032.desc.book_d
			}
			# Furniture
			triggered_desc = {
				trigger = { has_character_flag = furniture_a }
				desc = agot_filler_lys.0032.desc.furniture_a
			}
			triggered_desc = {
				trigger = { has_character_flag = furniture_b }
				desc = agot_filler_lys.0032.desc.furniture_b
			}
			triggered_desc = {
				trigger = { has_character_flag = furniture_c }
				desc = agot_filler_lys.0032.desc.furniture_c
			}
			triggered_desc = {
				trigger = { has_character_flag = furniture_d }
				desc = agot_filler_lys.0032.desc.furniture_d
			}
			triggered_desc = {
				trigger = { has_character_flag = at_super_market }
				desc = agot_filler_lys.0032.travel_desc
			}
			# Intro, Lys Resident
			desc = agot_filler_lys.0032.desc  # desc used when you first get the event
		}
		first_valid = {
			triggered_desc = {
				trigger = { has_character_flag = at_super_market }
				desc = agot_filler_lys_0032.outro_travel
			}
			# Outro, Lys Resident
			desc = agot_filler_lys_0032.outro # desc cuing the player to choose an option
		}
	}
	theme = stewardship
	override_background = { reference = market }

	right_portrait = {
		character = root
		animation = thinking
	}
	artifact = {
		target = scope:newly_created_artifact
		position = lower_center_portrait
	}

	trigger = {
		OR = {
			is_available_adult = yes
			is_available_travelling_adult = yes
		}
	}

	option = {  # Look at jewelry
		name = agot_filler_lys.0032.a
		trigger = { NOT = { has_character_flag = looked_at_jewelry } }

		current_travel_plan ?= {
			delay_travel_plan = {
				days = 1
			}
		}

		ai_chance = {
			base = 33
			modifier = {
				add = stewardship
			}
		}

		# For making the desc's work properly
		if = {
			limit = { has_character_flag = book_a }
			add_character_flag = book_a_taken
			remove_character_flag = book_a
		}
		else_if = {
			limit = { has_character_flag = book_b }
			add_character_flag = book_b_taken
			remove_character_flag = book_b
		}
		else_if = {
			limit = { has_character_flag = book_c }
			add_character_flag = book_c_taken
			remove_character_flag = book_c
		}
		else_if = {
			limit = { has_character_flag = book_d }
			add_character_flag = book_d_taken
			remove_character_flag = book_d
		}
		else_if = {
			limit = { has_character_flag = furniture_a }
			add_character_flag = furniture_a_taken
			remove_character_flag = furniture_a
		}
		else_if = {
			limit = { has_character_flag = furniture_b }
			add_character_flag = furniture_b_taken
			remove_character_flag = furniture_b
		}
		else_if = {
			limit = { has_character_flag = furniture_c }
			add_character_flag = furniture_c_taken
			remove_character_flag = furniture_c
		}
		else_if = {
			limit = { has_character_flag = furniture_d }
			add_character_flag = furniture_d_taken
			remove_character_flag = furniture_d
		}

		add_character_flag = looked_at_jewelry
		trigger_event = agot_filler_lys.0033
	}

	option = {  # Look at books
		name = agot_filler_lys.0032.b
		trigger = { NOT = { has_character_flag = looked_at_books } }

		current_travel_plan ?= {
			delay_travel_plan = {
				days = 1
			}
		}

		ai_chance = {
			base = 33
			modifier = {
				add = learning
			}
		}

		# For making the desc's work properly
		if = {
			limit = { has_character_flag = jewelry_a }
			add_character_flag = jewelry_a_taken
			remove_character_flag = jewelry_a
		}
		else_if = {
			limit = { has_character_flag = jewelry_b }
			add_character_flag = jewelry_b_taken
			remove_character_flag = jewelry_b
		}
		else_if = {
			limit = { has_character_flag = jewelry_c }
			add_character_flag = jewelry_c_taken
			remove_character_flag = jewelry_c
		}
		else_if = {
			limit = { has_character_flag = jewelry_d }
			add_character_flag = jewelry_d_taken
			remove_character_flag = jewelry_d
		}
		else_if = {
			limit = { has_character_flag = furniture_a }
			add_character_flag = furniture_a_taken
			remove_character_flag = furniture_a
		}
		else_if = {
			limit = { has_character_flag = furniture_b }
			add_character_flag = furniture_b_taken
			remove_character_flag = furniture_b
		}
		else_if = {
			limit = { has_character_flag = furniture_c }
			add_character_flag = furniture_c_taken
			remove_character_flag = furniture_c
		}
		else_if = {
			limit = { has_character_flag = furniture_d }
			add_character_flag = furniture_d_taken
			remove_character_flag = furniture_d
		}

		add_character_flag = looked_at_books
		trigger_event = agot_filler_lys.0034
	}

	option = {  # Look at furniture
		name = agot_filler_lys.0032.c
		trigger = {
			NOT = { has_character_flag = looked_at_furniture }
			has_dlc_feature = royal_court
			highest_held_title_tier >= tier_kingdom
		}

		current_travel_plan ?= {
			delay_travel_plan = {
				days = 1
			}
		}

		ai_chance = {
			base = 0
			modifier = {
				add = 33  # STEELERS TODO: Use new feature to scale based on court grandeur level
				has_dlc_feature = royal_court
				highest_held_title_tier >= tier_kingdom
			}
		}

		# For making the desc's work properly
		if = {
			limit = { has_character_flag = jewelry_a }
			add_character_flag = jewelry_a_taken
			remove_character_flag = jewelry_a
		}
		else_if = {
			limit = { has_character_flag = jewelry_b }
			add_character_flag = jewelry_b_taken
			remove_character_flag = jewelry_b
		}
		else_if = {
			limit = { has_character_flag = jewelry_c }
			add_character_flag = jewelry_c_taken
			remove_character_flag = jewelry_c
		}
		else_if = {
			limit = { has_character_flag = jewelry_d }
			add_character_flag = jewelry_d_taken
			remove_character_flag = jewelry_d
		}
		else_if = {
			limit = { has_character_flag = book_a }
			add_character_flag = book_a_taken
			remove_character_flag = book_a
		}
		else_if = {
			limit = { has_character_flag = book_b }
			add_character_flag = book_b_taken
			remove_character_flag = book_b
		}
		else_if = {
			limit = { has_character_flag = book_c }
			add_character_flag = book_c_taken
			remove_character_flag = book_c
		}
		else_if = {
			limit = { has_character_flag = book_d }
			add_character_flag = book_d_taken
			remove_character_flag = book_d
		}

		add_character_flag = looked_at_furniture
		trigger_event = agot_filler_lys.0035
	}

	option = {  # Leave the market
		name = {
			trigger = { NOT = { has_character_flag = at_super_market } }
			text = agot_filler_lys.0032.d
		}
		name = {
			trigger = { has_character_flag = at_super_market }
			text = agot_filler_lys.0032.d.travel
		}

		if = {
			limit = { has_character_flag = jewelry_a }
			remove_character_flag = jewelry_a
		}
		else_if = {
			limit = { has_character_flag = jewelry_b }
			remove_character_flag = jewelry_b
		}
		else_if = {
			limit = { has_character_flag = jewelry_c }
			remove_character_flag = jewelry_c
		}
		else_if = {
			limit = { has_character_flag = jewelry_d }
			remove_character_flag = jewelry_d
		}
		else_if = {
			limit = { has_character_flag = book_a }
			remove_character_flag = book_a
		}
		else_if = {
			limit = { has_character_flag = book_b }
			remove_character_flag = book_b
		}
		else_if = {
			limit = { has_character_flag = book_c }
			remove_character_flag = book_c
		}
		else_if = {
			limit = { has_character_flag = book_d }
			remove_character_flag = book_d
		}
		else_if = {
			limit = { has_character_flag = furniture_a }
			remove_character_flag = furniture_a
		}
		else_if = {
			limit = { has_character_flag = furniture_b }
			remove_character_flag = furniture_b
		}
		else_if = {
			limit = { has_character_flag = furniture_c }
			remove_character_flag = furniture_c
		}
		else_if = {
			limit = { has_character_flag = furniture_d }
			remove_character_flag = furniture_d
		}

		ai_chance = {
			base = 0
			modifier = {
				add = 60
				has_trait = content
			}
			# Make AI more likely to leave after getting an artifact
			modifier = {
				add = 50
				OR = {
					has_character_flag = purchased_ring
					has_character_flag = purchased_necklace
					has_character_flag = purchased_brooch
					has_character_flag = purchased_goblet
				}
			}
			modifier = {
				add = 50
				OR = {
					has_character_flag = purchased_court_book
					has_character_flag = purchased_trinket_book
				}
			}
			modifier = {
				add = 50
				OR = {
					has_character_flag = purchased_throne
					has_character_flag = purchased_tapestry
					has_character_flag = purchased_wall_banner
					has_character_flag = purchased_wall_shield
					has_character_flag = purchased_sculpture
				}
			}
		}

		if = {
			limit = { has_character_flag = at_super_market }
			stress_impact = { # Minor stress loss for focusing on the project underway
				lifestyle_traveler = minor_stress_impact_loss
			}
		}

		trigger_event = agot_filler_lys.0050
	}
}


##################
# 0033 - JEWELRY #
##################

scripted_effect agot_filler_lys_0033_artifact_scripted_effect = {
	random_list = {
		25 = {
			create_artifact_ring_effect = {
				OWNER = root
				SMITH = scope:market_merchant
			}
			add_character_flag = purchased_ring
		}
		25 = {
			create_artifact_necklace_effect = {
				OWNER = root
				SMITH = scope:market_merchant
			}
			add_character_flag = purchased_necklace
		}
		25 = {
			create_artifact_brooch_effect = {
				OWNER = root
				SMITH = scope:market_merchant
			}
			add_character_flag = purchased_brooch
		}
		25 = {
			trigger = {
				has_dlc_feature = royal_court
				highest_held_title_tier >= tier_kingdom
			}
			create_artifact_goblet_effect = {
				OWNER = root
				SMITH = scope:market_merchant
			}
			add_character_flag = purchased_goblet
		}
	}
}

# 0033 - Looking at jewelry
# by: Steelers
agot_filler_lys.0033 = {
	type = character_event
	title = agot_filler_lys.0033.t
	desc = {
		desc = agot_filler_lys.0033.desc
		triggered_desc = {
			trigger = { stewardship >= excellent_skill_level }
			desc = agot_filler_lys.0033.desc.special
		}
	}
	theme = stewardship
	override_background = { reference = market }

	left_portrait = {
		character = scope:market_merchant
		animation = steward
	}
	right_portrait = {
		character = root
		animation = thinking
	}

	trigger = {
		OR = {
			is_available_adult = yes
			is_available_travelling_adult = yes
		}
		root.location = { geographical_region = world_essos_lys_city }
	}

	immediate = {
		create_character = {
			location = root.location
			template = agot_merchant_character
			save_scope_as = market_merchant
		}
		# For modifier description
		set_variable = {
			name = Lys
			value = province:7388  # 7388 = b_lys
		}
	}

	option = {  # Excellent option
		name = agot_filler_lys.0033.a
		if = {
			limit = { has_dlc_feature = royal_court }
			custom_tooltip = agot_filler_lys.tt.artifact
		}
		else = {
			custom_tooltip = agot_filler_lys.tt.trinket
		}
		trigger = { stewardship >= excellent_skill_level }
		skill = stewardship

		add_character_flag = jewelry_a
		remove_short_term_gold = major_gold_value
		hidden_effect = {
			set_artifact_rarity_famed = yes
			agot_filler_lys_0033_artifact_scripted_effect = yes
		}
		stress_impact = {
			greedy = minor_stress_gain
			generous = minor_stress_loss
			content = minor_stress_gain
			ambitious = minor_stress_loss
		}

		ai_chance = {
			base = 25
			modifier = {
				add = {
					value = short_term_gold
					subtract = major_gold_value
					multiply = 1.25
				}
			}
		}

		if = {  # If in the chain, go back
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0032
		}
		else = {  # Else, send a toast of what you got
			save_scope_as = send_toast
		}
	}

	option = {  # Expensive option
		name = agot_filler_lys.0033.b
		if = {
			limit = { has_dlc_feature = royal_court }
			custom_tooltip = agot_filler_lys.tt.artifact
		}
		else = {
			custom_tooltip = agot_filler_lys.tt.trinket
		}

		add_character_flag = jewelry_b
		remove_short_term_gold = medium_gold_value
		hidden_effect = {
			set_artifact_rarity_masterwork = yes
			agot_filler_lys_0033_artifact_scripted_effect = yes
		}
		stress_impact = {
			greedy = miniscule_stress_gain
			generous = miniscule_stress_loss
			content = miniscule_stress_gain
			ambitious = miniscule_stress_loss
		}

		ai_chance = {
			base = 25
			modifier = {
				add = {
					value = short_term_gold
					subtract = medium_gold_value
				}
			}
		}

		if = {  # If in the chain, go back
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0032
		}
		else = {  # Else, send a toast of what you got
			save_scope_as = send_toast
		}
	}

	option = {  # Cheap option
		name = agot_filler_lys.0033.c
		if = {
			limit = { has_dlc_feature = royal_court }
			custom_tooltip = agot_filler_lys.tt.artifact
		}
		else = {
			custom_tooltip = agot_filler_lys.tt.trinket
		}

		add_character_flag = jewelry_c
		remove_short_term_gold = minor_gold_value
		hidden_effect = {
			set_artifact_rarity_common = yes
			agot_filler_lys_0033_artifact_scripted_effect = yes
		}
		stress_impact = {
			greedy = minor_stress_loss
			generous = minor_stress_gain
			content = minor_stress_loss
			ambitious = minor_stress_gain
		}

		ai_chance = {
			base = 25
			modifier = {
				add = {
					value = short_term_gold
					subtract = minor_gold_value
					multiply = 0.75
				}
			}
		}

		if = {  # If in the chain, go back
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0032
		}
		else = {  # Else, send a toast of what you got
			save_scope_as = send_toast
		}
	}

	option = {  # Nevermind, I don't want anything
		name = agot_filler_lys.0033.d

		add_character_flag = jewelry_d
		stress_impact = {
			generous = minor_stress_gain
			content = minor_stress_loss
		}

		ai_chance = {
			base = 25
			modifier = {
				add = 25
				has_trait = content
			}
		}

		if = {
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0032
		}
	}

	after = {
		scope:market_merchant = { silent_disappearance_effect = yes }
		scope:send_toast ?= {
			hidden_effect = {
				send_interface_toast = {
					title = agot_filler_lys.bought_artifact
					custom_tooltip = agot_filler_lys.bought_artifact.tooltip
					left_icon = root
					right_icon = scope:newly_created_artifact
				}
			}
		}
		if = {
			limit = { NOT = { has_character_flag = at_super_market } }
			trigger_event = agot_filler_lys.0050
		}
	}
}


################
# 0034 - BOOKS #
################

scripted_effect agot_filler_lys_0034_artifact_scripted_effect = {
	random_list = {
		50 = {  # Court artifact
			trigger = {
				has_dlc_feature = royal_court
				highest_held_title_tier >= tier_kingdom
			}
			create_artifact_book_effect = {
				OWNER = root
				CREATOR = scope:market_merchant
				SET_SUBJECT = flag:learning
				SET_TOPIC = flag:no
			}
			add_character_flag = purchased_court_book
		}
		50 = {  # Trinket artifact
			create_artifact = {
				name = agot_market_book_name
				description = agot_market_book_description
				type = miscellaneous
				visuals = book
				modifier = artifact_placeholder_modifier
				save_scope_as = newly_created_artifact
				wealth = scope:wealth
				quality = scope:quality
			}
			scope:newly_created_artifact = {
				random_list = {
					pick = $NUMBER$
					25 = { add_artifact_modifier = useful_insights_modifier }
					25 = { add_artifact_modifier = seeker_of_knowledge }
					25 = { add_artifact_modifier = focused_reading_modifier }
					25 = { add_artifact_modifier = increase_learning_rate }
				}
			}
			add_character_flag = purchased_trinket_book
		}
	}
}

# 0034 - Looking at tomes and scrolls
# by: Steelers
agot_filler_lys.0034 = {
	type = character_event
	title = agot_filler_lys.0034.t
	desc = {
		desc = agot_filler_lys.0034.desc
		triggered_desc = {
			trigger = { learning >= excellent_skill_level }
			desc = agot_filler_lys.0034.desc.special
		}
	}
	theme = learning
	override_background = { reference = market }

	left_portrait = {
		character = scope:market_merchant
		animation = personality_rational
	}
	right_portrait = {
		character = root
		animation = thinking
	}

	trigger = {
		OR = {
			is_available_adult = yes
			is_available_travelling_adult = yes
		}
		root.location = { geographical_region = world_essos_lys_city }
	}

	immediate = {
		create_character = {
			location = root.location
			template = agot_merchant_character
			save_scope_as = market_merchant
		}
		# For modifier description
		set_variable = {
			name = Lys
			value = province:7388  # 7388 = b_lys
		}
	}

	option = {  # Excellent option
		name = agot_filler_lys.0034.a
		if = {
			limit = { has_dlc_feature = royal_court }
			custom_tooltip = agot_filler_lys.tt.book_artifact
		}
		else = {
			custom_tooltip = agot_filler_lys.tt.book_trinket
		}
		trigger = { learning >= excellent_skill_level }

		add_character_flag = book_a
		remove_short_term_gold = major_gold_value
		hidden_effect = {
			set_artifact_rarity_famed = yes
			agot_filler_lys_0034_artifact_scripted_effect = { NUMBER = 4 }
		}
		stress_impact = {
			scholar = minor_stress_loss
			content = minor_stress_gain
			ambitious = minor_stress_loss
		}

		ai_chance = {
			base = 25
			modifier = {
				add = {
					value = short_term_gold
					subtract = major_gold_value
					multiply = 1.25
				}
			}
		}

		if = {  # If in the chain, go back
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0032
		}
		else = {  # Else, send a toast of what you got
			save_scope_as = send_toast
		}
	}

	option = {  # Expensive option
		name = agot_filler_lys.0034.b
		if = {
			limit = { has_dlc_feature = royal_court }
			custom_tooltip = agot_filler_lys.tt.book_artifact
		}
		else = {
			custom_tooltip = agot_filler_lys.tt.book_trinket
		}

		add_character_flag = book_b
		remove_short_term_gold = medium_gold_value
		hidden_effect = {
			set_artifact_rarity_masterwork = yes
			agot_filler_lys_0034_artifact_scripted_effect = { NUMBER = 3 }
		}
		stress_impact = {
			scholar = miniscule_stress_loss
			content = miniscule_stress_gain
			ambitious = miniscule_stress_loss
		}

		ai_chance = {
			base = 25
			modifier = {
				add = {
					value = short_term_gold
					subtract = medium_gold_value
				}
			}
		}

		if = {  # If in the chain, go back
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0032
		}
		else = {  # Else, send a toast of what you got
			save_scope_as = send_toast
		}
	}

	option = {  # Cheap option
		name = agot_filler_lys.0034.c
		if = {
			limit = { has_dlc_feature = royal_court }
			custom_tooltip = agot_filler_lys.tt.book_artifact
		}
		else = {
			custom_tooltip = agot_filler_lys.tt.book_trinket
		}

		add_character_flag = book_c
		remove_short_term_gold = minor_gold_value
		hidden_effect = {
			set_artifact_rarity_common = yes
			agot_filler_lys_0034_artifact_scripted_effect = { NUMBER = 2 }
		}
		stress_impact = {
			content = minor_stress_loss
			ambitious = minor_stress_gain
		}

		ai_chance = {
			base = 25
			modifier = {
				add = {
					value = short_term_gold
					subtract = minor_gold_value
					multiply = 0.75
				}
			}
		}

		if = {  # If in the chain, go back
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0032
		}
		else = {  # Else, send a toast of what you got
			save_scope_as = send_toast
		}
	}

	option = {  # Nevermind, I don't want anything
		name = agot_filler_lys.0034.d

		add_character_flag = book_d
		stress_impact = {
			scholar = minor_stress_gain
			content = minor_stress_loss
		}

		ai_chance = {
			base = 25
			modifier = {
				add = 25
				has_trait = content
			}
			modifier = {
				add = -15
				has_trait = scholar
			}
		}

		if = {
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0032
		}
	}

	after = {
		scope:market_merchant = { silent_disappearance_effect = yes }
		scope:send_toast ?= {
			hidden_effect = {
				send_interface_toast = {
					title = agot_filler_lys.bought_artifact
					custom_tooltip = agot_filler_lys.bought_artifact.tooltip
					left_icon = root
					right_icon = scope:newly_created_artifact
				}
			}
		}
		if = {
			limit = { NOT = { has_character_flag = at_super_market } }
			trigger_event = agot_filler_lys.0050
		}
	}
}


####################
# 0035 - FURNITURE #
####################

scripted_effect agot_filler_lys_0035_artifact_scripted_effect = {
	random_list = {
		20 = {
			trigger = {
				has_dlc_feature = royal_court
				highest_held_title_tier >= tier_kingdom
			}
			create_artifact_throne_effect = {
				OWNER = root
				MAKER = scope:market_merchant
			}
			add_character_flag = purchased_throne
		}
		20 = {
			trigger = {
				has_dlc_feature = royal_court
				highest_held_title_tier >= tier_kingdom
			}
			create_artifact_tapestry_effect = {
				OWNER = root
				WEAVER = scope:market_merchant
			}
			add_character_flag = purchased_tapestry
		}
		20 = {
			trigger = {
				has_dlc_feature = royal_court
				highest_held_title_tier >= tier_kingdom
			}
			create_artifact_wall_banner_effect = {
				OWNER = root
				CREATOR = scope:market_merchant
				TARGET = root.primary_title
			}
			add_character_flag = purchased_wall_banner
		}
		20 = {
			trigger = {
				has_dlc_feature = royal_court
				highest_held_title_tier >= tier_kingdom
			}
			create_artifact_wall_shield_effect = {
				OWNER = root
				TARGET = root.house
				CREATOR = scope:market_merchant
			}
			add_character_flag = purchased_wall_shield
		}
		20 = {
			trigger = {
				has_dlc_feature = royal_court
				highest_held_title_tier >= tier_kingdom
			}
			create_artifact_sculpture_effect = {
				OWNER = root
				SCULPTER = scope:market_merchant
			}
			add_character_flag = purchased_sculpture
		}
	}
}

# 0035 - Looking at furniture
# by: Steelers
agot_filler_lys.0035 = {
	type = character_event
	title = agot_filler_lys.0035.t
	desc = {
		desc = agot_filler_lys.0035.desc
		triggered_desc = {
			trigger = { stewardship >= excellent_skill_level }
			desc = agot_filler_lys.0035.desc.special
		}
	}
	theme = stewardship
	override_background = { reference = market }

	left_portrait = {
		character = scope:market_merchant
		animation = personality_rational
	}
	right_portrait = {
		character = root
		animation = thinking
	}

	trigger = {
		OR = {
			is_available_adult = yes
			is_available_travelling_adult = yes
		}
		root.location = { geographical_region = world_essos_lys_city }
		has_dlc_feature = royal_court
		highest_held_title_tier >= tier_kingdom
	}

	immediate = {
		create_character = {
			location = root.location
			template = agot_merchant_character
			save_scope_as = market_merchant
		}
		# For modifier description
		set_variable = {
			name = Lys
			value = province:7388  # 7388 = b_lys
		}
	}

	option = {  # Excellent option
		name = agot_filler_lys.0035.a
		if = {
			limit = { has_dlc_feature = royal_court }
			custom_tooltip = agot_filler_lys.tt.artifact
		}
		else = {
			custom_tooltip = agot_filler_lys.tt.trinket
		}
		trigger = { stewardship >= excellent_skill_level }

		add_character_flag = furniture_a
		remove_short_term_gold = major_gold_value
		hidden_effect = {
			set_artifact_rarity_famed = yes
			agot_filler_lys_0035_artifact_scripted_effect = yes
		}
		stress_impact = {
			architect = minor_stress_loss
			greedy = minor_stress_gain
			generous = minor_stress_loss
			content = minor_stress_gain
			ambitious = minor_stress_loss
		}

		ai_chance = {
			base = 25
			modifier = {
				add = {
					value = short_term_gold
					subtract = major_gold_value
					multiply = 1.25
				}
			}
		}

		if = {  # If in the chain, go back
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0032
		}
		else = {  # Else, send a toast of what you got
			save_scope_as = send_toast
		}
	}

	option = {  # Expensive option
		name = agot_filler_lys.0035.b
		if = {
			limit = { has_dlc_feature = royal_court }
			custom_tooltip = agot_filler_lys.tt.artifact
		}
		else = {
			custom_tooltip = agot_filler_lys.tt.trinket
		}

		add_character_flag = furniture_b
		remove_short_term_gold = medium_gold_value
		hidden_effect = {
			set_artifact_rarity_masterwork = yes
			agot_filler_lys_0035_artifact_scripted_effect = yes
		}
		stress_impact = {
			architect = miniscule_stress_loss
			greedy = miniscule_stress_gain
			generous = miniscule_stress_loss
			content = miniscule_stress_gain
			ambitious = miniscule_stress_loss
		}

		ai_chance = {
			base = 25
			modifier = {
				add = {
					value = short_term_gold
					subtract = medium_gold_value
				}
			}
		}

		if = {  # If in the chain, go back
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0032
		}
		else = {  # Else, send a toast of what you got
			save_scope_as = send_toast
		}
	}

	option = {  # Cheap option
		name = agot_filler_lys.0035.c
		if = {
			limit = { has_dlc_feature = royal_court }
			custom_tooltip = agot_filler_lys.tt.artifact
		}
		else = {
			custom_tooltip = agot_filler_lys.tt.trinket
		}

		add_character_flag = furniture_c
		remove_short_term_gold = minor_gold_value
		hidden_effect = {
			set_artifact_rarity_common = yes
			agot_filler_lys_0035_artifact_scripted_effect = yes
		}
		stress_impact = {
			architect = minor_stress_gain
			greedy = minor_stress_loss
			generous = minor_stress_gain
			content = minor_stress_loss
			ambitious = minor_stress_gain
		}

		ai_chance = {
			base = 25
			modifier = {
				add = {
					value = short_term_gold
					subtract = minor_gold_value
					multiply = 0.75
				}
			}
		}

		if = {  # If in the chain, go back
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0032
		}
		else = {  # Else, send a toast of what you got
			save_scope_as = send_toast
		}
	}

	option = {  # Nevermind, I don't want anything
		name = agot_filler_lys.0035.d

		add_character_flag = furniture_d
		stress_impact = {
			architect = minor_stress_gain
			generous = minor_stress_gain
			content = minor_stress_loss
		}

		ai_chance = {
			base = 25
			modifier = {
				add = 25
				has_trait = content
			}
		}

		if = {
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0032
		}
	}

	after = {
		scope:market_merchant = { silent_disappearance_effect = yes }
		scope:send_toast ?= {
			hidden_effect = {
				send_interface_toast = {
					title = agot_filler_lys.bought_artifact
					custom_tooltip = agot_filler_lys.bought_artifact.tooltip
					left_icon = root
					right_icon = scope:newly_created_artifact
				}
			}
		}
		if = {
			limit = { NOT = { has_character_flag = at_super_market } }
			trigger_event = agot_filler_lys.0050
		}
	}
}


###################
# 0040 - CHAIN v2 #
###################

## 0040 - Begin exploring the market v2 ##
# by: Steelers
agot_filler_lys.0040 = {
	type = character_event
	title = agot_filler_lys.0040.t
	desc = {
		first_valid = {
			# Alchemy
			triggered_desc = {
				trigger = { has_character_flag = alchemy_a }
				desc = agot_filler_lys.0040.desc.alchemy_a
			}
			triggered_desc = {
				trigger = { has_character_flag = alchemy_b }
				desc = agot_filler_lys.0040.desc.alchemy_b
			}
			triggered_desc = {
				trigger = { has_character_flag = alchemy_c }
				desc = agot_filler_lys.0040.desc.alchemy_c
			}
			triggered_desc = {
				trigger = { has_character_flag = alchemy_d }
				desc = agot_filler_lys.0040.desc.alchemy_d
			}
			# Armory
			triggered_desc = {
				trigger = { has_character_flag = armory_a }
				desc = agot_filler_lys.0040.desc.armory_a
			}
			triggered_desc = {
				trigger = { has_character_flag = armory_c }
				desc = agot_filler_lys.0040.desc.armory_c
			}
			triggered_desc = {
				trigger = { has_character_flag = armory_e }
				desc = agot_filler_lys.0040.desc.armory_e
			}
			# Perfume
			triggered_desc = {
				trigger = { has_character_flag = perfume_a }
				desc = agot_filler_lys.0040.desc.perfume_a
			}
			triggered_desc = {
				trigger = { has_character_flag = perfume_b }
				desc = agot_filler_lys.0040.desc.perfume_b
			}
			triggered_desc = {
				trigger = { has_character_flag = perfume_c }
				desc = agot_filler_lys.0040.desc.perfume_c
			}
			triggered_desc = {
				trigger = { has_character_flag = perfume_d }
				desc = agot_filler_lys.0040.desc.perfume_d
			}
			# Intro
			triggered_desc = {
				trigger = { has_character_flag = at_super_market }
				desc = agot_filler_lys.0040.travel_desc
			}
			# Intro, Lys Resident
			desc = agot_filler_lys.0040.desc  # desc used when you first get the event
		}
		first_valid = {
			triggered_desc = {
				trigger = { has_character_flag = at_super_market }
				desc = agot_filler_lys_0040.outro_travel
			}
			# Outro, Lys Resident
			desc = agot_filler_lys_0040.outro # desc cuing the player to choose an option
		}
	}
	theme = stewardship
	override_background = { reference = market }

	right_portrait = {
		character = root
		animation = thinking
	}
	artifact = {
		target = scope:newly_created_artifact
		position = lower_center_portrait
	}

	trigger = {
		OR = {
			is_available_adult = yes
			is_available_travelling_adult = yes
		}
	}

	option = {  # Look at alchemy
		name = agot_filler_lys.0040.a
		trigger = { NOT = { has_character_flag = looked_at_alchemy } }

		current_travel_plan ?= {
			delay_travel_plan = {
				days = 1
			}
		}

		ai_chance = {
			base = 33
			modifier = {
				add = learning
			}
		}

		# For making the desc's work properly
		if = {
			limit = { has_character_flag = armory_a }
			add_character_flag = armory_a_taken
			remove_character_flag = armory_a
		}
		# No more B
		else_if = {
			limit = { has_character_flag = armory_c }
			add_character_flag = armory_c_taken
			remove_character_flag = armory_c
		}
		# No more D
		else_if = {
			limit = { has_character_flag = armory_e }
			add_character_flag = armory_e_taken
			remove_character_flag = armory_e
		}
		else_if = {
			limit = { has_character_flag = perfume_a }
			add_character_flag = perfume_a_taken
			remove_character_flag = perfume_a
		}
		else_if = {
			limit = { has_character_flag = perfume_b }
			add_character_flag = perfume_b_taken
			remove_character_flag = perfume_b
		}
		else_if = {
			limit = { has_character_flag = perfume_c }
			add_character_flag = perfume_c_taken
			remove_character_flag = perfume_c
		}
		else_if = {
			limit = { has_character_flag = perfume_d }
			add_character_flag = perfume_d_taken
			remove_character_flag = perfume_d
		}

		add_character_flag = looked_at_alchemy
		trigger_event = agot_filler_lys.0041
	}

	option = {  # Look at the armory
		name = agot_filler_lys.0040.b
		trigger = { NOT = { has_character_flag = looked_at_armory } }

		current_travel_plan ?= {
			delay_travel_plan = {
				days = 1
			}
		}

		ai_chance = {
			base = 33
			modifier = {
				add = martial
			}
		}

		# For making the desc's work properly
		if = {
			limit = { has_character_flag = alchemy_a }
			add_character_flag = alchemy_a_taken
			remove_character_flag = alchemy_a
		}
		else_if = {
			limit = { has_character_flag = alchemy_b }
			add_character_flag = alchemy_b_taken
			remove_character_flag = alchemy_b
		}
		else_if = {
			limit = { has_character_flag = alchemy_c }
			add_character_flag = alchemy_c_taken
			remove_character_flag = alchemy_c
		}
		else_if = {
			limit = { has_character_flag = alchemy_d }
			add_character_flag = alchemy_d_taken
			remove_character_flag = alchemy_d
		}
		else_if = {
			limit = { has_character_flag = perfume_a }
			add_character_flag = perfume_a_taken
			remove_character_flag = perfume_a
		}
		else_if = {
			limit = { has_character_flag = perfume_b }
			add_character_flag = perfume_b_taken
			remove_character_flag = perfume_b
		}
		else_if = {
			limit = { has_character_flag = perfume_c }
			add_character_flag = perfume_c_taken
			remove_character_flag = perfume_c
		}
		else_if = {
			limit = { has_character_flag = perfume_d }
			add_character_flag = perfume_d_taken
			remove_character_flag = perfume_d
		}

		add_character_flag = looked_at_armory
		trigger_event = agot_filler_lys.0042
	}

	option = {  # Look at perfume
		name = agot_filler_lys.0040.c
		trigger = { NOT = { has_character_flag = looked_at_perfume } }

		current_travel_plan ?= {
			delay_travel_plan = {
				days = 1
			}
		}

		ai_chance = {
			base = 33
			modifier = {
				add = diplomacy
			}
		}

		# For making the desc's work properly
		if = {
			limit = { has_character_flag = alchemy_a }
			add_character_flag = alchemy_a_taken
			remove_character_flag = alchemy_a
		}
		else_if = {
			limit = { has_character_flag = alchemy_b }
			add_character_flag = alchemy_b_taken
			remove_character_flag = alchemy_b
		}
		else_if = {
			limit = { has_character_flag = alchemy_c }
			add_character_flag = alchemy_c_taken
			remove_character_flag = alchemy_c
		}
		else_if = {
			limit = { has_character_flag = alchemy_d }
			add_character_flag = alchemy_d_taken
			remove_character_flag = alchemy_d
		}
		else_if = {
			limit = { has_character_flag = armory_a }
			add_character_flag = armory_a_taken
			remove_character_flag = armory_a
		}
		# No more B
		else_if = {
			limit = { has_character_flag = armory_c }
			add_character_flag = armory_c_taken
			remove_character_flag = armory_c
		}
		# No more D
		else_if = {
			limit = { has_character_flag = armory_e }
			add_character_flag = armory_e_taken
			remove_character_flag = armory_e
		}

		add_character_flag = looked_at_perfume
		trigger_event = agot_filler_lys.0043
	}

	option = {  # Leave the market
		name = {
			trigger = { NOT = { has_character_flag = at_super_market } }
			text = agot_filler_lys.0040.d
		}
		name = {
			trigger = { has_character_flag = at_super_market }
			text = agot_filler_lys.0040.d.travel
		}

		if = {
			limit = { has_character_flag = alchemy_a }
			remove_character_flag = alchemy_a
		}
		else_if = {
			limit = { has_character_flag = alchemy_b }
			remove_character_flag = alchemy_b
		}
		else_if = {
			limit = { has_character_flag = alchemy_c }
			remove_character_flag = alchemy_c
		}
		else_if = {
			limit = { has_character_flag = alchemy_d }
			remove_character_flag = alchemy_d
		}
		else_if = {
			limit = { has_character_flag = armory_a }
			remove_character_flag = armory_a
		}
		# No more B
		else_if = {
			limit = { has_character_flag = armory_c }
			remove_character_flag = armory_c
		}
		# No more D
		else_if = {
			limit = { has_character_flag = armory_e }
			remove_character_flag = armory_e
		}
		else_if = {
			limit = { has_character_flag = perfume_a }
			remove_character_flag = perfume_a
		}
		else_if = {
			limit = { has_character_flag = perfume_b }
			remove_character_flag = perfume_b
		}
		else_if = {
			limit = { has_character_flag = perfume_c }
			remove_character_flag = perfume_c
		}
		else_if = {
			limit = { has_character_flag = perfume_d }
			remove_character_flag = perfume_d
		}

		ai_chance = {
			base = 0
			modifier = {
				add = 60
				has_trait = content
			}
			# Make AI more likely to leave after getting an artifact
			modifier = {
				add = 50
				OR = {
					has_character_flag = purchased_court_book
					has_character_flag = purchased_trinket_book
				}
			}
			modifier = {
				add = 50
				OR = {
					has_character_flag = purchased_armor
					has_character_flag = purchased_weapon
				}
			}
			modifier = {
				add = 50
				has_character_flag = purchased_perfume
			}
		}

		if = {
			limit = { has_character_flag = at_super_market }
			stress_impact = { #Minor stress loss for focusing on the project underway
				lifestyle_traveler = minor_stress_impact_loss
			}
		}

		trigger_event = agot_filler_lys.0050
	}
}


####################
# 0041 - ALCHEMIST #
####################

scripted_effect agot_filler_lys_0041_artifact_scripted_effect = {
	random_list = {
		50 = {  # Court artifact
			trigger = {
				has_dlc_feature = royal_court
				highest_held_title_tier >= tier_kingdom
			}
			create_artifact_book_effect = {
				OWNER = root
				CREATOR = scope:market_merchant
				SET_SUBJECT = flag:alchemy
				SET_TOPIC = flag:no
			}
			add_character_flag = purchased_court_book
		}
		50 = {  # Trinket artifact
			create_artifact = {
				name = agot_market_book_name_alchemy
				description = agot_market_book_description_alchemy
				type = miscellaneous
				visuals = book
				modifier = artifact_placeholder_modifier
				save_scope_as = newly_created_artifact
				wealth = scope:wealth
				quality = scope:quality
			}
			scope:newly_created_artifact = {
				random_list = {
					pick = $NUMBER$
					25 = { add_artifact_modifier = useful_insights_modifier }
					25 = { add_artifact_modifier = add_hostile_scheme_resistance}
					25 = { add_artifact_modifier = add_hostile_scheme_power }
				}
			}
			add_character_flag = purchased_trinket_book
		}
		# STEELERS TODO: Add poisons
	}
}

# 0041 - Visiting the alchemist
# by: Steelers
agot_filler_lys.0041 = {
	type = character_event
	title = agot_filler_lys.0041.t
	desc = {
		desc = agot_filler_lys.0041.desc
		triggered_desc = {
			trigger = { learning >= excellent_skill_level }
			desc = agot_filler_lys.0041.desc.special
		}
	}
	theme = learning  # intrigue
	override_background = { reference = market }

	left_portrait = {
		character = scope:market_merchant
		animation = personality_rational
	}
	right_portrait = {
		character = root
		animation = thinking
	}

	trigger = {
		OR = {
			is_available_adult = yes
			is_available_travelling_adult = yes
		}
		root.location = { geographical_region = world_essos_lys_city }
	}

	immediate = {
		create_character = {
			location = root.location
			template = agot_merchant_character
			save_scope_as = market_merchant
		}
		# For modifier description
		set_variable = {
			name = Lys
			value = province:7388  # 7388 = b_lys
		}
	}

	option = {  # Excellent option
		name = agot_filler_lys.0041.a
		if = {
			limit = { has_dlc_feature = royal_court }
			custom_tooltip = agot_filler_lys.tt.book_artifact
		}
		else = {
			custom_tooltip = agot_filler_lys.tt.book_trinket
		}
		trigger = { learning >= excellent_skill_level }

		add_character_flag = alchemy_a
		remove_short_term_gold = major_gold_value
		hidden_effect = {
			set_artifact_rarity_famed = yes
			agot_filler_lys_0041_artifact_scripted_effect = { NUMBER = 4 }
		}
		stress_impact = {
			scholar = minor_stress_loss
			content = minor_stress_gain
			ambitious = minor_stress_loss
		}

		ai_chance = {
			base = 25
			modifier = {
				add = {
					value = short_term_gold
					subtract = major_gold_value
					multiply = 1.25
				}
			}
		}

		if = {  # If in the chain, go back
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0040
		}
		else = {  # Else, send a toast of what you got
			save_scope_as = send_toast
		}
	}

	option = {  # Expensive option
		name = agot_filler_lys.0041.b
		if = {
			limit = { has_dlc_feature = royal_court }
			custom_tooltip = agot_filler_lys.tt.book_artifact
		}
		else = {
			custom_tooltip = agot_filler_lys.tt.book_trinket
		}

		add_character_flag = alchemy_b
		remove_short_term_gold = medium_gold_value
		hidden_effect = {
			set_artifact_rarity_masterwork = yes
			agot_filler_lys_0041_artifact_scripted_effect = { NUMBER = 3 }
		}
		stress_impact = {
			scholar = miniscule_stress_loss
			content = miniscule_stress_gain
			ambitious = miniscule_stress_loss
		}

		ai_chance = {
			base = 25
			modifier = {
				add = {
					value = short_term_gold
					subtract = medium_gold_value
				}
			}
		}

		if = {  # If in the chain, go back
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0040
		}
		else = {  # Else, send a toast of what you got
			save_scope_as = send_toast
		}
	}

	option = {  # Cheap option
		name = agot_filler_lys.0041.c
		if = {
			limit = { has_dlc_feature = royal_court }
			custom_tooltip = agot_filler_lys.tt.book_artifact
		}
		else = {
			custom_tooltip = agot_filler_lys.tt.book_trinket
		}

		add_character_flag = alchemy_c
		remove_short_term_gold = minor_gold_value
		hidden_effect = {
			set_artifact_rarity_common = yes
			agot_filler_lys_0041_artifact_scripted_effect = { NUMBER = 2 }
		}
		stress_impact = {
			content = minor_stress_loss
			ambitious = minor_stress_gain
		}

		ai_chance = {
			base = 25
			modifier = {
				add = {
					value = short_term_gold
					subtract = minor_gold_value
					multiply = 0.75
				}
			}
		}

		if = {  # If in the chain, go back
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0040
		}
		else = {  # Else, send a toast of what you got
			save_scope_as = send_toast
		}
	}

	option = {  # Nevermind, I don't want anything
		name = agot_filler_lys.0041.d

		add_character_flag = alchemy_d
		stress_impact = {
			scholar = minor_stress_gain
			content = minor_stress_loss
		}

		ai_chance = {
			base = 25
			modifier = {
				add = 25
				has_trait = content
			}
		}

		if = {
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0040
		}
	}

	after = {
		scope:market_merchant = { silent_disappearance_effect = yes }
		scope:send_toast ?= {
			hidden_effect = {
				send_interface_toast = {
					title = agot_filler_lys.bought_artifact
					custom_tooltip = agot_filler_lys.bought_artifact.tooltip
					left_icon = root
					right_icon = scope:newly_created_artifact
				}
			}
		}
		if = {
			limit = { NOT = { has_character_flag = at_super_market } }
			trigger_event = agot_filler_lys.0050
		}
	}
}


##################
# 0042 - ARMORER #
##################

scripted_effect agot_filler_lys_0042_artifact_scripted_effect_armor = {
	create_artifact_armor_effect = {
		OWNER = root
		CREATOR = scope:market_merchant
		SET_ARMOR_TYPE = flag:no
	}
	add_character_flag = purchased_armor
}

scripted_effect agot_filler_lys_0042_artifact_scripted_effect_weapon = {
	create_artifact_weapon_effect = {
		OWNER = root
		CREATOR = scope:market_merchant
		SET_WEAPON_TYPE = flag:no
	}
	add_character_flag = purchased_weapon
}

# 0042 - Visiting the armorer
# by: Steelers
agot_filler_lys.0042 = {
	type = character_event
	title = agot_filler_lys.0042.t
	desc = {
		desc = agot_filler_lys.0042.desc
		triggered_desc = {
			trigger = { martial >= excellent_skill_level }
			desc = agot_filler_lys.0042.desc.special
		}
	}
	theme = martial
	override_background = { reference = market }

	left_portrait = {
		character = scope:market_merchant
		animation = personality_rational
	}
	right_portrait = {
		character = root
		animation = thinking
	}

	trigger = {
		OR = {
			is_available_adult = yes
			is_available_travelling_adult = yes
		}
		root.location = { geographical_region = world_essos_lys_city }
	}

	immediate = {
		create_character = {
			location = root.location
			template = agot_merchant_character
			save_scope_as = market_merchant
		}
		# For modifier description
		set_variable = {
			name = Lys
			value = province:7388  # 7388 = b_lys
		}
	}

	option = {  # Excellent option - armor
		name = agot_filler_lys.0042.a
		custom_tooltip = agot_filler_lys.tt.armor
		trigger = { martial >= excellent_skill_level }

		add_character_flag = armory_a
		remove_short_term_gold = major_gold_value
		hidden_effect = {
			set_artifact_rarity_famed = yes
			agot_filler_lys_0042_artifact_scripted_effect_armor = yes
		}
		stress_impact = {
			strategist = minor_stress_loss
			content = minor_stress_gain
			ambitious = minor_stress_loss
		}

		ai_chance = {
			base = 25
			modifier = {
				add = {
					value = short_term_gold
					subtract = major_gold_value
					multiply = 1.25
				}
			}
		}

		if = {  # If in the chain, go back
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0040
		}
		else = {  # Else, send a toast of what you got
			save_scope_as = send_toast
		}
	}

	option = {  # Excellent option - weapon
		name = agot_filler_lys.0042.b
		custom_tooltip = agot_filler_lys.tt.weapon
		trigger = { martial >= excellent_skill_level }

		add_character_flag = armory_a
		remove_short_term_gold = major_gold_value
		hidden_effect = {
			set_artifact_rarity_famed = yes
			agot_filler_lys_0042_artifact_scripted_effect_weapon = yes
		}
		stress_impact = {
			strategist = minor_stress_loss
			content = minor_stress_gain
			ambitious = minor_stress_loss
		}

		ai_chance = {
			base = 25
			modifier = {
				add = {
					value = short_term_gold
					subtract = major_gold_value
					multiply = 1.25
				}
			}
		}

		if = {  # If in the chain, go back
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0040
		}
		else = {  # Else, send a toast of what you got
			save_scope_as = send_toast
		}
	}

	option = {  # Expensive option - armor
		name = agot_filler_lys.0042.c
		custom_tooltip = agot_filler_lys.tt.armor

		add_character_flag = armory_c
		remove_short_term_gold = medium_gold_value
		hidden_effect = {
			set_artifact_rarity_masterwork = yes
			agot_filler_lys_0042_artifact_scripted_effect_armor = yes
		}
		stress_impact = {
			strategist = minor_stress_loss
			content = minor_stress_gain
			ambitious = minor_stress_loss
		}

		ai_chance = {
			base = 25
			modifier = {
				add = {
					value = short_term_gold
					subtract = medium_gold_value
				}
			}
		}

		if = {  # If in the chain, go back
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0040
		}
		else = {  # Else, send a toast of what you got
			save_scope_as = send_toast
		}
	}

	option = {  # Expensive option - weapon
		name = agot_filler_lys.0042.d
		custom_tooltip = agot_filler_lys.tt.weapon

		add_character_flag = armory_c
		remove_short_term_gold = medium_gold_value
		hidden_effect = {
			set_artifact_rarity_masterwork = yes
			agot_filler_lys_0042_artifact_scripted_effect_weapon = yes
		}
		stress_impact = {
			strategist = minor_stress_loss
			content = minor_stress_gain
			ambitious = minor_stress_loss
		}

		ai_chance = {
			base = 25
			modifier = {
				add = {
					value = short_term_gold
					subtract = medium_gold_value
				}
			}
		}

		if = {  # If in the chain, go back
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0040
		}
		else = {  # Else, send a toast of what you got
			save_scope_as = send_toast
		}
	}

	option = {  # Nevermind, I don't want anything
		name = agot_filler_lys.0042.e

		add_character_flag = armory_e
		stress_impact = {
			strategist = minor_stress_gain
			content = minor_stress_loss
		}

		ai_chance = {
			base = 25
			modifier = {
				add = 25
				has_trait = content
			}
		}

		if = {
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0040
		}
	}

	after = {
		scope:market_merchant = { silent_disappearance_effect = yes }
		scope:send_toast ?= {
			hidden_effect = {
				send_interface_toast = {
					title = agot_filler_lys.bought_artifact
					custom_tooltip = agot_filler_lys.bought_artifact.tooltip
					left_icon = root
					right_icon = scope:newly_created_artifact
				}
			}
		}
		if = {
			limit = { NOT = { has_character_flag = at_super_market } }
			trigger_event = agot_filler_lys.0050
		}
	}
}


###################
# 0043 - PERFUMES #
###################

scripted_effect agot_filler_lys_0043_artifact_scripted_effect = {
	create_artifact = {
		name = agot_market_perfume_name
		description = agot_market_perfume_description
		type = miscellaneous
		visuals = flask
		creator = scope:market_merchant
		modifier = artifact_placeholder_modifier
		save_scope_as = newly_created_artifact
		wealth = scope:wealth
		quality = scope:quality
	}
	scope:newly_created_artifact = {
		add_artifact_modifier = $MODIFIER_1$
		add_artifact_modifier = $MODIFIER_2$
	}
}

# 0043 - Looking at perfumes
# by: Steelers
agot_filler_lys.0043 = {
	type = character_event
	title = agot_filler_lys.0043.t
	desc = {
		desc = agot_filler_lys.0043.desc
		triggered_desc = {
			trigger = { diplomacy >= excellent_skill_level }
			desc = agot_filler_lys.0043.desc.special
		}
	}
	theme = diplomacy
	override_background = { reference = market }

	left_portrait = {
		character = scope:market_merchant
		animation = personality_rational
	}
	right_portrait = {
		character = root
		animation = thinking
	}

	trigger = {
		OR = {
			is_available_adult = yes
			is_available_travelling_adult = yes
		}
		root.location = { geographical_region = world_essos_lys_city }
	}

	immediate = {
		create_character = {
			location = root.location
			template = agot_merchant_character
			save_scope_as = market_merchant
		}
		# For modifier description
		set_variable = {
			name = Lys
			value = province:7388  # 7388 = b_lys
		}
	}

	option = {  # Excellent option
		name = agot_filler_lys.0043.a
		custom_tooltip = agot_filler_lys.tt.trinket
		trigger = { diplomacy >= excellent_skill_level }

		add_character_flag = perfume_a
		remove_short_term_gold = major_gold_value
		hidden_effect = {
			set_artifact_rarity_famed = yes
			agot_filler_lys_0043_artifact_scripted_effect = {
				MODIFIER_1 = artifact_attraction_opinion_3_modifier
				MODIFIER_2 = artifact_courtier_and_guest_opinion_3_modifier
			}
			add_character_flag = purchased_perfume
		}
		stress_impact = {
			diplomat = minor_stress_loss
			content = minor_stress_gain
			ambitious = minor_stress_loss
		}

		ai_chance = {
			base = 25
			modifier = {
				add = {
					value = short_term_gold
					subtract = major_gold_value
					multiply = 1.25
				}
			}
		}

		if = {  # If in the chain, go back
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0040
		}
		else = {  # Else, send a toast of what you got
			save_scope_as = send_toast
		}
	}

	option = {  # Expensive option
		name = agot_filler_lys.0043.b
		custom_tooltip = agot_filler_lys.tt.trinket

		add_character_flag = perfume_b
		remove_short_term_gold = medium_gold_value
		hidden_effect = {
			# save_scope_as = masterwork
			set_artifact_rarity_masterwork = yes
			agot_filler_lys_0043_artifact_scripted_effect = {
				MODIFIER_1 = artifact_attraction_opinion_2_modifier
				MODIFIER_2 = artifact_courtier_and_guest_opinion_2_modifier
			}
			add_character_flag = purchased_perfume
		}
		stress_impact = {
			diplomat = miniscule_stress_loss
			content = miniscule_stress_gain
			ambitious = miniscule_stress_loss
		}

		ai_chance = {
			base = 25
			modifier = {
				add = {
					value = short_term_gold
					subtract = medium_gold_value
				}
			}
		}

		if = {  # If in the chain, go back
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0040
		}
		else = {  # Else, send a toast of what you got
			save_scope_as = send_toast
		}
	}

	option = {  # Cheap option
		name = agot_filler_lys.0043.c
		custom_tooltip = agot_filler_lys.tt.trinket

		add_character_flag = perfume_c
		remove_short_term_gold = minor_gold_value
		hidden_effect = {
			# save_scope_as = common
			set_artifact_rarity_common = yes
			agot_filler_lys_0043_artifact_scripted_effect = {
				MODIFIER_1 = artifact_attraction_opinion_1_modifier
				MODIFIER_2 = artifact_courtier_and_guest_opinion_1_modifier
			}
			add_character_flag = purchased_perfume
		}
		stress_impact = {
			diplomat = miniscule_stress_loss
			content = miniscule_stress_gain
			ambitious = miniscule_stress_loss
		}

		ai_chance = {
			base = 25
			modifier = {
				add = {
					value = short_term_gold
					subtract = minor_gold_value
					multiply = 0.75
				}
			}
		}

		if = {  # If in the chain, go back
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0040
		}
		else = {  # Else, send a toast of what you got
			save_scope_as = send_toast
		}
	}

	option = {  # Nevermind, I don't want anything
		name = agot_filler_lys.0043.d

		add_character_flag = perfume_d
		stress_impact = {
			diplomat = minor_stress_gain
			content = minor_stress_loss
		}

		ai_chance = {
			base = 25
			modifier = {
				add = 25
				has_trait = content
			}
		}

		if = {
			limit = { has_character_flag = at_super_market }
			trigger_event = agot_filler_lys.0040
		}
	}

	after = {
		scope:market_merchant = { silent_disappearance_effect = yes }
		scope:send_toast ?= {
			hidden_effect = {
				send_interface_toast = {
					title = agot_filler_lys.bought_artifact
					custom_tooltip = agot_filler_lys.bought_artifact.tooltip
					left_icon = root
					right_icon = scope:newly_created_artifact
				}
			}
		}
		if = {
			limit = { NOT = { has_character_flag = at_super_market } }
			trigger_event = agot_filler_lys.0050
		}
	}
}


###################
# 0050 - CLEAN UP #
###################

# STEELERS TODO: Things to come?

# 0050 - Hidden, clean up event
# by: Steelers
agot_filler_lys.0050 = {
	type = character_event
	hidden = yes

	immediate = {
		# Remove all applicable flags
		# 0031 Clean up
		remove_character_flag = at_super_market
		# 0032 Clean up
		if = {
			limit = { has_character_flag = jewelry_a_taken }
			remove_character_flag = jewelry_a_taken
		}
		else_if = {
			limit = { has_character_flag = jewelry_b_taken }
			remove_character_flag = jewelry_b_taken
		}
		else_if = {
			limit = { has_character_flag = jewelry_c_taken }
			remove_character_flag = jewelry_c_taken
		}
		else_if = {
			limit = { has_character_flag = jewelry_d_taken }
			remove_character_flag = jewelry_d_taken
		}
		if = {
			limit = { has_character_flag = book_a_taken }
			remove_character_flag = book_a_taken
		}
		else_if = {
			limit = { has_character_flag = book_b_taken }
			remove_character_flag = book_b_taken
		}
		else_if = {
			limit = { has_character_flag = book_c_taken }
			remove_character_flag = book_c_taken
		}
		else_if = {
			limit = { has_character_flag = book_d_taken }
			remove_character_flag = book_d_taken
		}
		if = {
			limit = { has_character_flag = furniture_a_taken }
			remove_character_flag = furniture_a_taken
		}
		else_if = {
			limit = { has_character_flag = furniture_b_taken }
			remove_character_flag = furniture_b_taken
		}
		else_if = {
			limit = { has_character_flag = furniture_c_taken }
			remove_character_flag = furniture_c_taken
		}
		else_if = {
			limit = { has_character_flag = furniture_d_taken }
			remove_character_flag = furniture_d_taken
		}
		if = {
			limit = { has_character_flag = looked_at_jewelry }
			remove_character_flag = looked_at_jewelry
		}
		if = {
			limit = { has_character_flag = looked_at_books }
			remove_character_flag = looked_at_books
		}
		if = {
			limit = { has_character_flag = looked_at_furniture }
			remove_character_flag = looked_at_furniture
		}
		# Lys Var Clean up
		if = {
			limit = { exists = var:Lys }
			remove_variable = Lys
		}
		# 0033 Clean up
		if = {
			limit = { has_character_flag = purchased_ring }
			remove_character_flag = purchased_ring
		}
		else_if = {
			limit = { has_character_flag = purchased_necklace }
			remove_character_flag = purchased_necklace
		}
		else_if = {
			limit = { has_character_flag = purchased_brooch }
			remove_character_flag = purchased_brooch
		}
		else_if = {
			limit = { has_character_flag = purchased_goblet }
			remove_character_flag = purchased_goblet
		}
		if = {
			limit = { has_character_flag = jewelry_a }
			remove_character_flag = jewelry_a
		}
		else_if = {
			limit = { has_character_flag = jewelry_b }
			remove_character_flag = jewelry_b
		}
		else_if = {
			limit = { has_character_flag = jewelry_c }
			remove_character_flag = jewelry_c
		}
		else_if = {
			limit = { has_character_flag = jewelry_d }
			remove_character_flag = jewelry_d
		}
		# 0034 Clean up
		if = {
			limit = { has_character_flag = purchased_court_book }
			remove_character_flag = purchased_court_book
		}
		else_if = {
			limit = { has_character_flag = purchased_trinket_book }
			remove_character_flag = purchased_trinket_book
		}
		if = {
			limit = { has_character_flag = book_a }
			remove_character_flag = book_a
		}
		else_if = {
			limit = { has_character_flag = book_b }
			remove_character_flag = book_b
		}
		else_if = {
			limit = { has_character_flag = book_c }
			remove_character_flag = book_c
		}
		else_if = {
			limit = { has_character_flag = book_d }
			remove_character_flag = book_d
		}
		# 0035 Clean up
		if = {
			limit = { has_character_flag = purchased_throne }
			remove_character_flag = purchased_throne
		}
		else_if = {
			limit = { has_character_flag = purchased_tapestry }
			remove_character_flag = purchased_tapestry
		}
		else_if = {
			limit = { has_character_flag = purchased_wall_banner }
			remove_character_flag = purchased_wall_banner
		}
		else_if = {
			limit = { has_character_flag = purchased_wall_shield }
			remove_character_flag = purchased_wall_shield
		}
		else_if = {
			limit = { has_character_flag = purchased_sculpture }
			remove_character_flag = purchased_sculpture
		}
		if = {
			limit = { has_character_flag = furniture_a }
			remove_character_flag = furniture_a
		}
		else_if = {
			limit = { has_character_flag = furniture_b }
			remove_character_flag = furniture_b
		}
		else_if = {
			limit = { has_character_flag = furniture_c }
			remove_character_flag = furniture_c
		}
		else_if = {
			limit = { has_character_flag = furniture_d }
			remove_character_flag = furniture_d
		}
		# 0040 Clean up
		if = {
			limit = { has_character_flag = alchemy_a_taken }
			remove_character_flag = alchemy_a_taken
		}
		else_if = {
			limit = { has_character_flag = alchemy_b_taken }
			remove_character_flag = alchemy_b_taken
		}
		else_if = {
			limit = { has_character_flag = alchemy_c_taken }
			remove_character_flag = alchemy_c_taken
		}
		else_if = {
			limit = { has_character_flag = alchemy_d_taken }
			remove_character_flag = alchemy_d_taken
		}
		if = {
			limit = { has_character_flag = armory_a_taken }
			remove_character_flag = armory_a_taken
		}
		else_if = {
			limit = { has_character_flag = armory_c_taken }
			remove_character_flag = armory_c_taken
		}
		else_if = {
			limit = { has_character_flag = armory_e_taken }
			remove_character_flag = armory_e_taken
		}
		if = {
			limit = { has_character_flag = perfume_a_taken }
			remove_character_flag = perfume_a_taken
		}
		else_if = {
			limit = { has_character_flag = perfume_b_taken }
			remove_character_flag = perfume_b_taken
		}
		else_if = {
			limit = { has_character_flag = perfume_c_taken }
			remove_character_flag = perfume_c_taken
		}
		else_if = {
			limit = { has_character_flag = perfume_d_taken }
			remove_character_flag = perfume_d_taken
		}
		if = {
			limit = { has_character_flag = looked_at_alchemy }
			remove_character_flag = looked_at_alchemy
		}
		if = {
			limit = { has_character_flag = looked_at_armory }
			remove_character_flag = looked_at_armory
		}
		if = {
			limit = { has_character_flag = looked_at_perfume }
			remove_character_flag = looked_at_perfume
		}
		# 0041 Clean up
		# Same book stuff as 0034
		if = {
			limit = { has_character_flag = alchemy_a }
			remove_character_flag = alchemy_a
		}
		else_if = {
			limit = { has_character_flag = alchemy_b }
			remove_character_flag = alchemy_b
		}
		else_if = {
			limit = { has_character_flag = alchemy_c }
			remove_character_flag = alchemy_c
		}
		else_if = {
			limit = { has_character_flag = alchemy_d }
			remove_character_flag = alchemy_d
		}
		# 0042 Clean up
		if = {
			limit = { has_character_flag = purchased_armor }
			remove_character_flag = purchased_armor
		}
		else_if = {
			limit = { has_character_flag = purchased_weapon }
			remove_character_flag = purchased_weapon
		}
		if = {
			limit = { has_character_flag = armory_a }
			remove_character_flag = armory_a
		}
		else_if = {
			limit = { has_character_flag = armory_c }
			remove_character_flag = armory_c
		}
		else_if = {
			limit = { has_character_flag = armory_e }
			remove_character_flag = armory_e
		}
		# 0043 Clean up
		if = {
			limit = { has_character_flag = purchased_perfume }
			remove_character_flag = purchased_perfume
		}
		if = {
			limit = { has_character_flag = perfume_a }
			remove_character_flag = perfume_a
		}
		else_if = {
			limit = { has_character_flag = perfume_b }
			remove_character_flag = perfume_b
		}
		else_if = {
			limit = { has_character_flag = perfume_c }
			remove_character_flag = perfume_c
		}
		else_if = {
			limit = { has_character_flag = perfume_d }
			remove_character_flag = perfume_d
		}
	}
}
