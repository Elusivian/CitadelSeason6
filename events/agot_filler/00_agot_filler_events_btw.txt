namespace = agot_filler_btw

##########################################
# Land dispute
##########################################

agot_filler_btw.100 = { #
	type = character_event
	title = agot_filler_btw.100.t
	desc = agot_filler_btw.100.desc

	theme = rival_relation

	override_background = {
		reference = wilderness_scope
	}

	left_portrait = {
		character = root
		animation = personality_cynical
	}

	right_portrait = {
		character = scope:the_hunter
		animation = anger
	}

	trigger = {
		is_available_allow_travelling = yes
		exists = location
		location = {
			geographical_region = world_westeros_beyond_the_wall
		}
		NOT = {
			has_character_flag = btw_land_dispute
		}
	}

	immediate = {	#for redundance
		add_character_flag = btw_land_dispute

		create_character = {	# for portrait
			age = { 26 38 }
			gender_female_chance = root_soldier_female_chance
			faith = root.faith
			culture = root.culture
			trait = lifestyle_hunter
			dynasty = none
			location = root.location
			save_scope_as = the_hunter
		}
	}

	option = {	#This is my rightful land. GTFO
		name = agot_filler_btw.100.a
		trigger = {
			OR = {
				has_trait = brave
				has_trait = sadistic
				has_trait = callous
				has_trait = ambitious
				has_trait = arrogant
				has_trait = arbitrary
				has_trait = arrogant
				has_trait = greedy
				has_trait = deceitful
			}
		}

		custom_tooltip = agot_filler_btw.100.a.tt
		add_character_modifier = { #
			modifier = btwfiller_strong_armed_neighbour_modifier
			days = 36500
		}
	}

	option = {	#There's no need for violence, we can settle this without bloodshed.
		name = agot_filler_btw.100.b
		trigger = {
			OR = {
				has_trait = brave
				has_trait = trusting
				has_trait = forgiving
				has_trait = calm
				has_trait = intellect_good_3
				has_trait = honest
				has_trait = intellect_good_1
				has_trait = intellect_good_2
				has_trait = shrewd
				has_trait = diplomat
			}
		}

		custom_tooltip = agot_filler_btw.100.b.tt
		duel = {
			skill = diplomacy
			value = 12

			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				send_interface_toast = {
					type = event_toast_effect_good #using your superb diplomacy skills, you quickly defused the situation
					left_icon = root
					title = agot_filler_btw.100.b.success
					add_character_modifier = {
						modifier = btwfiller_solved_dispute_modifier
						days = 36500
					}
				}
			}
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				desc = agot_filler_btw.100.b.failure #you get beat up and forced into giving your coffers up.
				send_interface_toast = {
					type = event_toast_effect_bad
					left_icon = root
					title = agot_filler_btw.100.b.failure
					add_character_modifier = {
						modifier = btwfiller_failed_dispute_modifier
						days = 36500
					}
					root = {
						add_trait = wounded_2
						remove_short_term_gold = 300
					}
				}
			}
		}
	}

	option = {	# Deliver the lands
		name = agot_filler_btw.100.c
		add_prestige = -10
	}

	after = {
		hidden_effect = {
			scope:the_hunter = {	# Prevent event character from having an impact.
				death = {
					death_reason = death_vanished
				}
			}
		}
	}
}


##########################################
# A wounded direwolf
##########################################

agot_filler_btw.200 = { #
	type = character_event
	title = agot_filler_btw.200.t
	desc = agot_filler_btw.200.desc

	theme = realm
	override_background = {
		reference = wilderness_mountains
	}

	left_portrait = {
		character = root
		animation = worry
	}

	right_portrait = {
		character = cp:councillor_marshal
		animation = worry
	}

	immediate = {
		add_character_flag = wounded_direwolf
		cp:councillor_marshal = { save_scope_as = marshal }
	}

	trigger = {
		exists = root.primary_heir
		root.primary_heir = {
			dynasty = prev.dynasty
			age <= 14
		}
		is_available_allow_travelling = yes
		exists = cp:councillor_marshal
		exists = location
		location = { geographical_region = world_westeros_beyond_the_wall }
		NOT = {
			has_character_flag = wounded_direwolf
		}
	}

	option = {	# This is an omen, bar the gates. Let no one venture forth from the settlement at night.
		name = agot_filler_btw.200.a
		trigger = {
			OR = {
				has_trait = zealous
				has_trait = paranoid
			}
		}
		stress_impact = {
			paranoid = minor_stress_gain
		}
		custom_tooltip = agot_filler_btw.200.a.tt
		add_prestige = -10
	}

	option = {	# We must nurse him back to health.
		name = agot_filler_btw.200.b
		custom_tooltip = agot_filler_btw.200.b.tt
		trigger = {
			NAND = {
				has_trait = zealous
				has_trait = paranoid
			}
			learning >= 7
		}
		stress_impact = {
			sadistic = minor_stress_gain
			callous = minor_stress_gain
			compassionate = minor_stress_loss
		}
		trigger_event = {
			id = agot_filler_btw.201
			days = 7
		}
	}

	option = {	# Let nature take it's course.
		name = agot_filler_btw.200.c
		stress_impact = {
			sadistic = minor_stress_loss
			callous = minor_stress_loss
			compassionate = minor_stress_gain
		}
	}
}


##########################################
# Wounded direwolf - recover
##########################################

agot_filler_btw.201 = { # wolf recovered. he seems attached to you and your son.
	type = character_event
	title = agot_filler_btw.201.t
	desc = agot_filler_btw.201.desc
	theme = realm
	override_background = {
		reference = courtyard
	}

	left_portrait = {
		character = root
		animation = ecstasy
	}

	right_portrait = {
		character = primary_heir
		animation = happiness
	}

	option = {	# great!
		name = agot_filler_btw.201.a
		custom_tooltip = agot_filler_btw.201.a.tt
		primary_heir = {
			add_character_modifier = {
				modifier = direwolf_pet_modifier
				days = 36500
			}
			stress_impact = {
				compassionate = minor_stress_loss
			}
		}
		stress_impact = {
			compassionate = minor_stress_loss
		}
	}
}


##########################################
# Exploring Gorne's caves TODO
##########################################

#agot_filler_btw.300 = { #
#	type = character_event
#	title = agot_filler_btw.300.t
#	desc = agot_filler_btw.300.desc
#	theme = realm
	#override_background = { # AGOT TODO
	#	reference =
	#}

#	left_portrait = {
#		character = root
#		animation = stress
#	}

	#right_portrait = { # AGOT TODO
	#	character =
	#	animation =
	#}

#	trigger = {
#	}

	#immediate = {	#for redundance # AGOT TODO
	#	add_character_flag =
	#}

#	option = {	#
		#name = agot_filler_btw.300.a # AGOT TODO
#		custom_tooltip = agot_filler_btw.300.a.tt
#	}
#}


##########################################
# Hardhome ghosts event
##########################################

agot_filler_btw.400 = { # you see a vision of a burning person walking out of a ruined house.
	type = character_event
	title = agot_filler_btw.400.t
	desc = agot_filler_btw.400.desc

	theme = mental_break
	override_background = {
		reference = throne_room_tribal
	}

	left_portrait = {
		character = root
		animation = fear
	}

	trigger = {
		exists = location
		location = title:b_hardhome.title_province
		is_available_allow_travelling = yes
		NOT = {
			has_character_flag = hardhome_resident
		}
	}

	immediate = {	#for redundance
		add_character_flag = hardhome_resident
	}

	option = {	# the ghosts... they're real...
		name = agot_filler_btw.400.a

		custom_tooltip = agot_filler_btw.400.a.tt
		add_stress = 100
		if = {
			limit = {
				OR = {
					has_trait = paranoid
					has_trait = craven
				}
			}
			add_character_modifier = visited_by_the_dead_modifier #you scream and cry for help
			stress_impact = {
				paranoid = massive_stress_gain
				craven = massive_stress_gain
			}
		}
		else = {
			add_character_modifier = visited_by_the_dead_2_modifier	# you watch patiently as they wander outside of your view.
		}
		stress_impact = {
			paranoid = massive_stress_gain
			craven = massive_stress_gain
		}
	}
}

##########################################
# Southerner with a strange book - Part 1
##########################################

agot_filler_btw.500 = { # A robed man waltz into your lands asking for refuge.
	type = character_event
	title = agot_filler_btw.500.t
	desc = agot_filler_btw.500.desc

	theme = realm
	override_background = {
		reference = wilderness_mountains
	}

	left_portrait = {
		character = root
		animation = boredom
	}

	right_portrait = {
		character = scope:maester
		animation = ecstasy
	}

	trigger = {
		is_available_allow_travelling = yes
		is_ruler = yes
		exists = location
		location = { geographical_region = world_westeros_beyond_the_wall }
		NOT = {
			has_character_flag = btw_maester_visit
		}
	}

	immediate = {	#for redundance
		add_character_flag = btw_maester_visit
		create_character = {
			save_scope_as = maester
			name = Abo
			age = 30
			gender = male
			trait = humble
			trait = content
			health = 5
			fertility = 0
			employer = root
			faith = faith:the_seven_main
			random_culture_in_group = culture:andal
			dynasty = none
			learning =  25
		}
	}

	option = {	# Allow him to come in.
		name = agot_filler_btw.500.a

		custom_tooltip = agot_filler_btw.500.a.tt
		trigger_event = {
			id = agot_filler_btw.501
			days = 1
		}
	}

	option = {	# Deny him entrance.
		name = agot_filler_btw.500.b
		custom_tooltip = agot_filler_btw.500.b.tt
		stress_impact = {
			paranoid = minor_stress_loss
			craven = minor_stress_loss
		}
	}

	option = {	# Kill him where he stands.
		name = agot_filler_btw.500.c
		custom_tooltip = agot_filler_btw.500.c.tt
		trigger = {
			root = {
				OR = {
					has_trait = sadistic
					#has_trait = wrathful
					has_trait = callous
				}
			}
		}
		scope:maester = {
			death = {
				killer = root
				death_reason = death_murder
			}
		}

		ai_chance = {
			base = 0
			ai_value_modifier = {
				ai_boldness = 2
				ai_vengefulness = 10
			}
		}

		stress_impact = {
			sadistic = medium_stress_impact_loss
			arrogant = medium_stress_impact_loss
		}
	}
}

##########################################
# Southerner with a strange book - Part 2
##########################################

agot_filler_btw.501 = { # After breaking bread and ale together, he requests to stay for 10 years, recording your culture for posterity.
	type = character_event
	title = agot_filler_btw.501.t
	desc = agot_filler_btw.501.desc

	theme = culture_change
	override_background = {
		reference = throne_room_tribal
	}

	left_portrait = {
		character = root
		animation = boredom
	}

	right_portrait = {
		character = scope:maester
		animation = ecstasy
	}

	option = {	# Deny his request, he leaves
		name = agot_filler_btw.501.a
		custom_tooltip = agot_filler_btw.501.a.tt
		scope:maester = {
			death = {
				killer = root
				death_reason = death_vanished
			}
		}
	}

	option = {	# Allow the project
		name = agot_filler_btw.501.b
		custom_tooltip = agot_filler_btw.501.b.tt
		if = {
			limit = {
				root = {
					has_trait = gregarious
				}
			}
			root = {
				set_relation_friend = {
					reason = friend_respected_foreign_culture
					target = scope:maester
				}
			}
		}
		root.capital_county = {
			add_county_modifier = {
				modifier = maesters_project_modifier
				years = 20
			}
		}
		root = {
			add_learning_lifestyle_perk_points = 2
			add_learning_lifestyle_xp = 100
		}
		trigger_event = {
			id = agot_filler_btw.502
			days = 3650
		}
	}

	option = {	# There is a meat sweeter than the most cornfed livestock...
		name = agot_filler_btw.501.c
		custom_tooltip = agot_filler_btw.501.c.tt
		trigger = {
			root = {
				has_trait = cannibal
			}
		}
		scope:maester = {
			death = {
				killer = root
				death_reason = death_eaten
			}
		}
	}
}

##########################################
# Southerner with a strange book - Part 3
##########################################

agot_filler_btw.502 = { # It's time. The maester is leaving.
	type = character_event
	title = agot_filler_btw.502.t
	desc = agot_filler_btw.502.desc

	theme = culture_change
	override_background = {
		reference = wilderness_mountains
	}

	left_portrait = {
		character = root
		animation = grief
	}

	right_portrait = {
		character = scope:maester
		animation = grief
	}

	option = {	# Heartfelt goodbye.
		name = agot_filler_btw.502.a
		custom_tooltip = agot_filler_btw.502.a.tt
		stress_impact = {
			compassionate = minor_stress_gain
		}
	}
}

############################
# Ice walk event chain - intro
############################

agot_filler_btw.600 = { #I live near a beautiful frozen lake, what to do?
	type = character_event
	title = agot_filler_btw.600.t
	desc = agot_filler_btw.600.desc
	theme = friendly
	override_background = {
		reference = wilderness_mountains
	}
	left_portrait = {
		character = root
		animation = boredom
	}

	trigger = {
		is_landed = yes
		is_travelling = no
		is_available_healthy_adult = yes
		NOT = {
			has_trait = callous
		}
		OR = {
			any_child = {
				count > 0
			}
			any_spouse = {
				scope_is_close_to_root_trigger = yes
				is_available_ai_adult = yes
			}
		}
		capital_province = {
			geographical_region = world_westeros_beyond_the_wall
		}
	}

	immediate = {
		random_child = { save_scope_as = fishing_child }
		random_spouse = { save_scope_as = skating_spouse }
	}

	# I will ice skate with my husband/wife
	option = {
		name = agot_filler_btw.600.a
		trigger = {
			scope:skating_spouse ?= {
				scope_is_close_to_root_trigger = yes
				is_available_ai_adult = yes
			}
		}
		ai_chance = {
			base = 50
			opinion_modifier = {
				opinion_target = scope:skating_spouse
			}
		}
		trigger_event = {
			id = agot_filler_btw.601
		}
	}

	# I will fish with my child
	option = {
		name = agot_filler_btw.600.b
		trigger = {
			scope:fishing_child ?= {
				is_ai = yes
			}
		}
		ai_chance = {
			base = 50
			opinion_modifier = {
				opinion_target = scope:fishing_child
			}
		}
		trigger_event = {
			id = agot_filler_btw.603
		}
	}

	# No thanks, that looks dangerous
	option = {
		name = agot_filler_btw.600.c
		trigger = {
			has_trait = craven
		}
		ai_chance = {
			base = 150 # will chose this unless craven AI really likes their spouse/child
		}
		add_prestige = minor_prestige_loss
	}
}

############################
# Ice walk event chain - skating with spouse part 1
############################

agot_filler_btw.601 = { #I am ice skating with my spouse
	type = character_event
	title = agot_filler_btw.601.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:skating_spouse = {
						has_trait=craven
					}
				}
				desc = agot_filler_btw.601.desc.craven_spouse
			}
			desc = agot_filler_btw.601.desc
		}
	}
	theme = marriage
	override_background = {
		reference = wilderness_mountains
	}
	left_portrait = {
		character = scope:skating_spouse
		animation = flirtation_left
		triggered_animation = {
			trigger = {
				has_trait = craven
			}
			animation = fear
		}
	}
	right_portrait = {
		character = root
		animation = flirtation
		triggered_animation = {
			trigger = {
				has_trait = craven
			}
			animation = fear
		}
	}

	# Lets practice moving in the cold instead
	option = {
		name = agot_filler_btw.601.a
		flavor = agot_filler_btw.601.a.flavor
		trigger = {
			AND = {
				root.martial >= 8
				number_of_commander_traits < 3
				NOT = {
					has_trait = winter_soldier
				}
			}
		}
		scope:skating_spouse = {
			add_opinion = {
				target = root
				modifier = ignored_opinion
				opinion = -20
			}
		}
		ai_chance = {
			base = 50
			opinion_modifier = { # more likely the less they like their spouse
				opinion_target = scope:skating_spouse
				multiplier = -1
			}
		}
		random_list = {
			50 = {
				desc = agot_filler_btw.601.a.a
				add_trait = winter_soldier
				modifier = {
					add = root.prowess
				}
			}
			50 = {
				desc = agot_filler_btw.601.a.b
				add_stress = minor_stress_gain
				modifier = {
					factor = {
						value = root.prowess
						multiply = -1
					}
				}
			}
		}
	}
	# Lets try to impress them
	option = {
		name = agot_filler_btw.601.b
		trigger = {
			OR = {
				has_trait = brave
				has_trait = arrogant
			}
			NOT = {
				has_trait = craven
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				add = 50
				has_trait = brave
			}
		}
		random_list = {
			5 = { #you die
				desc = agot_filler_btw.601.b.a
				death = {
					death_reason = death_accident
				}
			}
			35 = { #It's not very impressive
				desc = agot_filler_btw.601.b.b
				scope:skating_spouse = {
					add_opinion = {
						target = root
						modifier = awkward_opinion
						opinion = -10
					}
				}
				add_prestige = minor_prestige_loss
				stress_impact = {
					arrogant =  minor_stress_impact_gain
				}
				set_variable = {
					name = fell_over
					value = yes
				}
			}
			60 = { #You do quite well
				desc = agot_filler_btw.601.b.c
				scope:skating_spouse = {
					add_opinion = {
						target = root
						modifier = impressed_opinion
						opinion = 15
					}
				}
				add_prestige = medium_prestige_gain
				modifier = {
					add = root.prowess
				}
			}
		}
		trigger_event = {
			id = agot_filler_btw.602
		}
	}
	# Lets just have a nice time
	option = {
		name = agot_filler_btw.601.c
		scope:skating_spouse = {
			add_opinion = {
				target = root
				modifier = romantic_gesture_opinion
				opinion = 10
			}
		}
		ai_chance = {
			base = 100
		}
		trigger_event = {
			id = agot_filler_btw.602
		}
	}
}

############################
# Ice walk event chain - skating with spouse part 2
############################

agot_filler_btw.602 = { #I went ice skating with my spouse
	type = character_event
	title = agot_filler_btw.602.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { has_variable = fell_over }
				desc = agot_filler_btw.602.desc.fell_over
			}
			desc = agot_filler_btw.602.desc
		}
	}
	theme = marriage
	override_background = {
		reference = wilderness_mountains
	}
	left_portrait = {
		character = scope:skating_spouse
		animation = flirtation_left
		triggered_animation = {
			trigger = { has_variable = fell_over }
			animation = disapproval
		}
	}
	right_portrait = {
		character = root
		animation = flirtation
		triggered_animation = {
			trigger = { has_variable = fell_over }
			animation = shame
		}
	}

	# I'm going to tell everyone how amazing I was
	option = {
		name = agot_filler_btw.602.a
		trigger = {
			AND = {
				NOT = {
					has_variable = fell_over
				}
			}
		}
		every_courtier_or_guest = {
			limit = {
				NOT = {
					is_spouse_of = root # To prevent self-referencing
				}
			}
			add_opinion = {
				target = root
				modifier = impressed_opinion
				opinion = 10
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				add = 100
				has_trait = arrogant
			}
		}
		add_prestige = medium_prestige_gain
		if = {
			limit = {
				has_trait = arrogant
			}
			add_stress = minor_stress_loss
		}
	}
	# We should tell the court about this spot
	option = {
		name = agot_filler_btw.602.b
		trigger = {
			NOT = {
				has_trait = shy
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				add = 100
				has_trait = gregarious
			}
		}
		every_courtier_or_guest = {
			limit = {
				NOT = {
					OR = {
						has_trait = callous
						is_spouse_of = root # To prevent self-referencing
					}
				}
			}
			add_opinion = {
				target = root
				modifier = pleased_opinion
				opinion = 5
			}
			add_opinion = {
				target = scope:skating_spouse
				modifier = pleased_opinion
				opinion = 5
			}
		}
		if = {
			limit = {
				has_variable = fell_over
			}
			remove_variable = fell_over
		}
	}
	# Lets keep this to ourselves
	option = {
		name = agot_filler_btw.602.c
		scope:skating_spouse = {
			add_opinion = {
				target = root
				modifier = romantic_gesture_opinion
				opinion = 20
			}
		}
		ai_chance = {
			base = 100
			opinion_modifier = {
				opinion_target = scope:skating_spouse
			}
		}
		add_opinion = {
			target = scope:skating_spouse
			modifier = romantic_gesture_opinion
			opinion = 20
		}
		if = {
			limit = {
				has_variable = fell_over
			}
			remove_variable = fell_over
		}
	}
}

############################
# Ice walk event chain - fishing with child part 1
############################

agot_filler_btw.603 = { #I am fishing with my child
	type = character_event
	title = agot_filler_btw.603.t
	desc = agot_filler_btw.603.desc
	theme = family
	override_background = {
		reference = wilderness_mountains
	}
	left_portrait = {
		character = scope:fishing_child
		animation = admiration
		triggered_animation = {
			trigger = {has_trait = craven}
			animation = fear
		}
	}
	right_portrait = {
		character = root
		animation = idle
	}

	# Let's be cautious and sit on the edge
	option = {
		name = agot_filler_btw.603.a
		trigger = {
			has_trait = craven
		}
		random_list = {
			10 = {
				scope:fishing_child = {
					if = {
						limit = {
							number_of_personality_traits < personality_trait_limit
						}
						add_trait = craven
					}
				}
			}
			90 = {
				scope:fishing_child = { # Craven children are grateful
					if = {
						limit = {
							has_trait = craven
						}
						add_opinion = {
							target = root
							modifier = pleased_opinion
							opinion = 10
						}
					}
				}
			}
		}
		random_list = {
			20 = {
				desc = ice_walk.caught_fish
				set_variable = {
					name = caught_fish
					value = yes
				}
				modifier = {
					factor = {
						value = root.prowess
						multiply = 0.5
					}
				}
			}
			80 = {
				desc = ice_walk.missed_fish
			}
		}
		ai_chance = {
			base = 100 # cravens don't like the ice
		}
		trigger_event = {
			id = agot_filler_btw.604
		}
	}

	# Let's make a hole right in the middle to fish from
	option = {
		name = agot_filler_btw.603.b
		trigger = {
			has_trait = brave
		}
		random_list = {
			10 = {
				scope:fishing_child = {
					if = {
						limit = {
							number_of_personality_traits < personality_trait_limit
						}
						add_trait = brave
					}
				}
			}
			90 = {
				scope:fishing_child = { # Brave children are happier
					if = {
						limit = {
							has_trait = brave
						}
						add_opinion = {
							target = root
							modifier = respect_opinion
							opinion = 10
						}
					}
				}
			}
		}
		random_list = {
			50 = {
				desc = ice_walk.caught_fish
				set_variable = {
					name = caught_fish
					value = yes
				}
				modifier = {
					factor = {
						value = root.prowess
						multiply = 1.5
					}
				}
			}
			50 = {
				desc = ice_walk.missed_fish
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = {
					value = root.prowess
					multiply = 1.5
				}
			}
		}
		trigger_event = {
			id = agot_filler_btw.604
		}
	}

	# Let's just find a good spot
	option = {
		name = agot_filler_btw.603.c
		trigger_event = {
			id = agot_filler_btw.604
		}
		stress_impact = {
			craven = 15
		}
		ai_chance = {
			base = 60
			modifier = {
				add = root.prowess
			}
		}
		random_list = {
			60 = {
				desc = ice_walk.caught_fish
				set_variable = {
					name = caught_fish
					value = yes
				}
				modifier = {
					add = root.prowess
				}
			}
			40 = {
				desc = ice_walk.missed_fish
			}
		}
	}

	# Let's jump right in and fish with our hands!
	option = {
		name = agot_filler_btw.603.d
		trigger = {
			OR = {
				has_trait = lunatic_1
				has_trait = lunatic_genetic
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				add = 100
				has_trait = brave
			}
			modifier = {
				add = 100
				has_trait = stubborn
			}
		}
		random_list = {
			# You both die
			50 = {
				desc = agot_filler_btw.603.d.a
				death = {
					death_reason = death_accident
				}
				scope:fishing_child = {
					death = {
						death_reason = death_accident
					}
				}
			}
			# You die
			50 = {
				desc = agot_filler_btw.603.d.b
				death = {
					death_reason = death_accident
				}
				modifier = {
					add = scope:fishing_child.prowess
				}
			}
			# Your child dies
			50 = {
				desc = agot_filler_btw.603.d.c
				scope:fishing_child = {
					death = {
						death_reason = death_accident
					}
				}
				trigger_event = {
					id = agot_filler_btw.605
				}
				modifier = {
					add = root.prowess
				}
			}
			# Amazingly, it works!
			25 = {
				desc = agot_filler_btw.603.d.d
				scope:fishing_child = {
					if = {
						limit = {
							OR = {
								number_of_personality_traits < personality_trait_limit
								has_trait = craven
							}
						}
						remove_trait = craven
						add_trait = brave
					}
					add_prestige = medium_prestige_gain
				}
				if = {
					limit = {
						OR = {
							number_of_personality_traits < personality_trait_limit
							has_trait = craven
						}
					}
					remove_trait = craven
					add_trait = brave
				}
				add_prestige = medium_prestige_gain
				set_variable = {
					name = caught_fish
					value = yes
				}
				trigger_event = {
					id = agot_filler_btw.604
				}
				modifier = {
					add = scope:fishing_child.prowess
				}
				modifier = {
					add = root.prowess
				}
			}
		}
	}
}

############################
# Ice walk event chain - fishing with child part 2
############################

agot_filler_btw.604 = { #We went fishing, should we go again?
	type = character_event
	title = agot_filler_btw.604.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { has_variable = caught_fish }
				desc = agot_filler_btw.604.desc.caught_fish
			}
			desc = agot_filler_btw.604.desc
		}
	}
	theme = family
	override_background = {
		reference = wilderness_mountains
	}
	left_portrait = {
		character = scope:fishing_child
		animation = sadness
		triggered_animation = {
			trigger = { has_variable = caught_fish }
			animation = admiration
		}
	}
	right_portrait = {
		character = root
		animation = shame
		triggered_animation = {
			trigger = { has_variable = caught_fish }
			animation = happiness
		}
	}

	# We must always try again if we fail!
	option = {
		name = agot_filler_btw.604.a
		trigger = {
			AND = {
				NOT = {
					has_variable = caught_fish
				}
				has_trait = diligent
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				add = 100
				has_trait = stubborn
			}
		}
		add_prestige = minor_prestige_loss
		scope:fishing_child = {
			add_prestige = minor_prestige_loss
			random_list = {
				40 = {
					desc = agot_filler_btw.604.a.a
					add_trait = diligent
					add_opinion = {
						target = root
						modifier = respect_opinion
						opinion = 10
					}
					modifier = { # if they already have diligent they agree
						add = 60
						scope:fishing_child = {
							has_trait = diligent
						}
					}
					modifier = { # if they have stubborn they probably agree
						add = 60
						scope:fishing_child = {
							has_trait = stubborn
						}
					}
				}
				60 = {
					desc = agot_filler_btw.604.a.b
					add_opinion = {
						target = root
						modifier = respect_opinion
						opinion = -10
					}
					if = { # Arrogant children don't want to go if they didn't catch fish
						limit = {has_trait = arrogant}
						add_opinion = {
							target = root
							modifier = angry_opinion
							opinion = -15
						}
					}
					modifier = {
						add = -60
						scope:fishing_child = {
							has_trait = diligent
						}
					}
				}
			}
		}
	}

	# Lets go again sometime
	option = {
		name = agot_filler_btw.604.b
		ai_chance = {
			base = 100
			modifier = {
				add = 100
				has_variable = caught_fish
			}
		}
		if = { #characters that caught fish together like each other
			limit = {
				has_variable = caught_fish
			}
			add_opinion = {
				target = scope:fishing_child
				modifier = respect_opinion
				opinion = 15
			}
			scope:fishing_child = {
				add_opinion = {
					target = root
					modifier = pleased_opinion
					opinion = 15
				}
			}
		}
		else = {
			add_stress = minor_stress_gain  # going agian after failing is hard
			add_opinion = { # A little disappointed in their child
				target = scope:fishing_child
				modifier = respect_opinion
				opinion = -5
			}
			scope:fishing_child = {
				if = { # Arrogant children don't want to go if they didn't catch fish
					limit = {
						has_trait = arrogant
					}
					add_opinion = {
						target = root
						modifier = angry_opinion
						opinion = -15
					}
				}
				else = { # Most kids are just happy to go though
					add_opinion = {
						target = root
						modifier = pleased_opinion
						opinion = 5
					}
				}
			}
		}
		remove_variable = caught_fish
	}

	# Lets not go again
	option = {
		name = agot_filler_btw.604.c
		ai_chance = {
			base = 50
			modifier = {
				add = 100
				OR = {
					has_trait = craven
					has_trait = shy
				}
			}
			modifier = {
				add = 200
				has_trait = reclusive
			}
		}
		if = {
			limit = { has_variable = caught_fish }
			add_stress = minor_stress_loss # easier not to go
			add_opinion = {
				target = scope:fishing_child
				modifier = respect_opinion
				opinion = 15
			}
			scope:fishing_child = {
				if = { # Shy children didn't want to go anyway
					limit = {
						has_trait = shy
					}
					add_opinion = {
						target = root
						modifier = pleased_opinion
						opinion = 15
					}
				}
				else = { # Most kids would prefer to go again, especially if they caught fish
					add_opinion = {
						target = root
						modifier = angry_opinion
						opinion = -10
					}
				}
			}
			remove_variable = caught_fish
		}
		else = {
			add_opinion = { # A little disappointed in their child
				target = scope:fishing_child
				modifier = respect_opinion
				opinion = -5
			}
			scope:fishing_child = {
				if = { # Arrogant children don't want to go again if they didn't catch fish
					limit = {
						has_trait = arrogant
					}
					add_opinion = {
						target = root
						modifier = pleased_opinion
						opinion = 5
					}
				}
				if = { # Shy children didn't want to go anyway
					limit = {
						has_trait = shy
					}
					add_opinion = {
						target = root
						modifier = pleased_opinion
						opinion = 15
					}
				}
				if = { # Most kids would prefer to go again
					limit = {
						NOT = {
							has_trait = arrogant
							has_trait = shy
						}
					}
					add_opinion = {
						target = root
						modifier = angry_opinion
						opinion = -5
					}
				}
			}
		}
	}
}

############################
# Ice walk event chain - fishing with child went badly
############################

agot_filler_btw.605 = { #My child died because I was crazy!
	type = character_event
	title = agot_filler_btw.605.t
	desc = agot_filler_btw.605.desc
	theme = family
	override_background = {
		reference = wilderness_mountains
	}
	left_portrait = {
		character = scope:fishing_child
		animation = idle
	}
	right_portrait = {
		character = root
		animation = shock
	}
	option = { #I can't keep this secret!
		name = agot_filler_btw.605.a
		ai_chance = {
			base = 50
			modifier = {
				add = 100
				has_trait = honest
			}
		}
		if = { # Honest characters don't gain stress
			limit = {
				has_trait = honest
			}
		}
		else = {
			add_stress = minor_stress_gain
		}
		every_courtier = {
			limit = {
				NOT = {
					has_trait = callous
					has_trait = sadistic
				}
			}
			add_opinion = {
				target = root
				modifier = absolutely_horrified_opinion
				opinion = -20
			}
		}
	}
	option = { #I can't believe this happened...
		name = agot_filler_btw.605.b
		ai_chance = {
			base = 50
		}
		add_stress = major_stress_gain
	}
	option = { #If I don't tell anyone, I don't have to think about it
		name = agot_filler_btw.605.c
		ai_chance = {
			base = 50
			modifier = {
				add = 100
				has_trait = callous
			}
			modifier = {
				add = 100
				has_trait = deceitful
			}
		}
		if = {
			limit = {
				OR = {
					has_trait = callous
					has_trait = sadistic
				}
			}
		}
		else_if = {
			limit = {
				has_trait = deceitful
			}
			add_stress = minor_stress_gain
			trigger_event = {
				id = agot_filler_btw.606
				days = { 360 3600 }
			}
		}
		else = {
			add_stress = medium_stress_gain
			trigger_event = {
				id = agot_filler_btw.606
				days = { 360 3600 }
			}
		}
	}
	option = { #Eh, that's pretty funny
		name = agot_filler_btw.605.d
		trigger = {
			has_trait = sadistic
		}
		ai_chance = {
			base = 400
		}
		add_stress = medium_stress_loss
	}
}

############################
# Ice walk event chain - fishing with child haunts me
############################

agot_filler_btw.606 = { #I'm haunted by keeping my childs death secret
	type = character_event
	title = agot_filler_btw.606.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					OR = {
						has_trait = lunatic_1
						has_trait = lunatic_genetic
					}
				}
				desc = agot_filler_btw.606.desc.lunatic
			}
			triggered_desc = {
				trigger = {
					NOT = {
						OR = {
							has_trait = lunatic_1
							has_trait = lunatic_genetic
						}
					}
				}
				desc = agot_filler_btw.606.desc
			}
		}
	}
	theme = secret
	override_background = {
		reference = corridor_night
	}
	trigger = {
		NOT = {
			has_trait = sadistic
		}
	}

	left_portrait = {
		character = scope:fishing_child
		animation = beg
	}
	right_portrait = {
		character = root
		animation = grief
	}
	option = { # I must bare in my grief
		name = agot_filler_btw.606.a
		ai_chance = {
			base = 50
		}
		add_stress = medium_stress_gain
	}
	option = { # Maybe just one person can know...
		name = agot_filler_btw.606.b
		trigger = {
			has_trait = confider
		}
		ai_chance = {
			base = 100
		}
		add_stress = minor_stress_loss
		random_courtier = { # They confide in a random courtier
			if = { # If they have various traits they tell others - not as serious as root telling them
				limit = {
					OR = {
						has_trait = honest
						has_trait = confider
						has_trait = journaller
						has_trait = drunkard
					}
				}
				scope:root = {
					every_courtier = {
						add_opinion = {
							target = root
							modifier = absolutely_horrified_opinion
							opinion = -10
						}
					}
				}
			}
			if = {
				limit = {
					OR = { # they might not care
						has_trait = callous
						has_trait = sadistic
					}
				}

			}
			else = { #but they probably do - it was a while ago now though so not as bad
				add_opinion = {
					target = root
					modifier = absolutely_horrified_opinion
					opinion = -15
				}
			}
		}
	}
	option = { # I will pray for forgiveness
		name = agot_filler_btw.606.c
		trigger = {
			has_trait = zealous
		}
		ai_chance = {
			base = 100
		}
		add_stress = minor_stress_gain
		add_piety = -100
	}
}

######################
# Larder Frozen Shut #
######################

agot_filler_btw.700 = {
	type = character_event
	title = agot_filler_btw.700.t
	desc = agot_filler_btw.700.desc

	theme = realm

	override_background = {
		reference = agot_beyond_the_wall
	}

	left_portrait = {
		character = root
		animation = anger
		triggered_animation = {
			trigger = {
				OR = {
					has_trait = inappetetic
					has_trait = temperate
					has_trait = calm
				}
			}
			animation = personality_rational
		}
	}

	trigger = {
		is_landed = yes
		is_travelling = no
		is_available_healthy_adult = yes
		capital_province = {
			geographical_region = world_westeros_beyond_the_wall
		}
	}

	cooldown = { months = 36 }

	immediate = {
		every_courtier = {
			limit = {
				NOT = { this = root }
			}
			add_to_list = icebreakers
		}
		ordered_in_list = {
			list = icebreakers
			order_by = prowess
			position = 0
			save_scope_as = icebreaker
		}
	}

	option = { #break the ice yourself
		name = agot_filler_btw.700.a
		custom_tooltip = agot_filler_btw.700.a.tt
		duel = {
			skill = prowess
			value = high_skill_rating
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				send_interface_toast = {
					title = agot_filler_btw.700.a.toast.success.t
					left_icon = root
					add_prestige = medium_prestige_gain
				}
			}
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				send_interface_toast = {
					title = agot_filler_btw.700.a.toast.failure.t
					left_icon = root
					add_prestige = medium_prestige_loss
				}
				if = {
					limit = {
						has_royal_court = yes
						amenity_level = { type = court_food_quality value > 1 }
					}
					set_amenity_level = { type = court_food_quality value = 1 }
				}
				else = {
					add_character_modifier = {
						modifier = malnourished_modifier
						years = 3
					}
					every_courtier_or_guest = {
						custom = custom.every_courtier_and_guest
						add_character_modifier = {
							modifier = malnourished_modifier
							years = 3
						}
					}
				}
			}
		}
		stress_impact = {
			impatient = minor_stress_impact_loss
			lazy = minor_stress_impact_gain
		}

		ai_chance = {
			base = 25
			modifier = {
				add = 25
				prowess >= medium_skill_rating
			}
			modifier = {
				add = 25
				prowess >= high_skill_rating
			}
			modifier = {
				add = 25
				has_trait = impatient
			}
		}
	}

	option = { #get your strongest courtier to do it
		name = agot_filler_btw.700.b
		custom_tooltip = agot_filler_btw.700.b.tt
		scope:icebreaker = {
			duel = {
				skill = prowess
				value = high_skill_rating
				50 = {
					compare_modifier = {
						value = scope:duel_value
						multiplier = 3.5
						min = -49
					}
					root = {
						send_interface_toast = {
							title = agot_filler_btw.700.b.toast.success.t
							right_icon = scope:icebreaker
							add_prestige = medium_prestige_gain
						}
					}
				}
				50 = {
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
						min = -49
					}
					root = {
						send_interface_toast = {
							title = agot_filler_btw.700.b.toast.failure.t
							right_icon = scope:icebreaker
							add_prestige = medium_prestige_loss
						}
						if = {
							limit = {
								has_royal_court = yes
								amenity_level = { type = court_food_quality value > 1 }
							}
							set_amenity_level = { type = court_food_quality value = 1 }
						}
						else = {
							every_courtier_or_guest = {
								custom = custom.every_courtier_and_guest
								add_character_modifier = {
									modifier = malnourished_modifier
									years = 3
								}
							}
							add_character_modifier = {
								modifier = malnourished_modifier
								years = 3
							}
						}
					}
				}
			}
		}
		stress_impact = {
			impatient = minor_stress_impact_loss
			shy = medium_stress_impact_gain
			arrogant = medium_stress_impact_gain
		}

		ai_chance = {
			base = 25
			modifier = {
				add = -25
				has_trait = shy
			}
			modifier = {
				add = -25
				has_trait = arrogant
			}
			modifier = {
				add = 50
				scope:icebreaker = {
					prowess >= high_skill_rating
				}
			}
			modifier = {
				add = 25
				has_trait = impatient
			}
		}
	}

	option = { #get everyone to do it
		name = agot_filler_btw.700.c
		custom_tooltip = agot_filler_btw.700.c.tt
		every_courtier_or_guest = {
			custom = custom.every_courtier_and_guest
			add_opinion = {
				target = root
				modifier = angry_opinion
				opinion = -15
			}
		}
		add_prestige = minor_prestige_loss
		stress_impact = {
			sadistic = medium_stress_impact_loss
			shy = medium_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				add = -50
				has_trait = shy
			}
			modifier = {
				add = -25
				has_trait = compassionate
			}
			modifier = {
				add = 25
				has_trait = gluttonous
			}
		}
	}

	option = { #don't do it
	name = agot_filler_btw.700.d
	custom_tooltip = agot_filler_btw.700.d.tt
		if = {
			limit = {
				has_royal_court = yes
				amenity_level = { type = court_food_quality value > 1 }
			}
			set_amenity_level = { type = court_food_quality value = 1 }
		}
		else = {
			every_courtier_or_guest = {
				custom = custom.every_courtier_and_guest
				add_character_modifier = {
					modifier = malnourished_modifier
					years = 3
				}
			}
			add_character_modifier = {
				modifier = malnourished_modifier
				years = 3
			}
		}
		stress_impact = {
			inappetetic = medium_stress_impact_loss
			lazy = minor_stress_impact_loss
			gluttonous = massive_stress_impact_gain
		}

		ai_chance = {
			base = 0
			modifier = {
				add = 50
				has_trait = inappetetic
			}
			modifier = {
				add = 25
				has_trait = lazy
			}
			modifier = {
				add = -100
				has_trait = gluttonous
			}
		}
	}
}