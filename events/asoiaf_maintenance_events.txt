namespace = asoiaf_maintenance_events

asoiaf_maintenance_events.0001 = { #Viserys event to change his traits in exile
	type = character_event
	content_source = dlc_asoiaf
	title = asoiaf_maintenance_events_0001
	#window = big_event_window
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					character:Targaryen_9 ?= { is_alive = yes }
				}
				desc =  asoiaf_maintenance_events_0001_a_desc
			}
			triggered_desc = {
				trigger = {
					character:Targaryen_9 ?= { is_alive = no }
				}
				desc =  asoiaf_maintenance_events_0001_b_desc
			}
		}
	}

	trigger = {
		exists = global_var:asoiaf_Targaryen_8_pending_traits_change_variable
	}
	
	theme = mental_break

	#left_portrait = {
	#	character = character:Targaryen_8
	#	animation = assassin
	#	hide_info = yes
	#}
	left_portrait = {
		character = scope:asoiaf_Targaryen_8
		animation = stress
	}
	right_portrait = {
		character = scope:asoiaf_Targaryen_9
		triggered_animation = {
			trigger = { scope:asoiaf_Targaryen_9 ?= { is_alive = yes } }
			animation = paranoia
		}
		triggered_animation = {
			trigger = { scope:asoiaf_Targaryen_9 ?= { is_alive = no } }
			animation = dead
		}
	}

	immediate = {
		remove_global_variable = asoiaf_Targaryen_8_pending_traits_change_variable #so it never triggers again
		dynasty:dynn_Targaryen = {
			every_dynasty_member = {
				limit = { has_inactive_trait = asoiaf_Targaryen_9_trait } #Daenerys Targaryen (daughter of Aerys II)
				save_scope_as = asoiaf_Targaryen_9
			}
			every_dynasty_member = {
				limit = { has_inactive_trait = asoiaf_Targaryen_8_trait } #Viserys Targaryen (son of Aerys II)
				save_scope_as = asoiaf_Targaryen_8
				hidden_effect = { asoiaf_clear_personality_traits_effect = yes }
				add_trait = arrogant
				add_trait = impatient
				add_trait = wrathful
				add_trait = ambitious
				create_character_memory = { type = asoiaf_Targaryen_8_traits_change_memory }
			}
		}
	}
	option = {
		name = asoiaf_maintenance_events.0001.a
		add_stress = 100
	}
}

asoiaf_maintenance_events.0002 = { #Daenerys event FOR DAENERYS to change her traits upon marriage
	type = character_event
	content_source = dlc_asoiaf
	title = asoiaf_maintenance_events_0002
	#window = big_event_window
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { #Viserys alive and spouse alive
					scope:asoiaf_Targaryen_8 ?= { is_alive = yes }
				}
				desc =  asoiaf_maintenance_events_0002_a_desc
			}
			triggered_desc = {
				trigger = { #Viserys dead and spouse alive
					scope:asoiaf_Targaryen_8 ?= { is_alive = no }
				}
				desc =  asoiaf_maintenance_events_0002_b_desc
			}
		}
	}

	trigger = {
		NOT = { exists = global_var:asoiaf_Targaryen_9_traits_change_variable }
		character:Targaryen_9 ?= { is_married = yes } #only triggers if she is still married 6 months after wedding; she needs time to grow her confidence, less than 6 months isn't enough
	}
	
	theme = marriage

	left_portrait = {
		character = scope:asoiaf_Targaryen_9_spouse
		animation = personality_content
	}
	right_portrait = {
		character = scope:asoiaf_Targaryen_9
		animation = personality_bold
	}
	lower_center_portrait = {
		character = scope:asoiaf_Targaryen_8
	}

	immediate = {
		set_global_variable = asoiaf_Targaryen_9_traits_change_variable #so it never triggers again
		dynasty:dynn_Targaryen = {
			every_dynasty_member = {
				limit = { has_inactive_trait = asoiaf_Targaryen_9_trait } #Daenerys Targaryen (daughter of Aerys II)
				save_scope_as = asoiaf_Targaryen_9
				hidden_effect = { asoiaf_clear_personality_traits_effect = yes }
				add_trait = authoritative
				add_trait = ambitious
				add_trait = just
				add_trait = wrathful
				create_character_memory = { type = asoiaf_Targaryen_9_traits_change_memory }
				primary_spouse = {
					save_scope_as = asoiaf_Targaryen_9_spouse
					trigger_event = asoiaf_maintenance_events.0004 #exposition for Daenerys' spouse about Daenerys growing more independent
				}
			}
			every_dynasty_member = {
				limit = { has_inactive_trait = asoiaf_Targaryen_8_trait } #Viserys Targaryen (son of Aerys II)
				save_scope_as = asoiaf_Targaryen_8
				trigger_event = asoiaf_maintenance_events.0003 #exposition for Viserys about Daenerys growing more independent
			}
		}
	}
	option = {
		name = asoiaf_maintenance_events.0002.a
		add_prestige = 300
		add_stress = -25
	}
}

asoiaf_maintenance_events.0003 = { #Daenerys event FOR VISERYS to change her traits upon marriage
	type = character_event
	content_source = dlc_asoiaf
	title = asoiaf_maintenance_events_0003
	#window = big_event_window
	desc = asoiaf_maintenance_events_0003_desc
	
	theme = mental_break

	left_portrait = {
		character = scope:asoiaf_Targaryen_9
		animation = personality_bold
	}
	right_portrait = {
		character = scope:asoiaf_Targaryen_8
		animation = stress
	}
	lower_center_portrait = {
		character = scope:asoiaf_Targaryen_9_spouse
	}

	immediate = {
		dynasty:dynn_Targaryen = {
			every_dynasty_member = {
				limit = { has_inactive_trait = asoiaf_Targaryen_8_trait } #Viserys Targaryen (son of Aerys II)
				save_scope_as = asoiaf_Targaryen_8
			}
			every_dynasty_member = {
				limit = { has_inactive_trait = asoiaf_Targaryen_9_trait } #Daenerys Targaryen (daughter of Aerys II)
				save_scope_as = asoiaf_Targaryen_9
				primary_spouse = { save_scope_as = asoiaf_Targaryen_9_spouse }
			}
		}
	}
	option = {
		name = asoiaf_maintenance_events.0003.a
		add_prestige = -300
		add_stress = 100
	}
}

asoiaf_maintenance_events.0004 = { #Daenerys event FOR SPOUSE to change her traits upon marriage
	type = character_event
	content_source = dlc_asoiaf
	title = asoiaf_maintenance_events_0004
	#window = big_event_window
	desc = asoiaf_maintenance_events_0004_desc
	
	theme = marriage

	left_portrait = {
		character = scope:asoiaf_Targaryen_9
		animation = personality_bold
	}
	right_portrait = {
		character = scope:asoiaf_Targaryen_9_spouse
		animation = personality_content
	}

	immediate = {
		dynasty:dynn_Targaryen = {
			every_dynasty_member = {
				limit = { has_inactive_trait = asoiaf_Targaryen_9_trait } #Daenerys Targaryen (daughter of Aerys II)
				save_scope_as = asoiaf_Targaryen_9
				primary_spouse = { save_scope_as = asoiaf_Targaryen_9_spouse }
			}
		}
	}
	option = {
		name = asoiaf_maintenance_events.0004.a
	}
}

asoiaf_maintenance_events.0005 = { #Option for Aerys II Targaryen (if he's a player) to declare Viserys his heir after Rhaegar dies
	type = character_event
	content_source = dlc_asoiaf
	title = asoiaf_maintenance_events_0005
	#window = big_event_window
	desc = asoiaf_maintenance_events_0005_desc
	
	theme = death
	override_background = { reference = throne_room }

	left_portrait = {
		character = scope:asoiaf_Targaryen_3 #Rhaegar
		animation = dead
	}
	right_portrait = {
		character = scope:asoiaf_Targaryen_1 #Aerys II
		animation = paranoia
	}
	lower_left_portrait = {
		character = scope:asoiaf_Targaryen_11 #Aegon
	}
	lower_right_portrait = {
		character = scope:asoiaf_Targaryen_8 #Viserys
	}

	immediate = {
		character:Targaryen_1 ?= { #Aerys II
			save_scope_as = asoiaf_Targaryen_1
		}
		character:Targaryen_3 ?= { #Rhaegar
			save_scope_as = asoiaf_Targaryen_3
		}
		character:Targaryen_11 ?= { #Aegon
			save_scope_as = asoiaf_Targaryen_11
		}
		character:Targaryen_8 ?= { #Viserys
			save_scope_as = asoiaf_Targaryen_8
		}
		character:Baratheon_2 ?= { #Robert
			save_scope_as = asoiaf_Baratheon_2
		}
		character:Martell_2 ?= { #Lewyn
			save_scope_as = asoiaf_Martell_2
		}
	}
	option = {
		name = asoiaf_maintenance_events.0005.a
	}
	option = {
		name = asoiaf_maintenance_events.0005.b
		set_designated_heir = character:Targaryen_8 #Viserys
		reverse_add_opinion = {
			target = character:Targaryen_8
			modifier = grateful_opinion
			opinion = 50
		}
		reverse_add_opinion = {
			target = character:Targaryen_11
			modifier = passed_me_over_for_heir_opinion
			opinion = -50
		}
		if = {
			limit = { character:Martell_7 ?= { is_alive = yes } }
			reverse_add_opinion = {
				target = character:Martell_7
				modifier = passed_over_my_child_for_heir_opinion
				opinion = -50
			}
		}
	}
}

asoiaf_maintenance_events.0006 = { #PART 1: Rhaenyra imprisons her brothers and their children upon ascending the Iron Throne
	type = character_event
	content_source = dlc_asoiaf
	title = asoiaf_maintenance_events_0006
	#window = big_event_window
	desc = asoiaf_maintenance_events_0006_desc
	
	theme = crown
	override_background = { reference = throne_room }

	left_portrait = {
		character = scope:asoiaf_rhaenyra.father #Rhaenyra's father, who is dead
		triggered_animation = {
			trigger = { scope:asoiaf_rhaenyra.father ?= { is_alive = no } }
			animation = dead
		}
		triggered_animation = {
			trigger = { scope:asoiaf_rhaenyra.father ?= { is_alive = yes } }
			animation = personality_content
		}
	}
	right_portrait = {
		character = scope:asoiaf_rhaenyra #Rhaenyra; root
		animation = stress
	}
	lower_left_portrait = {
		character = scope:asoiaf_aegon #Aegon
		trigger = {
			scope:asoiaf_aegon = { exists = yes }
		}
	}
	lower_center_portrait = {
		character = scope:asoiaf_aemond #Aemond
		trigger = {
			scope:asoiaf_aemond = { exists = yes }
		}
	}
	lower_right_portrait = {
		character = scope:asoiaf_daeron #Daeron
		trigger = {
			scope:asoiaf_daeron = { exists = yes }
		}
	}

	immediate = {
		dynasty:dynn_Targaryen = {
			every_dynasty_member = {
				limit = { has_inactive_trait = asoiaf_Targaryen_63_trait } #Rhaenyra Targaryen (daughter of Viserys I)
				save_scope_as = asoiaf_rhaenyra
			}
			every_dynasty_member = {
				limit = { has_inactive_trait = asoiaf_Targaryen_65_trait } #Aegon II Targaryen
				save_scope_as = asoiaf_aegon
			}
			every_dynasty_member = {
				limit = { has_inactive_trait = asoiaf_Targaryen_67_trait } #Aemond Targaryen (son of Viserys I)
				save_scope_as = asoiaf_aemond
			}
			every_dynasty_member = {
				limit = { has_inactive_trait = asoiaf_Targaryen_68_trait } #Daeron Targaryen (son of Viserys I)
				save_scope_as = asoiaf_daeron
			}
			
		}
	}
	option = { #imprison brothers and their children
		name = asoiaf_maintenance_events.0006.a
		scope:asoiaf_rhaenyra = {
			trigger_event = { id = asoiaf_maintenance_events.0007 days = 7 } #trigger part 2 for executionss
			add_dread = major_dread_gain
		}
		custom_tooltip = {
			text = asoiaf_maintenance_events.0006.a.tt
			scope:asoiaf_rhaenyra = { #IMPRISONMENT EFFECT
				every_sibling = { #brothers
					limit = {
						father = { has_inactive_trait = asoiaf_Targaryen_60_trait }
						is_male = yes
						dynasty = scope:asoiaf_rhaenyra.dynasty
						is_courtier_of = scope:asoiaf_rhaenyra
						location ?= title:e_the_iron_throne.holder.capital_province #they're in the capital and not away
						NOR = {
							has_trait = maester
							has_trait = archmaester
							has_trait = kingsguard
							has_trait = high_septon
							has_trait = most_devout_member
							has_trait = septon
							has_trait = silent_sister
							has_trait = devoted
							has_trait = red_priest
							has_trait = drowned_man
							has_trait = nightswatch
							has_trait = bastard
						}
					}
					save_scope_as = asoiaf_rhaenyra_brothers
					imprison_character_effect = {
						TARGET = scope:asoiaf_rhaenyra_brothers
						IMPRISONER = scope:asoiaf_rhaenyra
					}
					change_prison_type = dungeon
					every_spouse = { #spouses of brothers who are pregnant
						limit = {
							has_trait = pregnant
							is_courtier_of = scope:asoiaf_rhaenyra
							location ?= title:e_the_iron_throne.holder.capital_province #they're in the capital and not away
						}
						save_scope_as = asoiaf_rhaenyra_brothers_spouses
						imprison_character_effect = {
							TARGET = scope:asoiaf_rhaenyra_brothers_spouses
							IMPRISONER = scope:asoiaf_rhaenyra
						}
						change_prison_type = dungeon
					}
					every_child = { #children of brothers
						limit = {
							dynasty = scope:asoiaf_rhaenyra.dynasty
							is_courtier_of = scope:asoiaf_rhaenyra
							location ?= title:e_the_iron_throne.holder.capital_province #they're in the capital and not away
							NOR = {
								has_trait = maester
								has_trait = archmaester
								has_trait = kingsguard
								has_trait = high_septon
								has_trait = most_devout_member
								has_trait = septon
								has_trait = silent_sister
								has_trait = devoted
								has_trait = red_priest
								has_trait = drowned_man
								has_trait = nightswatch
								has_trait = bastard
							}
						}
						save_scope_as = asoiaf_rhaenyra_brothers_children
						imprison_character_effect = {
							TARGET = scope:asoiaf_rhaenyra_brothers_children
							IMPRISONER = scope:asoiaf_rhaenyra
						}
						change_prison_type = dungeon
						every_spouse = { #spouses of children of brothers who are pregnant
							limit = {
								has_trait = pregnant
								is_courtier_of = scope:asoiaf_rhaenyra
								location ?= title:e_the_iron_throne.holder.capital_province #they're in the capital and not away
							}
							save_scope_as = asoiaf_rhaenyra_brothers_children_spouses
							imprison_character_effect = {
								TARGET = scope:asoiaf_rhaenyra_brothers_children_spouses
								IMPRISONER = scope:asoiaf_rhaenyra
							}
							change_prison_type = dungeon
						}
						every_child = { #grandchildren of brothers
							limit = {
								dynasty = scope:asoiaf_rhaenyra.dynasty
								is_courtier_of = scope:asoiaf_rhaenyra
								location ?= title:e_the_iron_throne.holder.capital_province #they're in the capital and not away
								NOR = {
									has_trait = maester
									has_trait = archmaester
									has_trait = kingsguard
									has_trait = high_septon
									has_trait = most_devout_member
									has_trait = septon
									has_trait = silent_sister
									has_trait = devoted
									has_trait = red_priest
									has_trait = drowned_man
									has_trait = nightswatch
									has_trait = bastard
								}
							}
							save_scope_as = asoiaf_rhaenyra_brothers_grandchildren
							imprison_character_effect = {
								TARGET = scope:asoiaf_rhaenyra_brothers_grandchildren
								IMPRISONER = scope:asoiaf_rhaenyra
							}
							change_prison_type = dungeon
						}
					}
				}
			}
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 100
				has_game_rule = agot_story_historical_events_historical_outcomes #historical events + historical outcomes = guarantee to choose this option
			}
			modifier = {
				add = 1
				has_game_rule = agot_story_historical_events_weighted_outcomes #historical events + weighted outcomes = 2:1 in favour of it happening
			}
			#all other history rules just make the selection random
		}
	}
	option = { #do nothing
		name = asoiaf_maintenance_events.0006.b
		scope:asoiaf_rhaenyra = { add_legitimacy = -2000 }
		ai_chance = {
			base = 1
			modifier = {
				add = 1000
				any_sibling = { #if an eligible brother for imprisonment (copied criteria from title on_action) is her lover or best friend, she'll tend not to go through with imprisonment
					is_male = yes
					is_alive = yes
					NOR = {
						has_trait = maester
						has_trait = archmaester
						has_trait = kingsguard
						has_trait = high_septon
						has_trait = most_devout_member
						has_trait = septon
						has_trait = devoted
						has_trait = red_priest
						has_trait = drowned_man
						has_trait = nightswatch
						has_trait = bastard
					}
					OR = {
						has_relation_lover = root
						has_relation_best_friend = root
					}
				}
			}
		}
	}
}

asoiaf_maintenance_events.0007 = { #PART 2: Rhaenyra executes her brothers and their children upon ascending the Iron Throne
	type = character_event
	content_source = dlc_asoiaf
	title = asoiaf_maintenance_events_0007
	#window = big_event_window
	desc = asoiaf_maintenance_events_0007_desc
	
	theme = crown
	override_background = { reference = dungeon }

	left_portrait = {
		character = scope:asoiaf_alicent #Alicent (if applicable)
		animation = fear
		trigger = {
			scope:asoiaf_alicent = { exists = yes }
		}
	}
	right_portrait = {
		character = scope:asoiaf_rhaenyra #Rhaenyra; root
		animation = stress
	}
	lower_left_portrait = {
		character = scope:asoiaf_aegon #Aegon
		trigger = {
			scope:asoiaf_aegon = {
				exists = yes
				is_imprisoned_by = scope:asoiaf_rhaenyra
			}
		}
	}
	lower_center_portrait = {
		character = scope:asoiaf_aemond #Aemond
		trigger = {
			scope:asoiaf_aemond = {
				exists = yes
				is_imprisoned_by = scope:asoiaf_rhaenyra
			}
		}
	}
	lower_right_portrait = {
		character = scope:asoiaf_daeron #Daeron
		trigger = {
			scope:asoiaf_daeron = {
				exists = yes
				is_imprisoned_by = scope:asoiaf_rhaenyra
			}
		}
	}

	immediate = {
		dynasty:dynn_Targaryen = {
			every_dynasty_member = {
				limit = { has_inactive_trait = asoiaf_Targaryen_63_trait } #Rhaenyra Targaryen (daughter of Viserys I)
				save_scope_as = asoiaf_rhaenyra
			}
			every_dynasty_member = {
				limit = { has_inactive_trait = asoiaf_Targaryen_65_trait } #Aegon II Targaryen
				save_scope_as = asoiaf_aegon
			}
			every_dynasty_member = {
				limit = { has_inactive_trait = asoiaf_Targaryen_67_trait } #Aemond Targaryen (son of Viserys I)
				save_scope_as = asoiaf_aemond
			}
			every_dynasty_member = {
				limit = { has_inactive_trait = asoiaf_Targaryen_68_trait } #Daeron Targaryen (son of Viserys I)
				save_scope_as = asoiaf_daeron
			}
		}
		if = {
			limit = {
				OR = {
					exists = scope:asoiaf_aegon
					exists = scope:asoiaf_aemond
					exists = scope:asoiaf_daeron
				}
			}
			scope:asoiaf_aegon.mother = { save_scope_as = asoiaf_alicent }
		}
	}
	option = { #kills brothers and their children
		name = asoiaf_maintenance_events.0007.a
		scope:asoiaf_rhaenyra = {
			add_stress = 100
			add_legitimacy = 2000
		}
		scope:asoiaf_rhaenyra = {
			add_dread = massive_dread_gain
		}
		custom_tooltip = {
			text = asoiaf_maintenance_events.0007.a.tt
			scope:asoiaf_rhaenyra = { #EXECUTION EFFECT
				give_nickname = nick_the_black_queen
				every_sibling = { #brothers
					limit = {
						father = { has_inactive_trait = asoiaf_Targaryen_60_trait }
						is_male = yes
						dynasty = scope:asoiaf_rhaenyra.dynasty
						is_courtier_of = scope:asoiaf_rhaenyra
						is_imprisoned_by = scope:asoiaf_rhaenyra
						NOR = {
							has_trait = maester
							has_trait = archmaester
							has_trait = kingsguard
							has_trait = high_septon
							has_trait = most_devout_member
							has_trait = septon
							has_trait = silent_sister
							has_trait = devoted
							has_trait = red_priest
							has_trait = drowned_man
							has_trait = nightswatch
							has_trait = bastard
						}
					}
					save_scope_as = asoiaf_rhaenyra_brothers
					execute_prisoner_effect = {
						VICTIM = scope:asoiaf_rhaenyra_brothers
						EXECUTIONER = scope:asoiaf_rhaenyra
					}
					every_child = { #children of brothers
						limit = {
							dynasty = scope:asoiaf_rhaenyra.dynasty
							is_courtier_of = scope:asoiaf_rhaenyra
							is_imprisoned_by = scope:asoiaf_rhaenyra
							NOR = {
								has_trait = maester
								has_trait = archmaester
								has_trait = kingsguard
								has_trait = high_septon
								has_trait = most_devout_member
								has_trait = septon
								has_trait = silent_sister
								has_trait = devoted
								has_trait = red_priest
								has_trait = drowned_man
								has_trait = nightswatch
								has_trait = bastard
							}
						}
						save_scope_as = asoiaf_rhaenyra_brothers_children
						execute_prisoner_effect = {
							VICTIM = scope:asoiaf_rhaenyra_brothers_children
							EXECUTIONER = scope:asoiaf_rhaenyra
						}
						every_child = { #grandchildren of brothers
							limit = {
								dynasty = scope:asoiaf_rhaenyra.dynasty
								is_courtier_of = scope:asoiaf_rhaenyra
								is_imprisoned_by = scope:asoiaf_rhaenyra
								NOR = {
									has_trait = maester
									has_trait = archmaester
									has_trait = kingsguard
									has_trait = high_septon
									has_trait = most_devout_member
									has_trait = septon
									has_trait = silent_sister
									has_trait = devoted
									has_trait = red_priest
									has_trait = drowned_man
									has_trait = nightswatch
									has_trait = bastard
								}
							}
							save_scope_as = asoiaf_rhaenyra_brothers_children
							execute_prisoner_effect = {
								VICTIM = scope:asoiaf_rhaenyra_brothers_children
								EXECUTIONER = scope:asoiaf_rhaenyra
							}
						}
					}
				}
			}
		}
		hidden_effect = {
			scope:asoiaf_rhaenyra = {
				if = {
					limit = {
						OR = {
							has_trait = kinslayer_1 #Dynastic Kinslayer
							has_trait = kinslayer_2 #Familial Kinslayer
						}
					}
					remove_trait = kinslayer_1
					remove_trait = kinslayer_2
					add_trait = kinslayer_3 #Kinslayer
				}
			}
		}
		scope:asoiaf_alicent = {
			set_relation_grudge = { reason = asoiaf_alicent_rhaenyra_grudge_2_desc target = scope:asoiaf_rhaenyra } #grudge against Rhaenyra for killing her children
		}
		hidden_effect = {
			scope:asoiaf_rhaenyra = {
				every_vassal_or_below = {
					trigger_event = asoiaf_maintenance_events.0008 #the realm is informed of Rhaenyra's actions
				}
			}
		}
		ai_chance = {
			base = 1
			modifier = {
				has_game_rule = agot_story_historical_events_historical_outcomes #historical events + historical outcomes = guarantee to choose this option
				add = 1000
			}
			modifier = {
				has_game_rule = agot_story_historical_events_weighted_outcomes #historical events + weighted outcomes = 2:1 in favour of it happening
				add = 1
			}
			#all other history rules just make the selection random
		}
	}
	option = { #do nothing
		name = asoiaf_maintenance_events.0007.b
		scope:asoiaf_rhaenyra = {
			add_dread = -75
			add_legitimacy = -2000
		}
		custom_tooltip = {
			text = asoiaf_maintenance_events.0007.b.tt
			scope:asoiaf_rhaenyra = { #RELEASE FROM PRISON EFFECT
				every_sibling = { #brothers
					limit = {
						father = { has_inactive_trait = asoiaf_Targaryen_60_trait }
						is_male = yes
						dynasty = scope:asoiaf_rhaenyra.dynasty
						is_courtier_of = scope:asoiaf_rhaenyra
						is_imprisoned_by = scope:asoiaf_rhaenyra
						NOR = {
							has_trait = maester
							has_trait = archmaester
							has_trait = kingsguard
							has_trait = high_septon
							has_trait = most_devout_member
							has_trait = septon
							has_trait = silent_sister
							has_trait = devoted
							has_trait = red_priest
							has_trait = drowned_man
							has_trait = nightswatch
							has_trait = bastard
						}
					}
					release_from_prison = yes
					add_opinion = {
						target = scope:asoiaf_rhaenyra
						modifier = spared_my_life_opinion
						opinion = 50
					}
					every_spouse = { #spouses of brothers who are pregnant
						limit = {
							has_trait = pregnant
							is_courtier_of = scope:asoiaf_rhaenyra
							is_imprisoned_by = scope:asoiaf_rhaenyra
						}
						release_from_prison = yes
						add_opinion = {
							target = scope:asoiaf_rhaenyra
							modifier = spared_my_life_opinion
							opinion = 50
						}
					}
					every_child = { #children of brothers
						limit = {
							dynasty = scope:asoiaf_rhaenyra.dynasty
							is_courtier_of = scope:asoiaf_rhaenyra
							is_imprisoned_by = scope:asoiaf_rhaenyra
							NOR = {
								has_trait = maester
								has_trait = archmaester
								has_trait = kingsguard
								has_trait = high_septon
								has_trait = most_devout_member
								has_trait = septon
								has_trait = silent_sister
								has_trait = devoted
								has_trait = red_priest
								has_trait = drowned_man
								has_trait = nightswatch
								has_trait = bastard
							}
						}
						release_from_prison = yes
						add_opinion = {
							target = scope:asoiaf_rhaenyra
							modifier = spared_my_life_opinion
							opinion = 50
						}
						every_spouse = { #spouses of children of brothers who are pregnant
							limit = {
								has_trait = pregnant
								is_courtier_of = scope:asoiaf_rhaenyra
								is_imprisoned_by = scope:asoiaf_rhaenyra
							}
							release_from_prison = yes
							add_opinion = {
								target = scope:asoiaf_rhaenyra
								modifier = spared_my_life_opinion
								opinion = 50
							}
						}
						every_child = { #grandchildren of brothers
							limit = {
								dynasty = scope:asoiaf_rhaenyra.dynasty
								is_courtier_of = scope:asoiaf_rhaenyra
								is_imprisoned_by = scope:asoiaf_rhaenyra
								NOR = {
									has_trait = maester
									has_trait = archmaester
									has_trait = kingsguard
									has_trait = high_septon
									has_trait = most_devout_member
									has_trait = septon
									has_trait = silent_sister
									has_trait = devoted
									has_trait = red_priest
									has_trait = drowned_man
									has_trait = nightswatch
									has_trait = bastard
								}
							}
							release_from_prison = yes
							add_opinion = {
								target = scope:asoiaf_rhaenyra
								modifier = spared_my_life_opinion
								opinion = 50
							}
						}
					}
				}
			}
			scope:asoiaf_alicent = {
				add_opinion = {
					target = scope:asoiaf_rhaenyra
					modifier = spared_my_childrens_lives_opinion
					opinion = 50
				}
			}
		}
		ai_chance = {
			base = 1
		}
	}
}

asoiaf_maintenance_events.0008 = { #PART 2 (follow-up): The realm learns of Rhaenyra's actions — players are informed
	type = character_event
	content_source = dlc_asoiaf
	title = asoiaf_maintenance_events_0008
	#window = big_event_window
	desc = asoiaf_maintenance_events_0008_desc
	
	theme = death
	override_background = { reference = throne_room }

	left_portrait = {
		character = scope:asoiaf_alicent #Alicent (if applicable)
		animation = fear
		trigger = {
			scope:asoiaf_alicent = { exists = yes }
		}
	}
	right_portrait = {
		character = scope:asoiaf_rhaenyra #Rhaenyra; root
		animation = stress
	}
	lower_left_portrait = {
		character = scope:asoiaf_aegon #Aegon
		trigger = {
			scope:asoiaf_aegon = {
				exists = yes
				is_alive = no
			}
			scope:asoiaf_rhaenyra = {
				any_killed_character = { this = scope:asoiaf_aegon }
			}
		}
	}
	lower_center_portrait = {
		character = scope:asoiaf_aemond #Aemond
		trigger = {
			scope:asoiaf_aemond = {
				exists = yes
				is_alive = no
			}
			scope:asoiaf_rhaenyra = {
				any_killed_character = { this = scope:asoiaf_aemond }
			}
		}
	}
	lower_right_portrait = {
		character = scope:asoiaf_daeron #Daeron
		trigger = {
			scope:asoiaf_daeron = {
				exists = yes
				is_alive = no
			}
			scope:asoiaf_rhaenyra = {
				any_killed_character = { this = scope:asoiaf_daeron }
			}
		}
	}

	immediate = {
		dynasty:dynn_Targaryen = {
			every_dynasty_member = {
				limit = { has_inactive_trait = asoiaf_Targaryen_63_trait } #Rhaenyra Targaryen (daughter of Viserys I)
				save_scope_as = asoiaf_rhaenyra
			}
			every_dynasty_member = {
				limit = { has_inactive_trait = asoiaf_Targaryen_65_trait } #Aegon II Targaryen
				save_scope_as = asoiaf_aegon
			}
			every_dynasty_member = {
				limit = { has_inactive_trait = asoiaf_Targaryen_67_trait } #Aemond Targaryen (son of Viserys I)
				save_scope_as = asoiaf_aemond
			}
			every_dynasty_member = {
				limit = { has_inactive_trait = asoiaf_Targaryen_68_trait } #Daeron Targaryen (son of Viserys I)
				save_scope_as = asoiaf_daeron
			}
		}
		if = {
			limit = {
				OR = {
					exists = scope:asoiaf_aegon
					exists = scope:asoiaf_aemond
					exists = scope:asoiaf_daeron
				}
			}
			scope:asoiaf_aegon.mother = { save_scope_as = asoiaf_alicent }
		}
	}
	option = {
		name = asoiaf_maintenance_events.0008.a
	}
}