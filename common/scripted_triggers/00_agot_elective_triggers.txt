pirate_elective_potential_landless_dynastic_candidate_trigger = {
	save_temporary_scope_as = potential_candidate
	#Either the candidate is in the realm, or is landless, or the title is independent, or the realm of the title does NOT have protected inheritance.
	OR = {
		any_liege_or_above = {
			this = scope:holder
		}
		is_ruler = no
		AND = {
			agot_is_independent_ruler = yes
			has_government = pirate_government
		}
	}
	NOT = { #Landless characters should not be heirs to Theocracies/Republics.
		any_heir_title = {
			exists = holder
			holder = {
				has_unelectable_government_trigger = yes
			}
		}
	}
	OR = { #If the title controls the faith, candidates must be of the same faith.
		scope:holder = {
			NAND = {
				exists = faith.religious_head
				this = scope:holder.faith.religious_head #TODO_CD:It might need to be changed to check only for the title rather than the holder. (controlled_faith = scope:holder.faith)
			}
		}
		faith = scope:holder.faith
	}

	#Grandkid block
	trigger_if = {
		limit = {
			NOR = {
				#Check to see that you're not the product of incest
				AND = {
					exists = mother
					exists = father
					mother = {
						relation_with_character_is_incestuous_in_my_or_lieges_faith_trigger = { CHARACTER = prev.father }
					}
				}
				#Let's make the incredibly bold assumption that if incest is completely allowed we'll just default to check the child instead of parents
				scope:holder.faith = {
					has_doctrine_parameter = consanguinity_unrestricted_incest
				}
			}
		}
		# We don't want grandkids to show as candidates if their parent is eligable and still alive
		NOR = {
			AND = {
				exists = mother
				mother = {
					is_alive = yes
					parent_for_elective_succession_trigger = yes
				}
			}
			AND = {
				exists = father
				father = {
					is_alive = yes
					parent_for_elective_succession_trigger = yes
				}
			}
		}
	}
	#if incest is allowed, check if you're the child of the holder since you can be both their kid and grandkid at the same time...
	trigger_else_if = {
		limit = {
			OR = {
				AND = {
					exists = mother
					mother = {
						is_alive = yes
					}
				}
				AND = {
					exists = father
					father = {
						is_alive = yes
					}
				}
			}
		}
		parent_for_elective_succession_trigger = yes
	}
	trigger_else = {
		#Your parents are dead and you're eligible for title inheritance. Congrats.
	}

	has_unelectable_trait_trigger = no
	has_unelectable_government_trigger = no
}

agot_valid_general_elector_candidates_trigger = {
	NOR = {
		has_trait = kingsguard
		has_trait = nightswatch
		has_trait = maester
		has_trait = septon
	}
}