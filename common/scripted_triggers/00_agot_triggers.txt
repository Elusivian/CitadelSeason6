#Triggers to control Coat of Arms weighting

agot_can_convert_ward_culture = {
	scope:actor = { is_ai = no }
	NOR = {
		scope:secondary_actor.culture = scope:secondary_recipient.culture
		AND = {
			has_game_rule = agot_hv_conversion_disallowed
			scope:secondary_recipient = { is_adult = no }
			scope:secondary_actor.culture = culture:high_valyrian
		}
		AND = {
			has_game_rule = agot_hv_conversion_disallowed
			scope:secondary_actor = { is_adult = no }
			scope:secondary_recipient.culture = culture:high_valyrian
		}
		AND = {
			has_game_rule = agot_hv_conversion_disallowed
			scope:secondary_actor = { is_adult = no }
			scope:secondary_recipient.culture = culture:high_valyrian
			scope:secondary_actor.culture = culture:westerosi_valyrian
		}
		AND = {
			has_game_rule = agot_hv_conversion_disallowed
			scope:secondary_recipient = { is_adult = no }
			scope:secondary_actor.culture = culture:high_valyrian
			scope:secondary_recipient.culture = culture:westerosi_valyrian
		}
		AND = {
			NOT = { has_game_rule = agot_hv_conversion_unrestricted }
			scope:secondary_recipient = { is_adult = no }
			scope:secondary_recipient.culture = culture:high_valyrian
		}
		AND = {
			NOT = { has_game_rule = agot_hv_conversion_unrestricted }
			scope:secondary_actor = { is_adult = no }
			scope:secondary_actor.culture = culture:high_valyrian
		}
	}
}

#AGOT Added, vanilla requirements except 3 modified to 5 for create_cadet_branch_decision
agot_cadet_base_reqs_trigger = {
		# If you are Clan, you cannot be in the same realm as your House Head. For simplicity, we'll just force you to be independent.
		trigger_if = {
			limit = {
				government_has_flag = government_is_clan
			}
			is_independent_ruler = yes
		}
		# If you are Administrative, we let the player create a new House much easier, as to have easy access to their own Family Title and Estate.
		trigger_else_if = {
			limit = {
				government_allows = administrative
			}
			trigger_if = {
				limit = {
					is_ai = yes # We don't want the AI to create cadet branches willy nilly, so they have additional restrictions.
					top_liege = house.house_head.top_liege # But we do want the AI to create a cadet branch ASAP if the house head is in a different realm
				}
				NOT = { is_close_or_extended_family_of = house.house_head }
				custom_description = {
					text = create_cadet_branch_decision_succession_line
					house.house_head = {
						NOT = {
							any_held_title = {
								place_in_line_of_succession = {
									target = root
									value <=5
								}
							}
						}
					}
				}
			}
			# No triggers for players.
		}
		# For everyone else, you cannot be too close in the line of succession.
		trigger_else = {
			custom_description = {
				text = create_cadet_branch_decision_succession_line
				house.house_head = {
					NOT = {
						any_held_title = {
							place_in_line_of_succession = {
								target = root
								value <=5
							}
						}
					}
				}
			}
		}
		
		# No living ancestors should belong to your house.
		custom_description = {
			text = create_cadet_branch_decision_ancestor_in_house
			NOT = {
				any_ancestor = {
					house = root.house
				}
			}
		}
		
		trigger_if = {
			limit = {
				is_married = yes
				is_male = yes
			}
			patrilinear_marriage = yes
		}
		trigger_if = {
			limit = {
				is_married = yes
				is_female = yes
			}
			matrilinear_marriage = yes
		}
		trigger_if = { #Males of female-dominated faith must already be patrilineally married before taking this decision.
			limit = {
				is_married = no
				is_female = no
				faith = {
					has_doctrine = doctrine_gender_female_dominated
				}
			}
			patrilinear_marriage = yes
		}
		trigger_if = { #Females of male-dominated faith must already be matrilineally married before taking this decision.
			limit = {
				is_married = no
				is_female = yes
				faith = {
					has_doctrine = doctrine_gender_male_dominated
				}
			}
			matrilinear_marriage = yes
		}
		trigger_if = {
			limit = {
				has_trait = devoted
			}
			NOT = {
				has_trait = devoted
			}
		}
		trigger_if = {
			limit = {
				has_trait = bastard
			}
			NOT = {
				has_trait = bastard
			}
		}
}

agot_pregnancy_considered_unfaithful_trigger = {
	OR = {
		faith = { has_doctrine_parameter = no_unfaithfulness_penalty_active }
		AND = {
			culture = { has_cultural_parameter = can_have_paramours }
			scope:mother = { has_relation_paramour = pregnancy_real_father }
		}
	}
}

agot_is_historical_feud_trigger = {
	OR = {
		dynasty = dynasty:dynn_Peake
		dynasty = dynasty:dynn_Manderly
		dynasty = dynasty:dynn_Jast
		dynasty = dynasty:dynn_Falwell
		dynasty = dynasty:dynn_Whitehill
		dynasty = dynasty:dynn_Forrester
		dynasty = dynasty:dynn_Yronwood
		dynasty = dynasty:dynn_Fowler
		dynasty = dynasty:dynn_Blackwood
		dynasty = dynasty:dynn_Bracken
	}
}

agot_would_cheat_trigger = {
	OR = {
		#Horny lords will always be horny
		has_trait = lustful
		has_trait = rakish
		has_trait = seducer
		has_focus = intrigue_temptation_focus
		AND = {
			#None of these traits
			NOR = {
				#personality
				has_trait = just
				has_trait = chaste
				has_trait = celibate
				has_trait = loyal
				has_trait = honest
			}
			#The character must have at least one of the following traits:
			OR = {
				has_trait = fickle
				has_trait = impatient
				has_trait = gluttonous
				has_trait = schemer
				has_trait = lunatic
				has_trait = deviant
				has_trait = drunkard
				has_trait = arbitrary
				has_trait = adulterer
				has_trait = fornicator
				has_trait = deceitful
				has_trait = lustful
				has_trait = seducer
				has_trait = rakish
				has_trait = paranoid
				has_trait = arrogant
				has_trait = callous
				has_trait = sadistic
				has_trait = cynical
			}
		}
		#The player should be able to do it anyways.
		is_ai = no
	}
}

agot_traditional_lordship_trigger = {
	primary_title.tier = tier_kingdom
	OR = {
		primary_title = title:k_the_north
		primary_title = title:k_the_vale
		primary_title = title:k_the_westerlands
		primary_title = title:k_the_iron_islands
		primary_title = title:k_dragonstone
		#For spouses
		primary_title = title:k_dorne
	}
}