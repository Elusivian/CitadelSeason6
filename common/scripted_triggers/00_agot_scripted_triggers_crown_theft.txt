### SCENARIO TRIGGERS

any_succession_crisis_scenario_available = {
	OR = {
		#Standard Scenario
		agot_war_of_succession_standard_scenario = yes
		#Child Scenario
		agot_war_of_succession_child_scenario = yes
		#Bastard Scenario
		agot_war_of_succession_bastard_scenario = yes
		#Disinherited Scenario
		agot_war_of_succession_disinherited_scenario = yes
		#FleeingToSpouse Scenario - Adult Usurper
		agot_war_of_succession_landless_fleeing_to_spouse_scenario = yes
		#FleeingToFriend Scenario - Adult Usurper
		agot_war_of_succession_landless_fleeing_to_friend_scenario = yes
		#FleeingToSpouse Scenario - Child Usurper
		agot_war_of_succession_landless_fleeing_to_spouse_child_scenario = yes
		#FleeingToFriend Scenario - Child Usurper
		agot_war_of_succession_landless_fleeing_to_friend_child_scenario = yes
	}
}

# 01. Landed Heir, Adult Usurper
agot_war_of_succession_standard_scenario = {
	OR = {
		AND = {
			#scope:crown_theft_king.primary_heir = { is_playable_character = yes }
			scope:crown_theft_king.primary_heir = { NOT = { location ?= scope:crown_theft_king.capital_province } }
			scope:crown_theft_king.primary_title = {
				any_claimant = {
					agot_usurper_has_claim = yes
					is_adult = yes
					agot_can_be_usurper = yes
					agot_can_be_feudal_ruler = yes
					NOT = { agot_positive_relation_with_the_king = yes }
					location ?= scope:crown_theft_king.capital_province
					NOT = { has_trait = disinherited }
					NOT = { has_trait = bastard }
					NOT = { has_trait = bastard_founder }
					agot_usurper_same_house = yes
				}
			}
		}
		AND = {
			#scope:crown_theft_king.primary_heir = { is_playable_character = yes }
			scope:crown_theft_king.primary_heir = { NOT = { location ?= scope:crown_theft_king.capital_province } }
			any_courtier_or_guest = {
				agot_usurper_has_claim = yes
				is_adult = yes
				agot_can_be_usurper = yes
				agot_can_be_feudal_ruler = yes
				NOT = { agot_positive_relation_with_the_king = yes }
				location ?= scope:crown_theft_king.capital_province
				NOT = { has_trait = disinherited }
				NOT = { has_trait = bastard }
				NOT = { has_trait = bastard_founder }
				agot_usurper_same_house = yes
			}
		}
	}
}

# 02. Landed Heir, Child Usurper
agot_war_of_succession_child_scenario = {
	OR = {
		AND = {
			#scope:crown_theft_king.primary_heir = { is_playable_character = yes }
			scope:crown_theft_king.primary_heir = { NOT = { location ?= scope:crown_theft_king.capital_province } }
			scope:crown_theft_king.primary_title = {
				any_claimant = {
					agot_usurper_has_claim = yes
					NOT = { is_adult = yes }
					agot_is_free_human = yes
					agot_can_be_feudal_ruler = yes
					NOT = { agot_positive_relation_with_the_king = yes }
					location ?= scope:crown_theft_king.capital_province
					NOT = { has_trait = disinherited }
					NOT = { has_trait = bastard }
					NOT = { has_trait = bastard_founder }
					agot_usurper_same_house = yes
					any_relation = {
						type = guardian
						agot_can_be_usurper = yes
						NOT = { agot_positive_relation_with_the_king = yes }
						NOT = { this = scope:crown_theft_king }
					}
				}
			}
		}
		AND = {
			#scope:crown_theft_king.primary_heir = { is_playable_character = yes }
			scope:crown_theft_king.primary_heir = { NOT = { location ?= scope:crown_theft_king.capital_province } }
			any_courtier_or_guest = {
				agot_usurper_has_claim = yes
				NOT = { is_adult = yes }
				agot_is_free_human = yes
				agot_can_be_feudal_ruler = yes
				NOT = { agot_positive_relation_with_the_king = yes }
				location ?= scope:crown_theft_king.capital_province
				NOT = { has_trait = disinherited }
				NOT = { has_trait = bastard }
				NOT = { has_trait = bastard_founder }
				agot_usurper_same_house = yes
				any_relation = {
					type = guardian
					agot_can_be_usurper = yes
					NOT = { agot_positive_relation_with_the_king = yes }
					NOT = { this = scope:crown_theft_king }
				}
			}
		}
	}
}

# 03. Landed Heir, Adult & Bastard Usurper
agot_war_of_succession_bastard_scenario = {
	OR = {
		AND = {
			#scope:crown_theft_king.primary_heir = { is_playable_character = yes }
			scope:crown_theft_king.primary_heir = { NOT = { location ?= scope:crown_theft_king.capital_province } }
			scope:crown_theft_king.primary_title = {
				any_claimant = {
					is_adult = yes
					agot_can_be_usurper = yes
					agot_can_be_feudal_ruler = yes
					NOT = { agot_positive_relation_with_the_king = yes }
					location ?= scope:crown_theft_king.capital_province
					NOT = { has_trait = disinherited }
					OR = {
						has_trait = bastard
						has_trait = bastard_founder
					}
					OR = {
						is_child_of = scope:crown_theft_king
						is_sibling_of = scope:crown_theft_king
					}
					dynasty = scope:crown_theft_king.primary_heir.dynasty
				}
			}
		}
		AND = {
			#scope:crown_theft_king.primary_heir = { is_playable_character = yes }
			scope:crown_theft_king.primary_heir = { NOT = { location ?= scope:crown_theft_king.capital_province } }
			any_courtier_or_guest = {
				is_adult = yes
				agot_can_be_usurper = yes
				agot_can_be_feudal_ruler = yes
				NOT = { agot_positive_relation_with_the_king = yes }
				location ?= scope:crown_theft_king.capital_province
				NOT = { has_trait = disinherited }
				OR = {
					has_trait = bastard
					has_trait = bastard_founder
				}
				OR = {
					is_child_of = scope:crown_theft_king
					is_sibling_of = scope:crown_theft_king
				}
				dynasty = scope:crown_theft_king.primary_heir.dynasty
			}
		}
	}
}

# 04. Landed Heir, Adult & Disinherited Usurper
agot_war_of_succession_disinherited_scenario = {
	OR = {
		AND = {
			#scope:crown_theft_king.primary_heir = { is_playable_character = yes }
			scope:crown_theft_king.primary_heir = { NOT = { location ?= scope:crown_theft_king.capital_province } }
			scope:crown_theft_king.primary_title = {
				any_claimant = {
					is_adult = yes
					agot_can_be_usurper = yes
					agot_can_be_feudal_ruler = yes
					NOT = { agot_positive_relation_with_the_king = yes }
					location ?= scope:crown_theft_king.capital_province
					has_trait = disinherited
					NOT = { has_trait = bastard }
					NOT = { has_trait = bastard_founder }
					OR = {
						is_child_of = scope:crown_theft_king
						is_sibling_of = scope:crown_theft_king
					}
					agot_usurper_same_house = yes
				}
			}
		}
		AND = {
			#scope:crown_theft_king.primary_heir = { is_playable_character = yes }
			scope:crown_theft_king.primary_heir = { NOT = { location ?= scope:crown_theft_king.capital_province } }
			any_courtier_or_guest = {
				is_adult = yes
				agot_can_be_usurper = yes
				agot_can_be_feudal_ruler = yes
				NOT = { agot_positive_relation_with_the_king = yes }
				location ?= scope:crown_theft_king.capital_province
				has_trait = disinherited
				NOT = { has_trait = bastard }
				NOT = { has_trait = bastard_founder }
				OR = {
					is_child_of = scope:crown_theft_king
					is_sibling_of = scope:crown_theft_king
				}
				agot_usurper_same_house = yes
			}
		}
	}
}

# 05. Landless Heir - has spouse from different house, Adult Usurper
agot_war_of_succession_landless_fleeing_to_spouse_scenario = {
	OR = {
		AND = {
			NOT = { scope:crown_theft_king.primary_heir = { is_playable_character = yes } }
			scope:crown_theft_king.primary_heir = { is_married = yes }
			NOT = { scope:crown_theft_king.primary_heir.primary_spouse.house = scope:crown_theft_king.primary_heir.house }
			scope:crown_theft_king.primary_heir.primary_spouse.house.house_head = {
				is_playable_character = yes
				highest_held_title_tier >= tier_duchy
			}
			scope:crown_theft_king.primary_title = {
				any_claimant = {
					agot_usurper_has_claim = yes
					is_adult = yes
					agot_can_be_usurper = yes
					agot_can_be_feudal_ruler = yes
					NOT = { agot_positive_relation_with_the_king = yes }
					location ?= scope:crown_theft_king.capital_province
					NOT = { has_trait = disinherited }
					NOT = { has_trait = bastard }
					NOT = { has_trait = bastard_founder }
					agot_usurper_same_house = yes
				}
			}
		}
		AND = {
			NOT = { scope:crown_theft_king.primary_heir = { is_playable_character = yes } }
			scope:crown_theft_king.primary_heir = { is_married = yes }
			NOT = { scope:crown_theft_king.primary_heir.primary_spouse.house = scope:crown_theft_king.primary_heir.house }
			scope:crown_theft_king.primary_heir.primary_spouse.house.house_head = {
				is_playable_character = yes
				highest_held_title_tier >= tier_duchy
			}
			any_courtier_or_guest = {
				agot_usurper_has_claim = yes
				is_adult = yes
				agot_can_be_usurper = yes
				agot_can_be_feudal_ruler = yes
				NOT = { agot_positive_relation_with_the_king = yes }
				location ?= scope:crown_theft_king.capital_province
				NOT = { has_trait = disinherited }
				NOT = { has_trait = bastard }
				NOT = { has_trait = bastard_founder }
				agot_usurper_same_house = yes
			}
		}
	}
}

# 06. Landless Heir - has landed friend, Adult Usurper
agot_war_of_succession_landless_fleeing_to_friend_scenario = {
	OR = {
		AND = {
			NOT = { scope:crown_theft_king.primary_heir = { is_playable_character = yes } }
			scope:crown_theft_king.primary_heir = {
				OR = {
					any_relation = {
						type = friend
						is_playable_character = yes
						highest_held_title_tier >= tier_duchy
						NOT = { this = scope:crown_theft_king }
					}
					any_relation = {
						type = lover
						is_playable_character = yes
						highest_held_title_tier >= tier_duchy
						NOT = { this = scope:crown_theft_king }
					}
					scope:crown_theft_king.primary_heir.mother = {
						is_playable_character = yes
						highest_held_title_tier >= tier_duchy
						NOT = { this = scope:crown_theft_king }
						NOT = { agot_can_be_usurper = yes }
					}
					scope:crown_theft_king.primary_heir.father = {
						is_playable_character = yes
						highest_held_title_tier >= tier_duchy
						NOT = { this = scope:crown_theft_king }
						NOT = { agot_can_be_usurper = yes }
					}
					house = {
						any_house_member = {
							is_playable_character = yes
							highest_held_title_tier >= tier_duchy
							NOT = { this = scope:crown_theft_king }
							NOT = { this = scope:crown_theft_king.primary_heir }
							NOT = { agot_can_be_usurper = yes }
							is_adult = yes
						}
					}
				}
			}
			scope:crown_theft_king.primary_title = {
				any_claimant = {
					agot_usurper_has_claim = yes
					is_adult = yes
					agot_can_be_usurper = yes
					agot_can_be_feudal_ruler = yes
					NOT = { agot_positive_relation_with_the_king = yes }
					location ?= scope:crown_theft_king.capital_province
					NOT = { has_trait = disinherited }
					NOT = { has_trait = bastard }
					NOT = { has_trait = bastard_founder }
					agot_usurper_same_house = yes
				}
			}
		}
		AND = {
			NOT = { scope:crown_theft_king.primary_heir = { is_playable_character = yes } }
			scope:crown_theft_king.primary_heir = {
				OR = {
					any_relation = {
						type = friend
						is_playable_character = yes
						highest_held_title_tier >= tier_duchy
						NOT = { this = scope:crown_theft_king }
					}
					any_relation = {
						type = lover
						is_playable_character = yes
						highest_held_title_tier >= tier_duchy
						NOT = { this = scope:crown_theft_king }
					}
					scope:crown_theft_king.primary_heir.mother = {
						is_playable_character = yes
						highest_held_title_tier >= tier_duchy
						NOT = { this = scope:crown_theft_king }
						NOT = { agot_can_be_usurper = yes }
					}
					scope:crown_theft_king.primary_heir.father = {
						is_playable_character = yes
						highest_held_title_tier >= tier_duchy
						NOT = { this = scope:crown_theft_king }
						NOT = { agot_can_be_usurper = yes }
					}
					house = {
						any_house_member = {
							is_playable_character = yes
							highest_held_title_tier >= tier_duchy
							NOT = { this = scope:crown_theft_king }
							NOT = { this = scope:crown_theft_king.primary_heir }
							NOT = { agot_can_be_usurper = yes }
							is_adult = yes
						}
					}
				}
			}
			any_courtier_or_guest = {
				agot_usurper_has_claim = yes
				is_adult = yes
				agot_can_be_usurper = yes
				agot_can_be_feudal_ruler = yes
				NOT = { agot_positive_relation_with_the_king = yes }
				location ?= scope:crown_theft_king.capital_province
				NOT = { has_trait = disinherited }
				NOT = { has_trait = bastard }
				NOT = { has_trait = bastard_founder }
				agot_usurper_same_house = yes
			}
		}
	}
}

# 07. Landless Heir - has spouse from different house, Child Usurper
agot_war_of_succession_landless_fleeing_to_spouse_child_scenario = {
	OR = {
		AND = {
			NOT = { scope:crown_theft_king.primary_heir = { is_playable_character = yes } }
			scope:crown_theft_king.primary_heir = { is_married = yes }
			NOT = { scope:crown_theft_king.primary_heir.primary_spouse.house = scope:crown_theft_king.primary_heir.house }
			scope:crown_theft_king.primary_heir.primary_spouse.house.house_head = {
				is_playable_character = yes
				highest_held_title_tier >= tier_duchy
			}
			scope:crown_theft_king.primary_title = {
				any_claimant = {
					agot_usurper_has_claim = yes
					NOT = { is_adult = yes }
					agot_is_free_human = yes
					agot_can_be_feudal_ruler = yes
					NOT = { agot_positive_relation_with_the_king = yes }
					location ?= scope:crown_theft_king.capital_province
					NOT = { has_trait = disinherited }
					NOT = { has_trait = bastard }
					NOT = { has_trait = bastard_founder }
					agot_usurper_same_house = yes
					any_relation = {
						type = guardian
						agot_can_be_usurper = yes
						NOT = { agot_positive_relation_with_the_king = yes }
						NOT = { this = scope:crown_theft_king }
					}
				}
			}
		}
		AND = {
			NOT = { scope:crown_theft_king.primary_heir = { is_playable_character = yes } }
			scope:crown_theft_king.primary_heir = { is_married = yes }
			NOT = { scope:crown_theft_king.primary_heir.primary_spouse.house = scope:crown_theft_king.primary_heir.house }
			scope:crown_theft_king.primary_heir.primary_spouse.house.house_head = {
				is_playable_character = yes
				highest_held_title_tier >= tier_duchy
			}
			any_courtier_or_guest = {
				agot_usurper_has_claim = yes
				NOT = { is_adult = yes }
				agot_is_free_human = yes
				agot_can_be_feudal_ruler = yes
				NOT = { agot_positive_relation_with_the_king = yes }
				location ?= scope:crown_theft_king.capital_province
				NOT = { has_trait = disinherited }
				NOT = { has_trait = bastard }
				NOT = { has_trait = bastard_founder }
				agot_usurper_same_house = yes
				any_relation = {
					type = guardian
					agot_can_be_usurper = yes
					NOT = { agot_positive_relation_with_the_king = yes }
					NOT = { this = scope:crown_theft_king }
				}
			}
		}
	}
}

# 08. Landless Heir - has landed friend, Child Usurper
agot_war_of_succession_landless_fleeing_to_friend_child_scenario = {
	OR = {
		AND = {
			NOT = { scope:crown_theft_king.primary_heir = { is_playable_character = yes } }
			scope:crown_theft_king.primary_heir = {
				OR = {
					any_relation = {
						type = friend
						is_playable_character = yes
						highest_held_title_tier >= tier_duchy
						NOT = { this = scope:crown_theft_king }
					}
					any_relation = {
						type = lover
						is_playable_character = yes
						highest_held_title_tier >= tier_duchy
						NOT = { this = scope:crown_theft_king }
					}
					scope:crown_theft_king.primary_heir.mother = {
						is_playable_character = yes
						highest_held_title_tier >= tier_duchy
						NOT = { this = scope:crown_theft_king }
						NOT = { agot_can_be_usurper = yes }
					}
					scope:crown_theft_king.primary_heir.father = {
						is_playable_character = yes
						highest_held_title_tier >= tier_duchy
						NOT = { this = scope:crown_theft_king }
						NOT = { agot_can_be_usurper = yes }
					}
					house = {
						any_house_member = {
							is_playable_character = yes
							highest_held_title_tier >= tier_duchy
							NOT = { this = scope:crown_theft_king }
							NOT = { this = scope:crown_theft_king.primary_heir }
							NOT = { agot_can_be_usurper = yes }
							is_adult = yes
						}
					}
				}
			}
			scope:crown_theft_king.primary_title = {
				any_claimant = {
					agot_usurper_has_claim = yes
					NOT = { is_adult = yes }
					agot_is_free_human = yes
					agot_can_be_feudal_ruler = yes
					NOT = { agot_positive_relation_with_the_king = yes }
					location ?= scope:crown_theft_king.capital_province
					NOT = { has_trait = disinherited }
					NOT = { has_trait = bastard }
					NOT = { has_trait = bastard_founder }
					agot_usurper_same_house = yes
					any_relation = {
						type = guardian
						agot_can_be_usurper = yes
						NOT = { agot_positive_relation_with_the_king = yes }
						NOT = { this = scope:crown_theft_king }
					}
				}
			}
		}
		AND = {
			NOT = { scope:crown_theft_king.primary_heir = { is_playable_character = yes } }
			scope:crown_theft_king.primary_heir = {
				OR = {
					any_relation = {
						type = friend
						is_playable_character = yes
						highest_held_title_tier >= tier_duchy
						NOT = { this = scope:crown_theft_king }
					}
					any_relation = {
						type = lover
						is_playable_character = yes
						highest_held_title_tier >= tier_duchy
						NOT = { this = scope:crown_theft_king }
					}
					scope:crown_theft_king.primary_heir.mother = {
						is_playable_character = yes
						highest_held_title_tier >= tier_duchy
						NOT = { this = scope:crown_theft_king }
						NOT = { agot_can_be_usurper = yes }
					}
					scope:crown_theft_king.primary_heir.father = {
						is_playable_character = yes
						highest_held_title_tier >= tier_duchy
						NOT = { this = scope:crown_theft_king }
						NOT = { agot_can_be_usurper = yes }
					}
					house = {
						any_house_member = {
							is_playable_character = yes
							highest_held_title_tier >= tier_duchy
							NOT = { this = scope:crown_theft_king }
							NOT = { this = scope:crown_theft_king.primary_heir }
							NOT = { agot_can_be_usurper = yes }
							is_adult = yes
						}
					}
				}
			}
			any_courtier_or_guest = {
				agot_usurper_has_claim = yes
				NOT = { is_adult = yes }
				agot_is_free_human = yes
				agot_can_be_feudal_ruler = yes
				NOT = { agot_positive_relation_with_the_king = yes }
				location ?= scope:crown_theft_king.capital_province
				NOT = { has_trait = disinherited }
				NOT = { has_trait = bastard }
				NOT = { has_trait = bastard_founder }
				agot_usurper_same_house = yes
				any_relation = {
					type = guardian
					agot_can_be_usurper = yes
					NOT = { agot_positive_relation_with_the_king = yes }
					NOT = { this = scope:crown_theft_king }
				}
			}
		}
	}
}

#Unified Event Trigger
agot_crown_theft_unified_event_trigger = {
	OR = {
		AND = {
			exists = scope:scenario_landed_heir_vs_usurper_generic
			exists = scope:crown_theft_king_legit_heir
			scope:crown_theft_king_legit_heir = { is_alive = yes }
			exists = scope:crown_thief
			scope:crown_thief = { is_alive = yes }
		}
		AND = {
			exists = scope:scenario_landed_heir_vs_usurper_child
			exists = scope:crown_theft_king_legit_heir
			scope:crown_theft_king_legit_heir = { is_alive = yes }
			exists = scope:crown_thief
			scope:crown_thief = { is_alive = yes }
			exists = scope:usurper_guardian
			scope:usurper_guardian = { is_alive = yes }
		}
		AND = {
			exists = scope:scenario_landed_heir_vs_usurper_bastard
			exists = scope:crown_theft_king_legit_heir
			scope:crown_theft_king_legit_heir = { is_alive = yes }
			exists = scope:crown_thief
			scope:crown_thief = { is_alive = yes }
		}
		AND = {
			exists = scope:scenario_landed_heir_vs_usurper_disinherited
			exists = scope:crown_theft_king_legit_heir
			scope:crown_theft_king_legit_heir = { is_alive = yes }
			exists = scope:crown_thief
			scope:crown_thief = { is_alive = yes }
		}
		AND = {
			exists = scope:scenario_landless_heir_married_vs_usurper_generic
			exists = scope:crown_theft_king_legit_heir
			scope:crown_theft_king_legit_heir = { is_alive = yes }
			exists = scope:crown_thief
			scope:crown_thief = { is_alive = yes }
			exists = scope:legit_spouse
			scope:legit_spouse = { is_alive = yes }
			exists = scope:landed_helper
			scope:landed_helper = { is_alive = yes }
		}
		AND = {
			exists = scope:scenario_landless_heir_friend_vs_usurper_generic
			exists = scope:crown_theft_king_legit_heir
			scope:crown_theft_king_legit_heir = { is_alive = yes }
			exists = scope:crown_thief
			scope:crown_thief = { is_alive = yes }
			exists = scope:landed_helper
			scope:landed_helper = { is_alive = yes }
		}
		AND = {
			exists = scope:scenario_landless_heir_married_vs_usurper_child
			exists = scope:crown_theft_king_legit_heir
			scope:crown_theft_king_legit_heir = { is_alive = yes }
			exists = scope:crown_thief
			scope:crown_thief = { is_alive = yes }
			exists = scope:legit_spouse
			scope:legit_spouse = { is_alive = yes }
			exists = scope:landed_helper
			scope:landed_helper = { is_alive = yes }
			exists = scope:usurper_guardian
			scope:usurper_guardian = { is_alive = yes }
		}
		AND = {
			exists = scope:scenario_landless_heir_friend_vs_usurper_child
			exists = scope:crown_theft_king_legit_heir
			scope:crown_theft_king_legit_heir = { is_alive = yes }
			exists = scope:crown_thief
			scope:crown_thief = { is_alive = yes }
			exists = scope:landed_helper
			scope:landed_helper = { is_alive = yes }
			exists = scope:usurper_guardian
			scope:usurper_guardian = { is_alive = yes }
		}
	}
}

#Unified Event Trigger - Landless Prewar
agot_crown_theft_unified_event_landless_prewar_trigger = {
	OR = {
		AND = {
			exists = scope:scenario_landed_heir_vs_usurper_generic
			exists = scope:crown_theft_king_legit_heir
			scope:crown_theft_king_legit_heir = { is_alive = yes }
			exists = scope:crown_thief
			scope:crown_thief = { is_alive = yes }
		}
		AND = {
			exists = scope:scenario_landed_heir_vs_usurper_child
			exists = scope:crown_theft_king_legit_heir
			scope:crown_theft_king_legit_heir = { is_alive = yes }
			exists = scope:crown_thief
			scope:crown_thief = { is_alive = yes }
			exists = scope:usurper_guardian
			scope:usurper_guardian = { is_alive = yes }
		}
		AND = {
			exists = scope:scenario_landed_heir_vs_usurper_bastard
			exists = scope:crown_theft_king_legit_heir
			scope:crown_theft_king_legit_heir = { is_alive = yes }
			exists = scope:crown_thief
			scope:crown_thief = { is_alive = yes }
		}
		AND = {
			exists = scope:scenario_landed_heir_vs_usurper_disinherited
			exists = scope:crown_theft_king_legit_heir
			scope:crown_theft_king_legit_heir = { is_alive = yes }
			exists = scope:crown_thief
			scope:crown_thief = { is_alive = yes }
		}
		AND = {
			exists = scope:scenario_landless_heir_married_vs_usurper_generic
			exists = scope:crown_theft_king_legit_heir
			scope:crown_theft_king_legit_heir = { is_alive = yes }
			exists = scope:crown_thief
			scope:crown_thief = { is_alive = yes }
			exists = scope:legit_spouse
			scope:legit_spouse = { is_alive = yes }
			exists = scope:landed_helper
			scope:landed_helper = { is_alive = yes }
			scope:landed_helper = { has_character_flag = supports_me_in_war }
		}
		AND = {
			exists = scope:scenario_landless_heir_friend_vs_usurper_generic
			exists = scope:crown_theft_king_legit_heir
			scope:crown_theft_king_legit_heir = { is_alive = yes }
			exists = scope:crown_thief
			scope:crown_thief = { is_alive = yes }
			exists = scope:landed_helper
			scope:landed_helper = { is_alive = yes }
			scope:landed_helper = { has_character_flag = supports_me_in_war }
		}
		AND = {
			exists = scope:scenario_landless_heir_married_vs_usurper_child
			exists = scope:crown_theft_king_legit_heir
			scope:crown_theft_king_legit_heir = { is_alive = yes }
			exists = scope:crown_thief
			scope:crown_thief = { is_alive = yes }
			exists = scope:legit_spouse
			scope:legit_spouse = { is_alive = yes }
			exists = scope:landed_helper
			scope:landed_helper = { is_alive = yes }
			exists = scope:usurper_guardian
			scope:usurper_guardian = { is_alive = yes }
			scope:landed_helper = { has_character_flag = supports_me_in_war }
		}
		AND = {
			exists = scope:scenario_landless_heir_friend_vs_usurper_child
			exists = scope:crown_theft_king_legit_heir
			scope:crown_theft_king_legit_heir = { is_alive = yes }
			exists = scope:crown_thief
			scope:crown_thief = { is_alive = yes }
			exists = scope:landed_helper
			scope:landed_helper = { is_alive = yes }
			exists = scope:usurper_guardian
			scope:usurper_guardian = { is_alive = yes }
			scope:landed_helper = { has_character_flag = supports_me_in_war }
		}
	}
}

### CHARACTER TRIGGERS

agot_can_be_usurper = {
	agot_is_flawed_character = yes
	agot_is_free_human = yes
}

agot_is_free_human = {
	is_imprisoned = no
	is_incapable = no
	is_human = yes
}

agot_is_flawed_character = {
	OR = {
		AND = {
			ai_boldness >= 50
			ai_honor <= 0
		}
		AND = {
			ai_boldness >= 0
			ai_honor <= -50
		}
		AND = {
			ai_greed >= 50
			ai_rationality <= 0
		}
		AND = {
			ai_greed >= 0
			ai_rationality <= -50
		}
	}
}

agot_usurper_has_claim = {
	OR = {
		has_claim_on = scope:crown_theft_king.primary_title
		is_child_of = scope:crown_theft_king
	}
}

agot_usurper_same_house = {
	OR = {
		house = scope:crown_theft_king.house
		house = scope:crown_theft_king.primary_heir.house
	}
}

agot_positive_relation_with_the_king = {
	OR = {
		is_primary_heir_of = scope:crown_theft_king
		has_relation_friend = scope:crown_theft_king.primary_heir
		has_relation_lover = scope:crown_theft_king.primary_heir
		has_relation_soulmate = scope:crown_theft_king.primary_heir
		is_spouse_of = scope:crown_theft_king.primary_heir
		betrothed = scope:crown_theft_king.primary_heir
		is_parent_of = scope:crown_theft_king.primary_heir
	}
}

agot_wos_helper_opinion_trigger = {
	OR = {
		AND = {
			save_temporary_opinion_value_as = {
				name = opinion_on_legit_heir
				target = scope:crown_theft_king_legit_heir
			}
			scope:opinion_on_legit_heir <= 50
		}
		AND = {
			save_temporary_opinion_value_as = {
				name = opinion_on_usurper
				target = scope:crown_thief
			}
			scope:opinion_on_usurper >= 50
		}
		AND = {
			save_temporary_opinion_value_as = {
				name = opinion_on_legit_heir
				target = scope:crown_theft_king_legit_heir
			}
			save_temporary_opinion_value_as = {
				name = opinion_on_usurper
				target = scope:crown_thief
			}
			scope:opinion_on_usurper >= scope:opinion_on_legit_heir
		}
	}
}

agot_eligible_succession_war_faction_members = {
	OR = {
		is_lowborn = no
		is_councillor_of = scope:crown_thief
		is_councillor_of = scope:crown_theft_king_legit_heir
		is_knight_of = scope:crown_thief
		is_knight_of = scope:crown_theft_king_legit_heir
		has_relation_friend = scope:crown_thief
		has_relation_friend = scope:crown_theft_king_legit_heir
		has_relation_lover = scope:crown_thief
		has_relation_lover = scope:crown_theft_king_legit_heir
		has_relation_rival = scope:crown_thief
		has_relation_rival = scope:crown_theft_king_legit_heir
		has_relation_agot_squire = scope:crown_thief
		has_relation_agot_squire = scope:crown_theft_king_legit_heir
		has_relation_agot_knight = scope:crown_thief
		has_relation_agot_knight = scope:crown_theft_king_legit_heir
	}
}

agot_dying_king_trigger = {
	highest_held_title_tier = tier_empire
	is_landed = yes
	NOT = { has_character_flag = succession_war_cooldown }
	OR = {
		has_government = lp_feudal_government
		has_government = feudal_government
	}
	primary_title = { NOT = { has_variable = war_of_succession_happened } }
}

agot_can_be_feudal_ruler = {
	agot_can_be_ruler = yes
	OR = {
		has_government = lp_feudal_government
		has_government = feudal_government
		is_landed = no
	}
}

agot_can_be_ruler = {
	NOR = {
		has_trait = nightswatch
		has_trait = silent_sister
		has_trait = septon
		has_trait = maester
		has_trait = devoted
		has_trait = red_priest
		has_trait = order_member
		has_trait = kingsguard
	}
}

can_have_dragon_color_coa = {
	OR = {
		var:color ?= flag:white
		var:color ?= flag:grey
		var:color ?= flag:black
		var:color ?= flag:red
		var:color ?= flag:orange
		var:color ?= flag:yellow
		var:color ?= flag:green
		var:color ?= flag:teal
		var:color ?= flag:blue
		var:color ?= flag:purple
		var:color ?= flag:pink
		var:color ?= flag:fuschia
	}
}

### FAKE DEATH TRIGGERS

agot_is_fake_dead = {
	OR = {
		has_inactive_trait = fake_death_ongoing_tbc
		has_inactive_trait = fake_death_ongoing_battle
		has_inactive_trait = fake_death_ongoing_illness
		has_inactive_trait = fake_death_ongoing_siege
		has_inactive_trait = fake_death_ongoing_accident
	}
}

### WARNAME TRIGGERS

succession_war_dynastic_war_name = {
	OR = {
		#Crownlands
		dynasty = dynasty:dynn_Targaryen
		dynasty = dynasty:dynn_Velaryon
		dynasty = dynasty:dynn_Celtigar
		dynasty = dynasty:dynn_Darklyn
		dynasty = dynasty:dynn_Massey
		#North
		dynasty = dynasty:dynn_Stark
		dynasty = dynasty:dynn_Bolton
		dynasty = dynasty:dynn_Mormont
		dynasty = dynasty:dynn_Manderly
		dynasty = dynasty:dynn_Forrester
		dynasty = dynasty:dynn_Umber
		dynasty = dynasty:dynn_Glover
		dynasty = dynasty:dynn_Dustin
		dynasty = dynasty:dynn_Ryswell
		#Riverlands
		dynasty = dynasty:dynn_Tully
		dynasty = dynasty:dynn_Blackwood
		dynasty = dynasty:dynn_Bracken
		dynasty = dynasty:dynn_Frey
		dynasty = dynasty:dynn_Darry
		dynasty = dynasty:dynn_Strong
		#Vale
		dynasty = dynasty:dynn_Arryn
		dynasty = dynasty:dynn_Royce
		dynasty = dynasty:dynn_Baelish
		dynasty = dynasty:dynn_Corbray
		dynasty = dynasty:dynn_Sunderland
		#Iron Islands
		dynasty = dynasty:dynn_Greyjoy
		dynasty = dynasty:dynn_Harlaw
		dynasty = dynasty:dynn_Goodbrother
		dynasty = dynasty:dynn_Hoare
		dynasty = dynasty:dynn_Codd
		#Stormlands
		dynasty = dynasty:dynn_Baratheon
		dynasty = dynasty:dynn_Estermont
		dynasty = dynasty:dynn_Dondarrion
		dynasty = dynasty:dynn_Tarth
		dynasty = dynasty:dynn_Seaworth
		dynasty = dynasty:dynn_Connington
		dynasty = dynasty:dynn_Swann
		dynasty = dynasty:dynn_Selmy
		#Westerlands
		dynasty = dynasty:dynn_Lannister
		dynasty = dynasty:dynn_Reyne
		dynasty = dynasty:dynn_Clegane
		dynasty = dynasty:dynn_Lydden
		dynasty = dynasty:dynn_Brax
		dynasty = dynasty:dynn_Crakehall
		dynasty = dynasty:dynn_Banefort
		#Reach
		dynasty = dynasty:dynn_Tyrell
		dynasty = dynasty:dynn_Hightower
		dynasty = dynasty:dynn_Florent
		dynasty = dynasty:dynn_Redwyne
		dynasty = dynasty:dynn_Tarly
		dynasty = dynasty:dynn_Gardener
		#Dorne
		dynasty = dynasty:dynn_Martell
		dynasty = dynasty:dynn_Dayne
		dynasty = dynasty:dynn_Yronwood
		dynasty = dynasty:dynn_Qorgyle
		dynasty = dynasty:dynn_Uller
		dynasty = dynasty:dynn_Jordayne
		dynasty = dynasty:dynn_Toland
		dynasty = dynasty:dynn_Dalt
		dynasty = dynasty:dynn_Fowler
		dynasty = dynasty:dynn_Manwoody
	}
}