@crown_authority_cooldown_years = 20

night_watch_centralization = {
	default = night_watch_centralization_1
	cumulative = yes
	flag = realm_law
	flag = all_realm_law

	night_watch_centralization_0 = {
		modifier = {
			build_speed = 0.1
			build_gold_cost = 0.1
			knight_limit = -2
			domain_limit = -1
		}
		flag = title_revocation_allowed
		flag = wall_maintenance_low

		can_keep = {
			realm_law_use_night_watch_centralization = yes
		}
	}

	night_watch_centralization_1 = {
		modifier = {
			build_speed = -0.15
			build_gold_cost = -0.15
			knight_limit = 4
			domain_limit = 2
		}
		flag = title_revocation_allowed
		flag = can_change_succession_laws
		flag = wall_maintenance_normal

		can_keep = {
			realm_law_use_night_watch_centralization = yes
		}

		can_pass = {
			trigger_if = {
				limit = { has_realm_law = night_watch_centralization_0 }
				custom_description = {
					subject = root
					text = "has_crown_authority_cooldown"
					NAND = {
						has_variable = crown_authority_cooldown
						NOT = {
							culture = { has_innovation = innovation_all_things }
						}
					}
				}
			}
		}

		pass_cost = {
			prestige = {
				if = {
					limit = {
						NOR = {
							has_realm_law = night_watch_centralization_2
							has_realm_law = night_watch_centralization_3
						}
					}
					add = increase_crown_authority_prestige_cost
				}
			}
		}

		on_pass = {
			# Increment cooldown breaker tally, if appropriate.
			calculate_authority_cooldown_break_effect = yes
			# Set regular cooldown.
			set_variable = {
				name = crown_authority_cooldown
				years = @crown_authority_cooldown_years
			}
		}

		ai_will_do = {
			if = {
				limit = { has_realm_law = night_watch_centralization_0 }
				value = 1
			}
		}
	}

	night_watch_centralization_2 = {
		modifier = {
			build_speed = -0.1
			build_gold_cost = -0.1
			knight_limit = 2
			domain_limit = 2
		}
		flag = vassal_retraction_allowed
		flag = wall_maintenance_high

		can_keep = {
			realm_law_use_night_watch_centralization = yes
		}

		can_pass = {
			trigger_if = {
				limit = {
					NOT = { has_realm_law = night_watch_centralization_3 }
				}
				has_realm_law = night_watch_centralization_1
				custom_description = {
					subject = root
					text = "has_crown_authority_cooldown"
					NAND = {
						has_variable = crown_authority_cooldown
						NOT = {
							culture = { has_innovation = innovation_all_things }
						}
					}
				}
			}
		}

		pass_cost = {
			prestige = {
				if = {
					limit = {
						NOT = { has_realm_law = night_watch_centralization_3 }
					}
					add = increase_crown_authority_prestige_cost
				}
			}
		}

		on_pass = {
			# Increment cooldown breaker tally, if appropriate.
			calculate_authority_cooldown_break_effect = yes
			# Set regular cooldown.
			set_variable = {
				name = crown_authority_cooldown
				years = @crown_authority_cooldown_years
			}
		}

		ai_will_do = {
			if = {
				limit = { has_realm_law = night_watch_centralization_1 }
				value = 1
			}
		}
	}

	night_watch_centralization_3 = {
		modifier = {
			build_speed = -0.1
			build_gold_cost = -0.1
			knight_limit = 2
			domain_limit = 2
		}
		flag = wall_maintenance_very_high
		can_keep = {
			realm_law_use_night_watch_centralization = yes
		}

		can_pass = {
			has_realm_law = night_watch_centralization_2
			custom_description = {
				subject = root
				text = "has_crown_authority_cooldown"
				NAND = {
						has_variable = crown_authority_cooldown
						NOT = {
							culture = { has_innovation = innovation_all_things }
						}
					}
			}
		}

		pass_cost = { prestige = increase_crown_authority_prestige_cost }

		on_pass = {
			# Increment cooldown breaker tally, if appropriate.
			calculate_authority_cooldown_break_effect = yes
			# Set regular cooldown.
			set_variable = {
				name = crown_authority_cooldown
				years = @crown_authority_cooldown_years
			}
		}

		ai_will_do = {
			if = {
				limit = { has_realm_law = night_watch_centralization_2 }
				value = 1
			}
		}
	}
}