#Keep all the content of these blocks in sync- they are duplicates only differing by name
gonfaloniere = {
	start = { always = yes }

	end = {
		liege = {
			NOT = { government_has_flag = government_is_free_city }
		}
	}

	succession = yes

	# mandate = fill_coffers
	mandate = swell_armies
	mandate = promote_authority
	## Aptitudes.
	aptitude_score = {
		# add = mandate_type_qualification:fill_coffers
		add = mandate_type_qualification:swell_armies
		add = mandate_type_qualification:promote_authority
	}
	
	power_level = {
		swing = 0
		parameter = regency_cant_be_ended_above_this_point
		parameter = unlock_syphon_treasury_interaction
		parameter = diarch_can_subsidise_liege_authority
	}
	power_level = {
		swing = 20
		parameter = unlock_shift_privileges_interaction
		parameter = diarch_gets_a_free_change_on_vassal_contract
	}
	power_level = {
		swing = 40
		parameter = unlock_legal_meddling_interaction
		parameter = unlock_diarch_revoke_title_interaction
		parameter = liege_pays_currency_surcharge_for_mundane_interactions_mild
	}
	power_level = {
		swing = 60
		parameter = unlock_diarch_retract_vassal_interaction
		parameter = unlock_diarch_imprison_interaction
		parameter = liege_pays_currency_surcharge_for_mundane_interactions_medium
	}
	power_level = {
		swing = 80
		parameter = liege_pays_currency_surcharge_for_mundane_interactions_major
	}
	power_level = {
		swing = 95
		parameter = liege_pays_currency_surcharge_for_mundane_interactions_massive
		parameter = regents_can_try_to_overthrow_present_lieges
		parameter = regents_can_try_to_overthrow_present_lieges_help
	}

	# Trend towards an even balance of power.
	swing_balance = {
		value = 50

		# Accolades
		## Politicker helps liege during a regency
		if = {
			limit = {
				liege ?= {
					any_active_accolade = {
						has_accolade_parameter = accolade_influences_regency
					}
				}
			}
			add = accolade_scales_of_power_value
		}
		if = {
			limit = {
				liege ?= {
					any_active_accolade = {
						has_accolade_parameter = accolade_influences_regency_high
					}
				}
			}
			add = accolade_scales_of_power_value_high
		}
		# Liege is able to end diarchy.
		if = {
			limit = {
				liege ?= { can_leave_diarchy_trigger = yes }
			}
			multiply = 0
		}
	}

	# Candidate scoring for succession.
	candidate_score = { add = diarchy_regent_succession_score_value }

	# Container for hidden parameters.
	power_level = {
		swing = 0
		hidden_parameter = diarchy_is_regency
		hidden_parameter = diarchy_type_is_entrenched_regency
	}

	loyalty_score = { add = diarch_loyalty_score_type_regency_value }

	end_interaction = liege_dismiss_free_city_diarch_interaction

	liege_modifier = {
		name = from_diarch_domain_limit_bonus
		scale = {
			add = stewardship
			divide = 6
		}
	}

	diarch_modifier = {
		name = to_diarch_stress_gain
		stress_gain_mult = 0.3
	}
}

#lys
second_magister = {
	start = { always = yes }

	end = {
		liege = {
			NOT = { government_has_flag = government_is_free_city }
		}
	}

	succession = yes

	# mandate = fill_coffers
	mandate = swell_armies
	mandate = promote_authority
	## Aptitudes.
	aptitude_score = {
		# add = mandate_type_qualification:fill_coffers
		add = mandate_type_qualification:swell_armies
		add = mandate_type_qualification:promote_authority
	}
	
	power_level = {
		swing = 0
		parameter = regency_cant_be_ended_above_this_point
		parameter = unlock_syphon_treasury_interaction
		parameter = diarch_can_subsidise_liege_authority
	}
	power_level = {
		swing = 20
		parameter = unlock_shift_privileges_interaction
		parameter = diarch_gets_a_free_change_on_vassal_contract
	}
	power_level = {
		swing = 40
		parameter = unlock_legal_meddling_interaction
		parameter = unlock_diarch_revoke_title_interaction
		parameter = liege_pays_currency_surcharge_for_mundane_interactions_mild
	}
	power_level = {
		swing = 60
		parameter = unlock_diarch_retract_vassal_interaction
		parameter = unlock_diarch_imprison_interaction
		parameter = liege_pays_currency_surcharge_for_mundane_interactions_medium
	}
	power_level = {
		swing = 80
		parameter = liege_pays_currency_surcharge_for_mundane_interactions_major
	}
	power_level = {
		swing = 95
		parameter = liege_pays_currency_surcharge_for_mundane_interactions_massive
		parameter = regents_can_try_to_overthrow_present_lieges
		parameter = regents_can_try_to_overthrow_present_lieges_help
	}

	# Trend towards an even balance of power.
	swing_balance = {
		value = 50

		# Accolades
		## Politicker helps liege during a regency
		if = {
			limit = {
				liege ?= {
					any_active_accolade = {
						has_accolade_parameter = accolade_influences_regency
					}
				}
			}
			add = accolade_scales_of_power_value
		}
		if = {
			limit = {
				liege ?= {
					any_active_accolade = {
						has_accolade_parameter = accolade_influences_regency_high
					}
				}
			}
			add = accolade_scales_of_power_value_high
		}
		# Liege is able to end diarchy.
		if = {
			limit = {
				liege ?= { can_leave_diarchy_trigger = yes }
			}
			multiply = 0
		}
	}

	# Candidate scoring for succession.
	candidate_score = { add = diarchy_regent_succession_score_value }

	# Container for hidden parameters.
	power_level = {
		swing = 0
		hidden_parameter = diarchy_is_regency
		hidden_parameter = diarchy_type_is_entrenched_regency
	}

	loyalty_score = { add = diarch_loyalty_score_type_regency_value }

	end_interaction = liege_dismiss_free_city_diarch_interaction

	liege_modifier = {
		name = from_diarch_domain_limit_bonus
		scale = {
			add = stewardship
			divide = 6
		}
	}

	diarch_modifier = {
		name = to_diarch_stress_gain
		stress_gain_mult = 0.3
	}
}

#tyrosh, pentos
high_councilor = {
	start = { always = yes }

	end = {
		liege = {
			NOT = { government_has_flag = government_is_free_city }
		}
	}

	succession = yes

	# mandate = fill_coffers
	mandate = swell_armies
	mandate = promote_authority
	## Aptitudes.
	aptitude_score = {
		# add = mandate_type_qualification:fill_coffers
		add = mandate_type_qualification:swell_armies
		add = mandate_type_qualification:promote_authority
	}
	
	power_level = {
		swing = 0
		parameter = regency_cant_be_ended_above_this_point
		parameter = unlock_syphon_treasury_interaction
		parameter = diarch_can_subsidise_liege_authority
	}
	power_level = {
		swing = 20
		parameter = unlock_shift_privileges_interaction
		parameter = diarch_gets_a_free_change_on_vassal_contract
	}
	power_level = {
		swing = 40
		parameter = unlock_legal_meddling_interaction
		parameter = unlock_diarch_revoke_title_interaction
		parameter = liege_pays_currency_surcharge_for_mundane_interactions_mild
	}
	power_level = {
		swing = 60
		parameter = unlock_diarch_retract_vassal_interaction
		parameter = unlock_diarch_imprison_interaction
		parameter = liege_pays_currency_surcharge_for_mundane_interactions_medium
	}
	power_level = {
		swing = 80
		parameter = liege_pays_currency_surcharge_for_mundane_interactions_major
	}
	power_level = {
		swing = 95
		parameter = liege_pays_currency_surcharge_for_mundane_interactions_massive
		parameter = regents_can_try_to_overthrow_present_lieges
		parameter = regents_can_try_to_overthrow_present_lieges_help
	}

	# Trend towards an even balance of power.
	swing_balance = {
		value = 50

		# Accolades
		## Politicker helps liege during a regency
		if = {
			limit = {
				liege ?= {
					any_active_accolade = {
						has_accolade_parameter = accolade_influences_regency
					}
				}
			}
			add = accolade_scales_of_power_value
		}
		if = {
			limit = {
				liege ?= {
					any_active_accolade = {
						has_accolade_parameter = accolade_influences_regency_high
					}
				}
			}
			add = accolade_scales_of_power_value_high
		}
		# Liege is able to end diarchy.
		if = {
			limit = {
				liege ?= { can_leave_diarchy_trigger = yes }
			}
			multiply = 0
		}
	}

	# Candidate scoring for succession.
	candidate_score = { add = diarchy_regent_succession_score_value }

	# Container for hidden parameters.
	power_level = {
		swing = 0
		hidden_parameter = diarchy_is_regency
		hidden_parameter = diarchy_type_is_entrenched_regency
	}

	loyalty_score = { add = diarch_loyalty_score_type_regency_value }

	end_interaction = liege_dismiss_free_city_diarch_interaction

	liege_modifier = {
		name = from_diarch_domain_limit_bonus
		scale = {
			add = stewardship
			divide = 6
		}
	}

	diarch_modifier = {
		name = to_diarch_stress_gain
		stress_gain_mult = 0.3
	}
}

#myr
tyniate = {
	start = { always = yes }

	end = {
		liege = {
			NOT = { government_has_flag = government_is_free_city }
		}
	}

	succession = yes

	# mandate = fill_coffers
	mandate = swell_armies
	mandate = promote_authority
	## Aptitudes.
	aptitude_score = {
		# add = mandate_type_qualification:fill_coffers
		add = mandate_type_qualification:swell_armies
		add = mandate_type_qualification:promote_authority
	}
	
	power_level = {
		swing = 0
		parameter = regency_cant_be_ended_above_this_point
		parameter = unlock_syphon_treasury_interaction
		parameter = diarch_can_subsidise_liege_authority
	}
	power_level = {
		swing = 20
		parameter = unlock_shift_privileges_interaction
		parameter = diarch_gets_a_free_change_on_vassal_contract
	}
	power_level = {
		swing = 40
		parameter = unlock_legal_meddling_interaction
		parameter = unlock_diarch_revoke_title_interaction
		parameter = liege_pays_currency_surcharge_for_mundane_interactions_mild
	}
	power_level = {
		swing = 60
		parameter = unlock_diarch_retract_vassal_interaction
		parameter = unlock_diarch_imprison_interaction
		parameter = liege_pays_currency_surcharge_for_mundane_interactions_medium
	}
	power_level = {
		swing = 80
		parameter = liege_pays_currency_surcharge_for_mundane_interactions_major
	}
	power_level = {
		swing = 95
		parameter = liege_pays_currency_surcharge_for_mundane_interactions_massive
		parameter = regents_can_try_to_overthrow_present_lieges
		parameter = regents_can_try_to_overthrow_present_lieges_help
	}

	# Trend towards an even balance of power.
	swing_balance = {
		value = 50

		# Accolades
		## Politicker helps liege during a regency
		if = {
			limit = {
				liege ?= {
					any_active_accolade = {
						has_accolade_parameter = accolade_influences_regency
					}
				}
			}
			add = accolade_scales_of_power_value
		}
		if = {
			limit = {
				liege ?= {
					any_active_accolade = {
						has_accolade_parameter = accolade_influences_regency_high
					}
				}
			}
			add = accolade_scales_of_power_value_high
		}
		# Liege is able to end diarchy.
		if = {
			limit = {
				liege ?= { can_leave_diarchy_trigger = yes }
			}
			multiply = 0
		}
	}

	# Candidate scoring for succession.
	candidate_score = { add = diarchy_regent_succession_score_value }

	# Container for hidden parameters.
	power_level = {
		swing = 0
		hidden_parameter = diarchy_is_regency
		hidden_parameter = diarchy_type_is_entrenched_regency
	}

	loyalty_score = { add = diarch_loyalty_score_type_regency_value }

	end_interaction = liege_dismiss_free_city_diarch_interaction

	liege_modifier = {
		name = from_diarch_domain_limit_bonus
		scale = {
			add = stewardship
			divide = 6
		}
	}

	diarch_modifier = {
		name = to_diarch_stress_gain
		stress_gain_mult = 0.3
	}
}
