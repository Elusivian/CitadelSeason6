dragon_county_conquest_cb = {
	icon = dragon_county_conquest_cb
	group = dragon_conquest

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	allowed_for_character = {
		is_current_dragonrider = yes

		#AGOT Added, NW should not be conquering
		NOT = { government_has_flag = government_is_nw }
	}

	allowed_against_character = {
		scope:attacker = {
			ALL_FALSE = {
				top_liege = scope:defender.top_liege
				liege = scope:defender
			}
		}

		agot_mw_war_valid_during_megawar = yes

		NOT = {
			AND = {
				scope:attacker = {
					government_has_flag = government_is_feudal
				}
				scope:defender = {
					government_has_flag = government_is_nw
				}
			}
		}

		NOT = { has_government = ruins_government }
	}
	target_titles = all
	target_title_tier = county
	ignore_effect = change_title_holder

	ai_can_target_all_titles = {
		can_use_viking_invasion_cbs_trigger = yes
	}
	ai_score_mult = {
		value = viking_conquest_ai_score_value

		# As a feudal gov, do not attack owner of tribal holdings  if you have a tribal holding to convert already
		add = {
			every_in_list = {
				list = target_titles
				if = {
					limit = { feudal_clan_tribal_conquest_constraints = yes }
					add = -1000
				}
			}
		}

		# AI in struggles act insularly for wars that don't have a familial or legal basis.
		multiply = struggle_wars_prioritise_struggle_targets_value
	}

	valid_to_start = {
		scope:target = {
			neighboring_county_or_viking_conquest_trigger = { CHARACTER = root }
		}
		NOT = {
			scope:target = { agot_invalid_war_target = yes }
		}
		scope:target = {
			tier = tier_county
			NOT = {
				title_province = { geographical_region = world_westeros_beyond_the_wall }
			}
		}
	}

	allowed_for_character_display_regardless = {
		# Struggle constraint - Note: This is the CB you get in FP2 opportunity, if you need to debug, test it here first.
		custom_tooltip = {
			text = struggle_involvement_cb_check_failure
			struggle_blocks_invasion_conquest_cb_trigger = yes
		}
	}

	should_invalidate = {
		OR = {
			scope:attacker = {
				is_current_dragonrider = no
			}
			NOT = {
				any_in_list = {
					list = target_titles
					any_in_de_jure_hierarchy = {
						tier = tier_county
						holder = {
							OR = {
								this = scope:defender
								target_is_liege_or_above = scope:defender
							}
						}
					}
				}
			}
		}
	}

	on_invalidated_desc = msg_county_conquest_war_invalidated_message
	on_invalidated = {}

	cost = {
		piety = {
			value = 0
			if = {
				limit = {
					scope:defender.faith = scope:attacker.faith
				}
				add = {
					value = minor_piety_value
					desc = CB_SAME_FAITH_COST
				}
			}
			multiply = common_cb_piety_cost_multiplier
		}
		prestige = {
			value = 0
			add = {
				value = minor_prestige_value
				desc = CB_BASE_COST
			}
			multiply = common_cb_prestige_cost_multiplier
		}
	}

	on_declaration = {
		on_declared_war = yes
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = county_conquest_cb_victory_desc_attacker
			}
			desc = county_conquest_cb_victory_desc
		}
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_low_effect = yes }

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}

		#As this is just a county conquest, simply grab the designated county.
		every_in_list = {
			list = target_titles
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
			}
		}

		resolve_title_and_vassal_change = scope:change

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = minor_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = minor_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_white_peace_desc_defender
			}
			desc = county_conquest_cb_white_peace_desc
		}
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
			stress_impact = {
				ambitious = medium_stress_impact_gain
				arrogant = medium_stress_impact_gain
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # Not important as the scales are identical
			FAME_BASE = minor_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		scope:defender = {
			stress_impact = {
				arrogant = medium_stress_impact_gain
			}
		}

		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = county_conquest_cb_defeat_desc_attacker
			}
			desc = county_conquest_cb_defeat_desc
		}
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_low_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 2
			}
			add_prestige = {
				value = medium_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = major_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes

		# If dragon cult loses, title is destroyed (see agot_filler_events_dragon for more details)
		scope:attacker = {
			if = {
				limit = { has_character_flag = dragon_cult_leader }
				destroy_title = scope:attacker.primary_title
			}
		}
	}

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "DRAGON_CONQUEST_WAR_NAME"
	war_name_base = "DRAGON_CONQUEST_WAR_NAME_BASE"
	cb_name = "DRAGON_CONQUEST_COUNTY_CB_NAME"

	interface_priority = 995

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8

	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150
}

dragon_duchy_conquest_cb = {
	icon = dragon_duchy_conquest_cb
	group = dragon_conquest

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	allowed_for_character = {
		is_current_dragonrider = yes

		#AGOT Added, NW should not be conquering
		NOT = { government_has_flag = government_is_nw }
	}

	allowed_against_character = {
		scope:attacker = {
			ALL_FALSE = {
				top_liege = scope:defender.top_liege
				liege = scope:defender
			}
		}

		NOT = {
			AND = {
				scope:attacker = {
					government_has_flag = government_is_feudal
				}
				scope:defender = {
					government_has_flag = government_is_nw
				}
			}
		}
		agot_mw_war_valid_during_megawar = yes
		NOT = { has_government = ruins_government }
	}
	target_titles = all
	target_title_tier = duchy
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	ai_can_target_all_titles = {
		can_use_viking_invasion_cbs_trigger = yes
	}
	ai_score_mult = {
		value = viking_conquest_ai_score_value

		# As a feudal gov, do not attack tribal
		add = {
			every_in_list = {
				list = target_titles
				if = {
					limit = { feudal_clan_tribal_conquest_constraints = yes }
					add = -1000
				}
			}
		}

		# AI in struggles act insularly for wars that don't have a familial or legal basis.
		multiply = struggle_wars_prioritise_struggle_targets_value
	}

	valid_to_start = {
		scope:target = {
			any_in_de_jure_hierarchy = {
				tier = tier_county
				neighboring_county_or_viking_conquest_trigger = { CHARACTER = root }
			}
		}
		NOT = {
			scope:target = { agot_invalid_war_target = yes }
		}
		scope:target = {
			tier = tier_duchy
			NOT = {
				any_in_de_jure_hierarchy = {
					tier = tier_county
					title_province = { geographical_region = world_westeros_beyond_the_wall }
				}
			}
		}
	}

	should_invalidate = {
		OR = {
			scope:attacker = {
				is_current_dragonrider = no
			}
			NOT = {
				any_in_list = {
					list = target_titles
					any_in_de_jure_hierarchy = {
						tier = tier_county
						holder = {
							target_is_same_character_or_above = scope:defender
						}
					}
				}
			}
		}
	}

	on_invalidated_desc = msg_religious_war_invalidation_region_message

	on_invalidated = {
	}

	cost = {
		piety = {
			value = 0
			if = {
				limit = {
					scope:defender.faith = scope:attacker.faith
				}
				add = {
					value = minor_piety_value
					desc = CB_SAME_FAITH_COST
				}
			}
			multiply = common_cb_piety_cost_multiplier
		}
		prestige = {
			value = 0
			add = {
				value = medium_prestige_value
				desc = CB_BASE_COST
			}
			multiply = common_cb_prestige_cost_multiplier
		}
	}

	on_declaration = {
		on_declared_war = yes
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = county_conquest_cb_victory_desc_attacker
			}
			desc = county_conquest_cb_victory_desc
		}
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_med_effect = yes }

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}

		# go through the dejure hierarchy under target titles, transfer eligible vassals and sieze counties from ineligible ones
		every_in_list = {
			list = target_titles
			custom_tooltip = CONQUEST_CB_TITLE

			conquest_cb_title_transfer = {
				RELIGIOUS_WAR = no
			}
		}

		every_in_list = {
			list = vassals_taken
			change_liege = {
				liege = scope:attacker
				change = scope:change
			}
		}

		every_in_list = {
			list = titles_taken
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}

		resolve_title_and_vassal_change = scope:change

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = medium_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }

		if = { # Warning that only counties are changing hands
			limit = {
				any_in_list = {
					list = target_titles
					tier = tier_duchy
				}
			}
			random_in_list = {
				list = target_titles
				limit = { tier = tier_duchy }
				save_scope_as = de_jure_target
			}
		}
		if = {
			limit = {
				any_in_list = {
					list = target_titles
					tier = tier_duchy
					holder = scope:defender
				}
			}
			if = {
				limit = {
					scope:defender = {
						any_held_title = {
							tier = tier_county
							NOT = { target_is_de_jure_liege_or_above = scope:de_jure_target }
						}
					}
				}
				custom_tooltip = conquest_title_not_transferred_tt
			}
			else = { custom_tooltip = conquest_title_destroyed_tt }
		}
		else = {
			if = {
				limit = {
					any_in_list = {
						list = target_titles
						tier = tier_duchy
						is_title_created = yes
					}
				}
				custom_tooltip = conquest_title_usurp_tt
			}
			else = { custom_tooltip = conquest_title_create_tt }
		}
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_white_peace_desc_defender
			}
			desc = county_conquest_cb_white_peace_desc
		}
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Prestige loss for the attacker

		#EP2 accolade glory gain for doing pretty good against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_low_effect = yes }

		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # not impactful as the scale are identical
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}


		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = county_conquest_cb_defeat_desc_attacker
			}
			desc = county_conquest_cb_defeat_desc
		}
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_med_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 3
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = major_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
	}

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "DRAGON_CONQUEST_WAR_NAME"
	war_name_base = "DRAGON_CONQUEST_WAR_NAME_BASE"
	cb_name = "DRAGON_CONQUEST_DUCHY_CB_NAME"

	interface_priority = 997

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8

	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150
}

dragon_ducal_conquest_cb = {
	icon = dragon_duchy_conquest_cb
	group = dragon_conquest

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	allowed_for_character = {
		is_current_dragonrider = yes

		#AGOT Added, NW should not be conquering
		NOT = { government_has_flag = government_is_nw }
	}

	allowed_against_character = {
		NOT = {
			AND = {
				scope:attacker = {
					government_has_flag = government_is_feudal
				}
				scope:defender = {
					government_has_flag = government_is_nw
				}
			}
		}

		agot_mw_war_valid_during_megawar = yes
		NOT = { has_government = ruins_government }
	}
	target_titles = neighbor_land
	target_title_tier = all
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	valid_to_start = {
		scope:target = {
			tier = tier_county
			NOT = {
				title_province = { geographical_region = world_westeros_beyond_the_wall }
			}
		}
		scope:attacker = { # The attacker has a County in an uncreated Duchy
			any_sub_realm_title = {
				tier = tier_county
				duchy = {
					is_title_created = no
					any_in_de_jure_hierarchy = {
						this = scope:target
					}
				}
			}
		}
		NOT = {
			scope:target = { agot_invalid_war_target = yes }
		}
	}

	allowed_for_character_display_regardless = {
		# Struggle constraint
		custom_tooltip = {
			text = struggle_involvement_cb_check_failure
			struggle_blocks_invasion_conquest_cb_trigger = yes
		}
	}

	should_invalidate = {
		OR = {
			scope:attacker = {
				is_current_dragonrider = no
			}
			NOT = {
				any_in_list = {
					list = target_titles
					any_in_de_jure_hierarchy = {
						tier = tier_county
						holder = {
							OR = {
								this = scope:defender
								target_is_liege_or_above = scope:defender
							}
						}
					}
				}
			}
		}
	}

	on_invalidated_desc = msg_county_conquest_war_invalidated_message

	on_invalidated = {
	}

	cost = {
		piety = {
			value = 0
			if = {
				limit = {
					scope:defender.faith = scope:attacker.faith
				}
				add = {
					value = minor_piety_value
					desc = CB_SAME_FAITH_COST
				}
			}
			multiply = common_cb_piety_cost_multiplier
		}
		prestige = {
			value = 0
			add = {
				value = medium_prestige_value
				desc = CB_BASE_COST
			}
			multiply = common_cb_prestige_cost_multiplier
		}
	}

	on_declaration = {
		on_declared_war = yes
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = ducal_conquest_cb_victory_desc_attacker
			}
			desc = ducal_conquest_cb_victory_desc
		}
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_low_effect = yes }

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}

		# go through the dejure hierarchy under target titles, transfer titles with same or worse tolerance holders (their religion equaly or less tolerated than the defender's),
		# take the holder as vassal otherwise and don't go deeper
		every_in_list = {
			list = target_titles
			custom_tooltip = CONQUEST_CB_TITLE
			every_in_de_jure_hierarchy = {
				continue = {
					OR = {
						NOT = {
							exists = holder
						}
						NOT = {
							holder = {
								target_is_liege_or_above = scope:defender
							}
						}
						AND = {
							scope:attacker.faith = {
								faith_hostility_level_comparison = {
									prev.holder.faith <= scope:defender.faith
								}
							}
							holder = {
								OR = {
									this = scope:defender
									target_is_liege_or_above = scope:defender
								}
							}
						}
					}
					tier > tier_county
				}
				limit = {
					tier = tier_county
					exists = holder
					holder = {
						OR = {
							this = scope:defender
							target_is_liege_or_above = scope:defender
						}
					}
				}

				if = {
					limit = {
						OR = {
							scope:attacker.faith = {
								faith_hostility_level_comparison = {
									prev.holder.faith >= scope:defender.faith
								}
							}
							holder.primary_title.tier >= scope:attacker.primary_title.tier
						}
					}
					add_to_temporary_list = titles_taken
				}
				else = {
					holder = {
						add_to_temporary_list = vassals_taken
					}
				}
			}
		}

		every_in_list = {
			list = titles_taken
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}

		every_in_list = {
			list = vassals_taken
			change_liege = {
				liege = scope:attacker
				change = scope:change
			}
		}

		resolve_title_and_vassal_change = scope:change

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = minor_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = minor_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = ducal_conquest_cb_white_peace_desc_defender
			}
			desc = ducal_conquest_cb_white_peace_desc
		}
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # not important as scale values are identical
			FAME_BASE = minor_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = ducal_conquest_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = ducal_conquest_cb_defeat_desc_attacker
			}
			desc = ducal_conquest_cb_defeat_desc
		}
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_low_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 2
			}
			add_prestige = {
				value = medium_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = major_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
	}

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "DRAGON_DUCAL_CONQUEST_WAR_NAME"
	war_name_base = "DRAGON_DUCAL_CONQUEST_WAR_NAME_BASE"
	cb_name = "DRAGON_DUCAL_CONQUEST_CB_NAME"

	interface_priority = 996

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8

	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150

	max_ai_diplo_distance_to_title = 1500
}

dragon_kingdom_conquest_cb = {
	icon = dragon_kingdom_conquest_cb
	group = dragon_conquest

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	allowed_for_character = {
		is_current_dragonrider = yes

		#AGOT Added, NW should not be conquering
		NOT = { government_has_flag = government_is_nw }
	}

	allowed_against_character = {
		scope:attacker = {
			ALL_FALSE = {
				top_liege = scope:defender.top_liege
				liege = scope:defender
			}
		}

		NOT = {
			AND = {
				scope:attacker = {
					government_has_flag = government_is_feudal
				}
				scope:defender = {
					government_has_flag = government_is_nw
				}
			}
		}
		agot_mw_war_valid_during_megawar = yes
		NOT = { has_government = ruins_government }
	}
	target_titles = all
	target_title_tier = kingdom
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	ai_can_target_all_titles = {
		can_use_viking_invasion_cbs_trigger = yes
	}
	ai_score_mult = {
		value = viking_conquest_ai_score_value

		# As a feudal gov, do not attack tribal
		add = {
			every_in_list = {
				list = target_titles
				if = {
					limit = { feudal_clan_tribal_conquest_constraints = yes }
					add = -1000
				}
			}
		}

		# AI in struggles act insularly for wars that don't have a familial or legal basis.
		multiply = struggle_wars_prioritise_struggle_targets_value
	}

	valid_to_start = {
		scope:target = {
			any_in_de_jure_hierarchy = {
				tier = tier_county
				neighboring_county_or_viking_conquest_trigger = { CHARACTER = root }
				NOT = { title_province = { geographical_region = world_westeros_beyond_the_wall } }
			}
		}
		NOT = {
			scope:target = { agot_invalid_war_target = yes }
		}
		scope:target = {
			tier = tier_kingdom
			NOT = {
				any_in_de_jure_hierarchy = {
					tier = tier_county
					title_province = { geographical_region = world_westeros_beyond_the_wall }
				}
			}
		}
	}

	should_invalidate = {
		OR = {
			scope:attacker = {
				is_current_dragonrider = no
			}
			NOT = {
				any_in_list = {
					list = target_titles
					any_in_de_jure_hierarchy = {
						tier = tier_county
						holder = {
							target_is_same_character_or_above = scope:defender
						}
					}
				}
			}
		}
	}

	on_invalidated_desc = msg_religious_war_invalidation_region_message

	on_invalidated = {
	}

	cost = {
		piety = {
			value = 0
			if = {
				limit = {
					scope:defender.faith = scope:attacker.faith
				}
				add = {
					value = medium_piety_value
					desc = CB_SAME_FAITH_COST
				}
			}
			multiply = common_cb_piety_cost_multiplier
		}
		prestige = {
			value = 0
			add = {
				value = major_prestige_value
				desc = CB_BASE_COST
			}
			multiply = common_cb_prestige_cost_multiplier
		}
	}

	on_declaration = {
		on_declared_war = yes
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = county_conquest_cb_victory_desc_attacker
			}
			desc = county_conquest_cb_victory_desc
		}
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_med_effect = yes }

		if = { # Warning that only duchies are changing hands unless attacking kingdom-empire
			limit = {
				any_in_list = {
					list = target_titles
					tier = tier_kingdom
				}
			}
			random_in_list = {
				list = target_titles
				limit = { tier = tier_kingdom }
				save_scope_as = de_jure_target
			}
		}
		#Remove if swapping to dejure petty kingdoms
		if = {
			limit = {
				scope:attacker.primary_title.tier < tier_kingdom
				OR = {
					AND = {
						scope:de_jure_target = title:k_dorne
						scope:defender = { has_title = title:e_dorne }
					}
					AND = {
						scope:de_jure_target = title:k_the_iron_islands
						scope:defender = { has_title = title:e_the_iron_islands }
					}
					AND = {
						scope:de_jure_target = title:k_the_north
						scope:defender = { has_title = title:e_the_north }
					}
					AND = {
						scope:de_jure_target = title:k_the_reach
						scope:defender = { has_title = title:e_the_reach }
					}
					AND = {
						scope:de_jure_target = title:k_the_riverlands
						scope:defender = { has_title = title:e_the_riverlands }
					}
					AND = {
						scope:de_jure_target = title:k_the_stormlands
						scope:defender = { has_title = title:e_the_stormlands }
					}
					AND = {
						scope:de_jure_target = title:k_the_vale
						scope:defender = { has_title = title:e_the_vale }
					}
					AND = {
						scope:de_jure_target = title:k_the_westerlands
						scope:defender = { has_title = title:e_the_westerlands }
					}
				}
			}

			scope:attacker = { add_character_flag  = taking_kingdom }
			if = {
				limit = {
					scope:de_jure_target = title:k_dorne
					scope:defender = { has_title = title:e_dorne }
				}
				title:e_dorne = { save_scope_as = de_jure_target_empire }
				custom_tooltip = {
					text = empire_destroyed_effect_tt
					create_title_and_vassal_change = {
						type = created
						save_scope_as = kingdom_change
						add_claim_on_loss = no
					}
					title:k_dorne = {
						change_title_holder = {
							holder = scope:attacker
							change = scope:kingdom_change
						}
					}
					resolve_title_and_vassal_change = scope:kingdom_change
				}
			}
			else_if = {
				limit = {
					scope:de_jure_target = title:k_the_iron_islands
					scope:defender = { has_title = title:e_the_iron_islands }
				}
				title:e_the_iron_islands = { save_scope_as = de_jure_target_empire }
				custom_tooltip = {
					text = empire_destroyed_effect_tt
					create_title_and_vassal_change = {
						type = created
						save_scope_as = kingdom_change
						add_claim_on_loss = no
					}
					title:k_the_iron_islands = {
						change_title_holder = {
							holder = scope:attacker
							change = scope:kingdom_change
						}
					}
					resolve_title_and_vassal_change = scope:kingdom_change
				}
			}
			else_if = {
				limit = {
					scope:de_jure_target = title:k_the_north
					scope:defender = { has_title = title:e_the_north }
				}
				title:e_the_north = { save_scope_as = de_jure_target_empire }
				custom_tooltip = {
					text = empire_destroyed_effect_tt
					create_title_and_vassal_change = {
						type = created
						save_scope_as = kingdom_change
						add_claim_on_loss = no
					}
					title:k_the_north = {
						change_title_holder = {
							holder = scope:attacker
							change = scope:kingdom_change
						}
					}
					resolve_title_and_vassal_change = scope:kingdom_change
				}
			}
			else_if = {
				limit = {
					scope:de_jure_target = title:k_the_reach
					scope:defender = { has_title = title:e_the_reach }
				}
				title:e_the_reach = { save_scope_as = de_jure_target_empire }
				custom_tooltip = {
					text = empire_destroyed_effect_tt
					create_title_and_vassal_change = {
						type = created
						save_scope_as = kingdom_change
						add_claim_on_loss = no
					}
					title:k_the_reach = {
						change_title_holder = {
							holder = scope:attacker
							change = scope:kingdom_change
						}
					}
					resolve_title_and_vassal_change = scope:kingdom_change
				}
			}
			else_if = {
				limit = {
					scope:de_jure_target = title:k_the_stormlands
					scope:defender = { has_title = title:e_the_stormlands }
				}
				title:e_the_stormlands = { save_scope_as = de_jure_target_empire }
				custom_tooltip = {
					text = empire_destroyed_effect_tt
					create_title_and_vassal_change = {
						type = created
						save_scope_as = kingdom_change
						add_claim_on_loss = no
					}
					title:k_the_stormlands = {
						change_title_holder = {
							holder = scope:attacker
							change = scope:kingdom_change
						}
					}
					resolve_title_and_vassal_change = scope:kingdom_change
				}
			}
			else_if = {
				limit = {
					scope:de_jure_target = title:k_the_riverlands
					scope:defender = { has_title = title:e_the_riverlands }
				}
				title:e_the_riverlands = { save_scope_as = de_jure_target_empire }
				custom_tooltip = {
					text = empire_destroyed_effect_tt
					create_title_and_vassal_change = {
						type = created
						save_scope_as = kingdom_change
						add_claim_on_loss = no
					}
					title:k_the_riverlands = {
						change_title_holder = {
							holder = scope:attacker
							change = scope:kingdom_change
						}
					}
					resolve_title_and_vassal_change = scope:kingdom_change
				}
			}
			else_if = {
				limit = {
					scope:de_jure_target = title:k_the_vale
					scope:defender = { has_title = title:e_the_vale }
				}
				title:e_the_vale = { save_scope_as = de_jure_target_empire }
				custom_tooltip = {
					text = empire_destroyed_effect_tt
					create_title_and_vassal_change = {
						type = created
						save_scope_as = kingdom_change
						add_claim_on_loss = no
					}
					title:k_the_vale = {
						change_title_holder = {
							holder = scope:attacker
							change = scope:kingdom_change
						}
					}
					resolve_title_and_vassal_change = scope:kingdom_change
				}
			}
			else_if = {
				limit = {
					scope:de_jure_target = title:k_the_westerlands
					scope:defender = { has_title = title:e_the_westerlands }
				}
				title:e_the_westerlands = { save_scope_as = de_jure_target_empire }
				custom_tooltip = {
					text = empire_destroyed_effect_tt
					create_title_and_vassal_change = {
						type = created
						save_scope_as = kingdom_change
						add_claim_on_loss = no
					}
					title:k_the_westerlands = {
						change_title_holder = {
							holder = scope:attacker
							change = scope:kingdom_change
						}
					}
					resolve_title_and_vassal_change = scope:kingdom_change
				}
			}
		}
		else_if = {
			limit = {
				any_in_list = {
					list = target_titles
					tier = tier_kingdom
					holder = scope:defender
				}
			}
			if = {
				limit = {
					scope:defender = {
						any_held_title = {
							tier = tier_county
							NOT = { target_is_de_jure_liege_or_above = scope:de_jure_target }
						}
					}
				}
				custom_tooltip = conquest_title_not_transferred_tt
			}
			else = { custom_tooltip = conquest_title_destroyed_tt }
		}
		else = {
			if = {
				limit = {
					any_in_list = {
						list = target_titles
						tier = tier_kingdom
						is_title_created = yes
					}
				}
				custom_tooltip = conquest_title_usurp_tt
			}
			else = { custom_tooltip = conquest_title_create_tt }
		}

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}

		# go through the dejure hierarchy under target titles, transfer eligible vassals and sieze counties from ineligible ones
		every_in_list = {
			list = target_titles
			custom_tooltip = CONQUEST_CB_TITLE

			conquest_cb_title_transfer = {
				RELIGIOUS_WAR = no
			}
		}

		every_in_list = {
			list = vassals_taken
			change_liege = {
				liege = scope:attacker
				change = scope:change
			}
		}

		every_in_list = {
			list = titles_taken
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}

		resolve_title_and_vassal_change = scope:change

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = medium_prestige_value
			}
		}

		if = { # Warning that only duchies are changing hands unless attacking kingdom-empire
			limit = {
				any_in_list = {
					list = target_titles
					tier = tier_kingdom
				}
			}
			random_in_list = {
				list = target_titles
				limit = { tier = tier_kingdom }
				save_scope_as = de_jure_target
			}
		}

		#Remove if swapping to dejure petty kingdoms
		if = {
			limit = {
				scope:attacker = { has_character_flag = taking_kingdom }
			}

			scope:attacker = { remove_character_flag = taking_kingdom }
			if = {
				limit = {
					scope:de_jure_target = title:k_dorne
					scope:defender = { has_title = title:e_dorne }
				}
				hidden_effect = {
					scope:defender = { destroy_title = title:e_dorne }
				}
			}
			else_if = {
				limit = {
					scope:de_jure_target = title:k_the_iron_islands
					scope:defender = { has_title = title:e_the_iron_islands }
				}
				hidden_effect = {
					scope:defender = { destroy_title = title:e_the_iron_islands }
				}
			}
			else_if = {
				limit = {
					scope:de_jure_target = title:k_the_north
					scope:defender = { has_title = title:e_the_north }
				}
				hidden_effect = {
					scope:defender = { destroy_title = title:e_the_north }
				}
			}
			else_if = {
				limit = {
					scope:de_jure_target = title:k_the_reach
					scope:defender = { has_title = title:e_the_reach }
				}
				hidden_effect = {
					scope:defender = { destroy_title = title:e_the_reach }
				}
			}
			else_if = {
				limit = {
					scope:de_jure_target = title:k_the_stormlands
					scope:defender = { has_title = title:e_the_stormlands }
				}
				hidden_effect = {
					scope:defender = { destroy_title = title:e_the_stormlands }
				}
			}
			else_if = {
				limit = {
					scope:de_jure_target = title:k_the_riverlands
					scope:defender = { has_title = title:e_the_riverlands }
				}
				hidden_effect = {
					scope:defender = { destroy_title = title:e_the_riverlands }
				}
			}
			else_if = {
				limit = {
					scope:de_jure_target = title:k_the_vale
					scope:defender = { has_title = title:e_the_vale }
				}
				hidden_effect = {
					scope:defender = { destroy_title = title:e_the_vale }
				}
			}
			else_if = {
				limit = {
					scope:de_jure_target = title:k_the_westerlands
					scope:defender = { has_title = title:e_the_westerlands }
				}
				hidden_effect = {
					scope:defender = { destroy_title = title:e_the_westerlands }
				}
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_white_peace_desc_defender
			}
			desc = county_conquest_cb_white_peace_desc
		}
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Prestige loss for the attacker

		#EP2 accolade glory gain for doing pretty good against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_low_effect = yes }

		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # not impactful as the scale are identical
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}


		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = county_conquest_cb_defeat_desc_attacker
			}
			desc = county_conquest_cb_defeat_desc
		}
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_med_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 3
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = major_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
	}

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "DRAGON_CONQUEST_WAR_NAME"
	war_name_base = "DRAGON_CONQUEST_WAR_NAME_BASE"
	cb_name = "DRAGON_CONQUEST_KINGDOM_CB_NAME"

	interface_priority = 998

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8

	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150
}


dragon_subjugation_cb = {
	icon = dragon_subjugation
	group = dragon_conquest
	ai_only_against_neighbors = yes

	allowed_for_character = {
		is_current_dragonrider = yes

		#AGOT Added, NW should not be conquering
		NOT = { government_has_flag = government_is_nw }
	}

	allowed_for_character_display_regardless = {
		trigger_if = {
			limit = {
				NOT = {
					dynasty ?= { has_dynasty_perk = dragonrider_dynasty_legacy_5 }
				}
			}
			custom_description = {
				text = declared_draconic_subjugation_war_flag_tt
				NOT = { has_character_flag = used_draconic_subjugation_cb }
			}
		}
	}

	allowed_against_character = {
		scope:defender = {
			agot_is_independent_ruler = yes
			trigger_if = {
				limit = { scope:attacker = { is_ai = no } } # Already pre-filtered by the AI due to ai_only_against_neighbors = yes. any_neighboring_top_liege_realm_owner is expensive
				scope:attacker = {
					any_neighboring_top_liege_realm_owner = {
						this = scope:defender
					}
				}
			}
			NOT = { has_government = ruins_government }
		}

		scope:attacker = {
			ALL_FALSE = {
				top_liege = scope:defender.top_liege
				liege = scope:defender
			}
		}

		NOT = {
			AND = {
				scope:attacker = {
					government_has_flag = government_is_feudal
				}
				scope:defender = {
					government_has_flag = government_is_nw
				}
			}
		}

		agot_mw_war_valid_during_megawar = yes
	}

	valid_to_start = {
		scope:defender.capital_county = {
			neighboring_county_or_viking_conquest_trigger = { CHARACTER = root }
			NOT = { title_province = { geographical_region = world_westeros_beyond_the_wall } }
		}
	}

	cost = {
		piety = {
			value = 0
			if = {
				limit = {
					scope:defender.faith = scope:attacker.faith
				}
				add = {
					value = medium_piety_value
					desc = CB_SAME_FAITH_COST
				}
			}
			multiply = common_cb_piety_cost_multiplier
		}
		prestige = {
			value = 0
			add = {
				add = {
					value = major_prestige_value
					add = minor_prestige_value
				}
				desc = CB_BASE_COST
			}
			multiply = common_cb_prestige_cost_multiplier
		}
	}

	should_invalidate = {
		OR = {
			scope:attacker = {
				is_current_dragonrider = no
			}

			scope:defender = {
				#AGOT Modified, must be true independent
				agot_is_independent_ruler = no
			}
		}
	}

	on_declaration = {
		on_declared_war = yes
		scope:attacker = {
			add_character_flag = used_draconic_subjugation_cb
		}
		scope:defender = {
			trigger_event = {
				id = agot_dragon.0014
				days = 1
			}
		}
	}

	on_invalidated_desc = msg_subjugation_war_invalidated_message

	on_invalidated = {
		scope:attacker = {
			if = {
				limit = {
					is_alive = yes
				}
				remove_character_flag = used_draconic_subjugation_cb # If the war is invalidated, you should be permitted to try again
				# Refund their investment.
				add_prestige_no_experience = major_prestige_value
			}
		}
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender.primary_title.tier < scope:attacker.primary_title.tier }
				desc = {
					first_valid = {
						triggered_desc = {
							trigger = { scope:attacker = { is_local_player = yes } }
							desc = vassalization_cb_victory_desc_attacker
						}
						triggered_desc = {
							trigger = { scope:defender = { is_local_player = yes } }
							desc = vassalization_cb_victory_desc_defender
						}
						desc = vassalization_cb_victory_desc
					}
				}
			}
			desc = {
				first_valid = {
					triggered_desc = {
						trigger = { scope:attacker = { is_local_player = yes } }
						desc = tribal_subjugation_cb_victory_desc_equal_tier_attacker
					}
					triggered_desc = {
						trigger = { scope:defender = { is_local_player = yes } }
						desc = tribal_subjugation_cb_victory_desc_equal_tier_defender
					}
					desc = tribal_subjugation_cb_victory_desc_equal_tier
				}
			}
		}
		triggered_desc = {
			trigger = { scope:attacker = { is_local_player = yes } }
			desc = subjugation_war_warning_desc
		}
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_high_effect = yes }

		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = change
			add_claim_on_loss = no
		}

		if = {
			limit = {
				OR = {
					scope:defender = { has_title = title:e_dorne }
					scope:defender = { primary_title = title:e_the_iron_islands }
					scope:defender = { primary_title = title:e_the_north }
					scope:defender = { primary_title = title:e_the_reach }
					scope:defender = { primary_title = title:e_the_riverlands }
					scope:defender = { primary_title = title:e_the_stormlands }
					scope:defender = { primary_title = title:e_the_vale }
					scope:defender = { primary_title = title:e_the_westerlands }
				}
				OR = {
					scope:attacker.primary_title = { tier = tier_empire }
					title:e_the_iron_throne = { is_title_created = no }
				}
			}
			if = {
				limit = {
					title:e_the_iron_throne = { is_title_created = no }
					scope:attacker.primary_title.tier < tier_empire
				}
				create_title_and_vassal_change = {
					type = created
					save_scope_as = iron_throne_created
					add_claim_on_loss = no
				}
				title:e_the_iron_throne = {
					change_title_holder = {
						holder = scope:attacker
						change = scope:iron_throne_created
					}
				}
				resolve_title_and_vassal_change = scope:iron_throne_created
			}
			# Create new kingdom(s)
			create_title_and_vassal_change = {
				type = created
				save_scope_as = kingdom_change
				add_claim_on_loss = no
			}
			if = {
				limit = { scope:defender.primary_title = title:e_dorne }
				title:k_dorne = {
					change_title_holder = {
						holder = scope:defender
						change = scope:kingdom_change
					}
				}
			}
			if = {
				limit = { scope:defender.primary_title = title:e_the_iron_islands }
				title:k_the_iron_islands = {
					change_title_holder = {
						holder = scope:defender
						change = scope:kingdom_change
					}
				}
			}
			if = {
				limit = { scope:defender.primary_title = title:e_the_north }
				title:k_the_north = {
					change_title_holder = {
						holder = scope:defender
						change = scope:kingdom_change
					}
				}
			}
			if = {
				limit = { scope:defender.primary_title = title:e_the_reach }
				title:k_the_reach = {
					change_title_holder = {
						holder = scope:defender
						change = scope:kingdom_change
					}
				}
			}
			if = {
				limit = { scope:defender.primary_title = title:e_the_riverlands }
				title:k_the_riverlands = {
					change_title_holder = {
						holder = scope:defender
						change = scope:kingdom_change
					}
				}
			}
			if = {
				limit = { scope:defender.primary_title = title:e_the_stormlands }
				title:k_the_stormlands = {
					change_title_holder = {
						holder = scope:defender
						change = scope:kingdom_change
					}
				}
			}
			if = {
				limit = { scope:defender.primary_title = title:e_the_vale }
				title:k_the_vale = {
					change_title_holder = {
						holder = scope:defender
						change = scope:kingdom_change
					}
				}
			}
			if = {
				limit = { scope:defender.primary_title = title:e_the_westerlands }
				title:k_the_westerlands = {
					change_title_holder = {
						holder = scope:defender
						change = scope:kingdom_change
					}
				}
			}
			# Give kingdom(s) to defender
			resolve_title_and_vassal_change = scope:kingdom_change
			# Destroy empire title of defender
			scope:defender = {
				if = {
					limit = { has_title = title:e_dorne }
					destroy_title = title:e_dorne
				}
				if = {
					limit = { primary_title = title:e_the_iron_islands }
					destroy_title = title:e_the_iron_islands
				}
				if = {
					limit = { primary_title = title:e_the_north }
					destroy_title = title:e_the_north
				}
				if = {
					limit = { primary_title = title:e_the_reach }
					destroy_title = title:e_the_reach
				}
				if = {
					limit = { primary_title = title:e_the_riverlands }
					destroy_title = title:e_the_riverlands
				}
				if = {
					limit = { primary_title = title:e_the_stormlands }
					destroy_title = title:e_the_stormlands
				}
				if = {
					limit = { primary_title = title:e_the_vale }
					destroy_title = title:e_the_vale
				}
				if = {
					limit = { primary_title = title:e_the_westerlands }
					destroy_title = title:e_the_westerlands
				}
			}
			# Check if defender is still an emperor, if so give those titles to attacker
			if = {
				limit = {
					scope:defender = {
						any_held_title = {
							NOT = { this = title:e_dorne }
							NOT = { this = title:e_the_iron_islands }
							NOT = { this = title:e_the_north }
							NOT = { this = title:e_the_reach }
							NOT = { this = title:e_the_riverlands }
							NOT = { this = title:e_the_stormlands }
							NOT = { this = title:e_the_vale }
							NOT = { this = title:e_the_westerlands }
							tier = tier_empire
						}
					}
				}
				scope:defender = {
					every_held_title = {
						if = {
							limit = {
								NOT = { this = title:e_dorne }
								NOT = { this = title:e_the_iron_islands }
								NOT = { this = title:e_the_north }
								NOT = { this = title:e_the_reach }
								NOT = { this = title:e_the_riverlands }
								NOT = { this = title:e_the_stormlands }
								NOT = { this = title:e_the_vale }
								NOT = { this = title:e_the_westerlands }
								tier = tier_empire
							}
							change_title_holder = {
								holder = scope:attacker
								change = scope:change
							}
						}
					}
				}
			}
			# Set liege for defender
			scope:defender = {
				change_liege = {
					liege = scope:attacker
					change = scope:change
				}
			}
		}
		else_if = {
			limit = {
				scope:defender.primary_title.tier < scope:attacker.primary_title.tier
			}
			scope:defender = {
				change_liege = {
					liege = scope:attacker
					change = scope:change
				}
			}
		}
		else = {
			scope:defender = {
				every_held_title = {
					# Take highest title and give it to attacker, then set liege for defender
					if = {
						limit = {
							tier = scope:defender.primary_title.tier
						}
						# If election laws, get rid of them - dragons don't respect democracy
						if = {
							limit = {
								OR = {
									has_title_law = magisterial_life_succession_law
									has_title_law = magisterial_limited_succession_law
								}
							}
							if = {
								limit = {
									has_title_law = magisterial_life_succession_law
								}
								remove_title_law = magisterial_life_succession_law
							}
							if = {
								limit = {
									has_title_law = magisterial_limited_succession_law
								}
								remove_title_law = magisterial_limited_succession_law
							}
							add_title_law = dictatorship_succession_law
						}
						# If the title is the three daughters and attacker is not already emperor, trigger event to choose capital
						if = {
							limit = {
								this = title:e_three_daughters
								tier > scope:attacker.primary_title.tier
							}
							scope:attacker = {
								add_character_flag = {
									flag = agot_choose_three_daughters_capital
									days = 3
								}
								trigger_event = {
									id = agot_dragon.0017
									days = 1
								}
							}
						}
						# Change title holder
						change_title_holder = {
							holder = scope:attacker
							change = scope:change
						}
					}
					else_if = {
						limit = {
							OR = {
								NOT = { exists = scope:secondary_title }
								tier > scope:secondary_title.tier
							}
						}
						save_temporary_scope_as = secondary_title
					}
				}
			}

			scope:defender = {
				if = {
					limit = {
						exists = scope:secondary_title
					}
					every_vassal = {
						limit = {
							primary_title.tier >= scope:secondary_title.tier
							NOT = {
								primary_title.tier = tier_barony
							}
						}
						change_liege = {
							liege = scope:attacker
							change = scope:change
						}
					}
				}
			}

			scope:defender = {
				change_liege = {
					liege = scope:attacker
					change = scope:change
				}
			}
		}

		resolve_title_and_vassal_change = scope:change


		# Prestige level progress for the attacker
		scope:attacker = {
			add_prestige_experience = {
				value = major_prestige_value
			}
		}

		# Prestige loss for the defender
		scope:defender = {
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = tribal_subjugation_cb_white_peace_desc_defender
			}
			desc = tribal_subjugation_cb_white_peace_desc
		}
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		#EP2 accolade glory gain for doing ok against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_low_effect = yes }
		scope:defender = { accolade_defender_war_end_glory_gain_med_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = medium_prestige_value
				multiply = -1.0
			}
			stress_impact = {
				ambitious = medium_stress_impact_gain
				arrogant = medium_stress_impact_gain
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # Not important as the scales are identical
			FAME_BASE = medium_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		scope:defender = {
			stress_impact = {
				arrogant = medium_stress_impact_gain
			}
		}

		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = tribal_subjugation_cb_white_peace_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = tribal_subjugation_cb_defeat_desc_attacker
			}
			desc = tribal_subjugation_cb_white_peace_desc
		}
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_high_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 3
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for the defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = major_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		scope:attacker = {
			save_temporary_scope_as = loser
		}

		# Truce
		add_truce_attacker_defeat_effect = yes

		on_lost_aggression_war_discontent_loss = yes

	}

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "DRAGON_SUBJUGATION_WAR_NAME"
	war_name_base = "DRAGON_SUBJUGATION_WAR_NAME_BASE"
	cb_name = "DRAGON_SUBJUGATION_CB_NAME"
	interface_priority = 999

	ticking_war_score_targets_entire_realm = yes
	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150
	attacker_ticking_warscore = 0
	attacker_wargoal_percentage = 0.8

	max_ai_diplo_distance_to_title = 500
}
