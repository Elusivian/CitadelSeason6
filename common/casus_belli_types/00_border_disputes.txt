border_county_conquest_cb = {
	group = border
	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = {
		always = yes
	}
	defender_ticking_warscore_delay = {
		months = 48
	}
	allowed_for_character_display_regardless = {
		prestige_level >= 1
		is_ai = no # AI will only use major and massive border disputes
		is_independent_ruler = yes
	}
	allowed_against_character = {
        is_independent_ruler = yes
		scope:attacker = {
			ALL_FALSE = {
				top_liege = scope:defender.top_liege
				liege = scope:defender
			}
		}
	}
	target_titles = neighbor_land_or_water
	target_title_tier = county
	ignore_effect = change_title_holder
	ai_only_against_neighbors = yes
	valid_to_start = {
		scope:target = {
			neighboring_county_or_viking_conquest_trigger = {
				CHARACTER = root
			}
		}
	}
	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier = tier_county
					holder = {
						OR = {
							this = scope:defender
							target_is_liege_or_above = scope:defender
						}
					}
				}
			}
		}
	}
	on_invalidated_desc = msg_religious_war_invalidation_region_message
	on_invalidated = {
	}
	cost = {
		prestige = {
			value = 0
			add = {
				value = 350
				desc = CB_BASE_COST
			}
		}
	}
	on_declaration = {
		on_declared_war = yes
	}
	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
					}
				}
				desc = county_border_cb_victory_desc_attacker
			}
			desc = county_border_cb_victory_desc
		}
	}
	on_victory = {
		scope:attacker = {
			show_pow_release_message_effect = yes
		}
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}
		#As this is just a county conquest, simply grab the designated county.
		every_in_list = {
			list = target_titles
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change
		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = 500
			opinion = {
				modifier = contributed_in_war
			}
		}
		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = 500
			opinion = {
				modifier = contributed_in_war
			}
		}
		# Truce
		add_truce_attacker_victory_effect = yes
		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = {
			fp1_remember_recent_conquest_victory_effect = yes
		}
	}
	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:defender = {
						is_local_player = yes
					}
				}
				desc = county_border_cb_white_peace_desc_defender
			}
			desc = county_border_cb_white_peace_desc
		}
	}
	on_white_peace = {
		scope:attacker = {
			show_pow_release_message_effect = yes
		}
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = 125
				multiply = -1
			}
			stress_impact = {
				ambitious = medium_stress_impact_gain
				arrogant = medium_stress_impact_gain
			}
		}
		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = 250
			opinion = {
				modifier = contributed_in_war
			}
		}
		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = 250
			opinion = {
				modifier = contributed_in_war
			}
		}
		scope:defender = {
			stress_impact = {
				arrogant = medium_stress_impact_gain
			}
		}
		add_truce_white_peace_effect = yes
	}
	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:defender = {
						is_local_player = yes
					}
				}
				desc = county_border_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = county_border_cb_defeat_desc_attacker
			}
			desc = county_border_cb_defeat_desc
		}
	}
	on_defeat = {
		scope:attacker = {
			show_pow_release_message_effect = yes
		}
		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 2
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = 250
				multiply = -1
			}
		}
		# Prestige for Defender
		scope:defender = {
			add_prestige = 250
		}
		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = 500
			opinion = {
				modifier = contributed_in_war
			}
		}
		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = 500
			opinion = {
				modifier = contributed_in_war
			}
		}
		add_truce_attacker_defeat_effect = yes
		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
	}
	transfer_behavior = transfer
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	war_name = "BORDER_DISPUTE_WAR_NAME"
	war_name_base = "BORDER_DISPUTE_WAR_NAME_BASE"
	cb_name = "BORDER_DISPUTE_CB_NAME"
	interface_priority = 497
	use_de_jure_wargoal_only = yes
	attacker_wargoal_percentage = 0.8
	max_ai_diplo_distance_to_title = 1
}

border_duchy_conquest_cb = {
	group = border
	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = {
		always = yes
	}
	defender_ticking_warscore_delay = {
		months = 48
	}
	#ai_score_mult = {
	#	value = 500
	#}
	allowed_for_character_display_regardless = {
		prestige_level >= 2
		#NOT = {
		#	has_character_flag = already_declared_major_border_dispute_in_lifetime
		#}
		is_independent_ruler = yes
	}
	allowed_against_character = {
        is_independent_ruler = yes
		scope:attacker = {
			ALL_FALSE = {
				top_liege = scope:defender.top_liege
				liege = scope:defender
			}
		}
	}
	target_titles = neighbor_land_or_water
	target_title_tier = duchy
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder
	ai_only_against_neighbors = yes
	valid_to_start = {
		scope:target = {
			any_in_de_jure_hierarchy = {
				tier = tier_county
				neighboring_county_or_viking_conquest_trigger = {
					CHARACTER = root
				}
			}
		}
	}
	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier = tier_county
					holder = {
						target_is_same_character_or_above = scope:defender
					}
				}
			}
		}
	}
	on_invalidated_desc = msg_religious_war_invalidation_region_message
	on_invalidated = {
	}
	cost = {
		prestige = {
			value = 0
			add = {
				value = 850
				desc = CB_BASE_COST
			}
		}
	}
	on_declaration = {
		on_declared_war = yes
	}
	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
					}
				}
				desc = duchy_border_cb_victory_desc_attacker
			}
			desc = duchy_border_cb_victory_desc
		}
	}
	on_victory = {
		scope:attacker = {
			show_pow_release_message_effect = yes
		}
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}
		# go through the dejure hierarchy under target titles, transfer eligible vassals and sieze counties from ineligible ones
		every_in_list = {
			list = target_titles
			custom_tooltip = CONQUEST_CB_TITLE
			conquest_cb_title_transfer = {
				RELIGIOUS_WAR = no
			}
		}
		every_in_list = {
			list = vassals_taken
			change_liege = {
				liege = scope:attacker
				change = scope:change
			}
		}
		every_in_list = {
			list = titles_taken
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}
		resolve_title_and_vassal_change = scope:change
		# Prestige Progress for the Attacker
		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = 2000
			opinion = {
				modifier = contributed_in_war
			}
		}
		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = 2000
			opinion = {
				modifier = contributed_in_war
			}
		}
		# Truce
		add_truce_attacker_victory_effect = yes
		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = {
			fp1_remember_recent_conquest_victory_effect = yes
		}
	}
	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:defender = {
						is_local_player = yes
					}
				}
				desc = duchy_border_cb_white_peace_desc_defender
			}
			desc = duchy_border_cb_white_peace_desc
		}
	}
	on_white_peace = {
		scope:attacker = {
			show_pow_release_message_effect = yes
		}
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = 500
				multiply = -1
			}
		}
		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = 1000
			opinion = {
				modifier = contributed_in_war
			}
		}
		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = 1000
			opinion = {
				modifier = contributed_in_war
			}
		}
		add_truce_white_peace_effect = yes
	}
	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:defender = {
						is_local_player = yes
					}
				}
				desc = duchy_border_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = duchy_border_cb_defeat_desc_attacker
			}
			desc = duchy_border_cb_defeat_desc
		}
	}
	on_defeat = {
		scope:attacker = {
			show_pow_release_message_effect = yes
		}
		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 4
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = 1000
				multiply = -1
			}
		}
		# Prestige for Defender
		scope:defender = {
			add_prestige = 1000
		}
		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = 2000
			opinion = {
				modifier = contributed_in_war
			}
		}
		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = 2000
			opinion = {
				modifier = contributed_in_war
			}
		}
		add_truce_attacker_defeat_effect = yes
		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
	}
	transfer_behavior = transfer
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	war_name = "BORDER_DISPUTE_DUCHY_WAR_NAME"
	war_name_base = "BORDER_DISPUTE_WAR_NAME_BASE"
	cb_name = "BORDER_DISPUTE_DUCHY_CB_NAME"
	interface_priority = 498
	use_de_jure_wargoal_only = yes
	attacker_wargoal_percentage = 0.8
	max_ai_diplo_distance_to_title = 500
}
