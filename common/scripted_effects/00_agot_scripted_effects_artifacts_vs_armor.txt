agot_create_artifact_valyrian_steel_armor_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = valyrian_steel_armor_name
		description = valyrian_steel_armor_description
		type = armor_plate
		visuals = valyrian_steel_armor_visuals
		wealth = scope:wealth
		quality = scope:quality
		template = valyrian_steel_armor_template
		modifier = valyrian_steel_armor_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		save_scope_as = epic #for loc
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = valyrian_steel_armor_artifact value = yes } #this connects the artefact to the 3D model via the 01_clothes.txt file under gfx/portraits/portrait_modifiers/
		set_variable = { name = valyrian_steel value = yes }
		equip_artifact_to_owner_replace = yes
	}
}

agot_create_artifact_maelys_armour_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = maelys_armour_name
		description = maelys_armour_description
		type = armor_plate
		visuals = maelys_armour_visuals
		wealth = scope:wealth
		quality = scope:quality
		template = maelys_armour_template
		history = {
		}
		modifier = maelys_armour_modifier
		save_scope_as = newly_created_artifact
		decaying = yes
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = maelys_armour_artifact value = yes } #this connects the artefact to the 3D model via the 01_clothes.txt file under gfx/portraits/portrait_modifiers/
		equip_artifact_to_owner_replace = yes
	}

	scope:owner.house = { #makes sense for House Targaryen to have a House claim on the armour that literally has their sigil on it
		add_house_artifact_claim = scope:newly_created_artifact
	}
}

agot_create_artifact_rhaegars_armour_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = rhaegars_armour_name
		description = rhaegars_armour_description
		type = armor_plate
		visuals = rhaegars_armour_visuals
		wealth = scope:wealth
		quality = scope:quality
		template = rhaegars_armour_template
		history = {
			type = created
			date = 8278.1.1
			recipient = character:Targaryen_3 #Rhaegar Targaryen (son of Aerys II)
			location = province:4415
		}
		modifier = rhaegars_armour_modifier
		save_scope_as = newly_created_artifact
		decaying = yes
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = rhaegararmour value = yes } #this connects the artefact to the 3D model via the 01_clothes.txt file under gfx/portraits/portrait_modifiers/
		equip_artifact_to_owner_replace = yes
	}

	scope:owner.house = { #makes sense for House Targaryen to have a House claim on the armour that literally has their sigil on it
		add_house_artifact_claim = scope:newly_created_artifact
	}
}

agot_create_artifact_roberts_armour_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_masterwork = yes

	# Create the artifact
	create_artifact = {
		name = roberts_armour_name
		description = roberts_armour_description
		type = armor_plate
		visuals = roberts_armour_visuals
		wealth = scope:wealth
		quality = scope:quality
		template = roberts_armour_template
		history = {
			type = created
			date = 8278.1.1
			recipient = character:Baratheon_2 #Robert Baratheon (son of Steffon)
			location = province:4439
		}
		modifier = roberts_armour_modifier
		save_scope_as = newly_created_artifact
		decaying = yes
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = robertarmour value = yes } #this connects the artefact to the 3D model via the 01_clothes.txt file under gfx/portraits/portrait_modifiers/
		equip_artifact_to_owner_replace = yes
	}

	scope:owner.house = {
		add_house_artifact_claim = scope:newly_created_artifact
	}
}

agot_create_artifact_kingsguard_armour_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = kingsguard_armour_name
		description = kingsguard_armour_description
		type = armor_plate
		visuals = kingsguard_armour_visuals
		wealth = scope:wealth
		quality = scope:quality
		template = kingsguard_armour_template
		modifier = kingsguard_armour_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = kingsguard_armour value = yes } #this connects the artefact to the 3D model via the 01_clothes.txt file under gfx/portraits/portrait_modifiers/
		equip_artifact_to_owner_replace = yes
	}
}

agot_create_artifact_martell_wall_shield_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_masterwork = yes

	create_artifact = {
		name = artifact_martell_wall_shield_name
		description = artifact_martell_wall_shield_description
		visuals = martell_wall_shield
		type = wall_shield
		modifier = artifact_prowess_3_modifier
		save_scope_as = newly_created_artifact
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
	}
}

agot_create_artifact_skinchangers_second_pelt_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = skinchangers_second_pelt_name
		description = skinchangers_second_pelt_description
		type = armor_mail
		visuals = skinchangers_second_pelt_visuals
		wealth = scope:wealth
		quality = scope:quality
		template = skinchangers_second_pelt_template
		modifier = skinchangers_second_pelt_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact = {
		set_variable = { 
			name = skinchangers_second_pelt 
			value = yes 
		}
		save_scope_value_as = {
			name = skinchangers_second_pelt
			value = yes
		}
	}
}