#GLORY GAIN FOR CORONATIONS
accolades_activity_complete_coronation_glory_effect = {
	# Much glory if you did a magnificent wedding
	if = {
		limit = {
			scope:root_scope = {
				is_acclaimed = yes
				#this acclaimed knight's liege is not present
				exists = liege
				NOT = {
					scope:root_scope.location = liege.location
				}
			}
			scope:activity = {
				# perfect options
				has_activity_option = {
					category = wedding_option_entertainment
					option = wedding_entertainment_good
				}
				has_activity_option = {
					category = wedding_option_food
					option = wedding_food_good
				}
				has_activity_option = {
					category = coronation_option_pomp
					option = coronation_pomp_grandiose
				}
			}
		}
		scope:activity = {
			add_activity_log_entry = {
				key = knight_accolade_glory_reward
				tags = { completed }
				score = 10
				# this line below adds the entry to the Effects section of the conclusion UI
				show_in_conclusion = yes
				character = scope:root_scope

				#more glory gain if primary participant
				if = {
					limit = {
						scope:root_scope = {
							this = scope:host
						}
					}
					scope:root_scope = {
						accolade = { add_glory = massive_glory_gain }
					}
				}
				else = {
					scope:root_scope = {
						accolade = { add_glory = minor_glory_gain }
					}
				}
			}
		}
	}
	# Much glory if you did a magnificent wedding
	else_if = {
		limit = {
			scope:activity = {
				any_attending_character = {
					is_knight_of = scope:root_scope
					is_acclaimed = yes
				}
			}
			scope:activity = {
				# perfect options
				has_activity_option = {
					category = wedding_option_entertainment
					option = wedding_entertainment_good
				}
				has_activity_option = {
					category = wedding_option_food
					option = wedding_food_good
				}
				has_activity_option = {
					category = coronation_option_pomp
					option = coronation_pomp_grandiose
				}
			}
		}
		scope:activity = {
			add_activity_log_entry = {
				key = liege_accolades_glory_reward
				tags = { completed }
				score = 10
				# this line below adds the entry to the Effects section of the conclusion UI
				show_in_conclusion = yes
				character = scope:root_scope

				#more glory gain if you are primary participant
				if = {
					limit = {
						scope:root_scope = scope:host
					}
					every_attending_character = {
						limit = {
							is_knight_of = scope:root_scope
							is_acclaimed = yes
						}
						if = {
							limit = {
								this = scope:host
							}
							accolade = { add_glory = massive_glory_gain }
						}
						else = {
							accolade = { add_glory = medium_glory_gain }
						}
					}
				}
				# more glory for a primary participant knight
				else = {
					every_attending_character = {
						limit = {
							is_knight_of = scope:root_scope
							is_acclaimed = yes
						}
						if = {
							limit = {
								this = scope:host
							}
							accolade = { add_glory = massive_glory_gain }
						}
						else = {
							accolade = { add_glory = minor_glory_gain }
						}
					}
				}
			}
		}
	}
	# Decent glory if acclaimed knights went to a nice wedding without liege
	else_if = {
		limit = {
			scope:root_scope = {
				is_acclaimed = yes
				#this acclaimed knight's liege is not present
				exists = liege
				NOT = {
					scope:root_scope.location = liege.location
				}
			}
			scope:activity = {
				OR = {
					AND = {
						# at least two tier threes
						has_activity_option = {
							category = wedding_option_entertainment
							option = wedding_entertainment_good
						}
						has_activity_option = {
							category = wedding_option_food
							option = wedding_food_good
						}
					}
					AND = {
						has_activity_option = {
							category = wedding_option_entertainment
							option = wedding_entertainment_good
						}
						has_activity_option = {
							category = coronation_option_pomp
							option = coronation_pomp_grandiose
						}
					}
					AND = {
						has_activity_option = {
							category = coronation_option_pomp
							option = coronation_pomp_grandiose
						}
						has_activity_option = {
							category = wedding_option_food
							option = wedding_food_good
						}
					}
					# a tier 3 and two tier 2s
					AND = {
						has_activity_option = {
							category = wedding_option_entertainment
							option = wedding_entertainment_good
						}
						has_activity_option = {
							category = wedding_option_food
							option = wedding_food_normal
						}
						has_activity_option = {
							category = coronation_option_pomp
							option = coronation_pomp_impressive
						}
					}
					AND = {
						has_activity_option = {
							category = wedding_option_food
							option = wedding_food_good
						}
						has_activity_option = {
							category = wedding_option_entertainment
							option = wedding_entertainment_normal
						}
						has_activity_option = {
							category = coronation_option_pomp
							option = coronation_pomp_impressive
						}
					}
					AND = {
						has_activity_option = {
							category = coronation_option_pomp
							option = coronation_pomp_grandiose
						}
						has_activity_option = {
							category = wedding_option_entertainment
							option = wedding_entertainment_normal
						}
						has_activity_option = {
							category = wedding_option_food
							option = wedding_food_normal
						}
					}
				}
			}
		}
		scope:activity = {
			add_activity_log_entry = {
				key = knight_accolade_glory_reward
				tags = { completed }
				score = 10
				# this line below adds the entry to the Effects section of the conclusion UI
				show_in_conclusion = yes
				character = scope:root_scope

				#more glory gain if primary participant
				if = {
					limit = {
						scope:root_scope = {
							scope:root_scope = scope:host
						}
					}
					scope:root_scope = {
						accolade = { add_glory = major_glory_gain }
					}
				}
				else = {
					scope:root_scope = {
						accolade = { add_glory = minimal_glory_gain }
					}
				}
			}
		}
	}
	# Decent glory if you went to a nice wedding with acclaimed knights
	else_if = {
		limit = {
			scope:activity = {
				any_attending_character = {
					is_knight_of = scope:root_scope
					is_acclaimed = yes
				}
			}
			scope:activity = {
				OR = {
					AND = {
						# at least two tier threes
						has_activity_option = {
							category = wedding_option_entertainment
							option = wedding_entertainment_good
						}
						has_activity_option = {
							category = wedding_option_food
							option = wedding_food_good
						}
					}
					AND = {
						has_activity_option = {
							category = wedding_option_entertainment
							option = wedding_entertainment_good
						}
						has_activity_option = {
							category = coronation_option_pomp
							option = coronation_pomp_grandiose
						}
					}
					AND = {
						has_activity_option = {
							category = coronation_option_pomp
							option = coronation_pomp_grandiose
						}
						has_activity_option = {
							category = wedding_option_food
							option = wedding_food_good
						}
					}
					# a tier 3 and two tier 2s
					AND = {
						has_activity_option = {
							category = wedding_option_entertainment
							option = wedding_entertainment_good
						}
						has_activity_option = {
							category = wedding_option_food
							option = wedding_food_normal
						}
						has_activity_option = {
							category = coronation_option_pomp
							option = coronation_pomp_impressive
						}
					}
					AND = {
						has_activity_option = {
							category = wedding_option_food
							option = wedding_food_good
						}
						has_activity_option = {
							category = wedding_option_entertainment
							option = wedding_entertainment_normal
						}
						has_activity_option = {
							category = coronation_option_pomp
							option = coronation_pomp_impressive
						}
					}
					AND = {
						has_activity_option = {
							category = coronation_option_pomp
							option = coronation_pomp_grandiose
						}
						has_activity_option = {
							category = wedding_option_entertainment
							option = wedding_entertainment_normal
						}
						has_activity_option = {
							category = wedding_option_food
							option = wedding_food_normal
						}
					}
				}
			}
		}
		scope:activity = {
			add_activity_log_entry = {
				key = liege_accolades_glory_reward
				tags = { completed }
				score = 10
				# this line below adds the entry to the Effects section of the conclusion UI
				show_in_conclusion = yes
				character = scope:root_scope

				#more glory gain if you are primary participant
				if = {
					limit = {
						scope:root_scope = scope:host
					}
					every_attending_character = {
						limit = {
							is_knight_of = scope:root_scope
							is_acclaimed = yes
						}
						if = {
							limit = {
								this = scope:host
							}
							accolade = { add_glory = major_glory_gain }
						}
						else = {
							accolade = { add_glory = minor_glory_gain }
						}
					}
				}
				# more glory for a primary participant knight
				else = {
					every_attending_character = {
						limit = {
							is_knight_of = scope:root_scope
							is_acclaimed = yes
						}
						if = {
							limit = {
								this = scope:host
							}
							accolade = { add_glory = major_glory_gain }
						}
						else = {
							accolade = { add_glory = minimal_glory_gain }
						}
					}
				}
			}
		}
	}
	# An ok amount for a sort of grand wedding, knights without attending liege
	else_if = {
		limit = {
			scope:root_scope = {
				is_acclaimed = yes
				#this acclaimed knight's liege is not present
				exists = liege
				NOT = {
					scope:root_scope.location = liege.location
				}
			}
			scope:activity = {
				# 1 tier 3 option
				OR = {
					has_activity_option = {
						category = wedding_option_entertainment
						option = wedding_entertainment_good
					}
					has_activity_option = {
						category = wedding_option_food
						option = wedding_food_good
					}
					has_activity_option = {
						category = coronation_option_pomp
						option = coronation_pomp_grandiose
					}
					# 2 tier 2 options
					AND = {
						has_activity_option = {
							category = wedding_option_entertainment
							option = wedding_entertainment_normal
						}
						has_activity_option = {
							category = wedding_option_food
							option = wedding_food_normal
						}
					}
					AND = {
						has_activity_option = {
							category = wedding_option_entertainment
							option = wedding_entertainment_normal
						}
						has_activity_option = {
							category = coronation_option_pomp
							option = coronation_pomp_impressive
						}
					}
					AND = {
						has_activity_option = {
							category = coronation_option_pomp
							option = coronation_pomp_impressive
						}
						has_activity_option = {
							category = wedding_option_food
							option = wedding_food_normal
						}
					}
				}
			}
		}
		scope:activity = {
			add_activity_log_entry = {
				key = knight_accolade_glory_reward
				tags = { completed }
				score = 10
				# this line below adds the entry to the Effects section of the conclusion UI
				show_in_conclusion = yes
				character = scope:root_scope

				#more glory gain if primary participant
				if = {
					limit = {
						scope:root_scope = {
							this = scope:host
						}
					}
					scope:root_scope = {
						accolade = { add_glory = medium_glory_gain }
					}
				}
				else = {
					scope:root_scope = {
						accolade = { add_glory = sub_minimal_glory_gain }
					}
				}
			}
		}
	}
	# An ok amount for a sort of grand wedding, liege with attending knights
	else_if = {
		limit = {
			scope:activity = {
				any_attending_character = {
					is_knight_of = scope:root_scope
					is_acclaimed = yes
				}
			}
			scope:activity = {
				#this
				OR = {
					has_activity_option = {
						category = wedding_option_entertainment
						option = wedding_entertainment_good
					}
					has_activity_option = {
						category = wedding_option_food
						option = wedding_food_good
					}
					has_activity_option = {
						category = coronation_option_pomp
						option = coronation_pomp_grandiose
					}
					# 2 tier 2 options
					AND = {
						has_activity_option = {
							category = wedding_option_entertainment
							option = wedding_entertainment_normal
						}
						has_activity_option = {
							category = wedding_option_food
							option = wedding_food_normal
						}
					}
					AND = {
						has_activity_option = {
							category = wedding_option_entertainment
							option = wedding_entertainment_normal
						}
						has_activity_option = {
							category = coronation_option_pomp
							option = coronation_pomp_impressive
						}
					}
					AND = {
						has_activity_option = {
							category = coronation_option_pomp
							option = coronation_pomp_impressive
						}
						has_activity_option = {
							category = wedding_option_food
							option = wedding_food_normal
						}
					}
				}
			}
		}
		scope:activity = {
			add_activity_log_entry = {
				key = liege_accolades_glory_reward
				tags = { completed }
				score = 10
				# this line below adds the entry to the Effects section of the conclusion UI
				show_in_conclusion = yes
				character = scope:root_scope

				#more glory gain if primary participant
				if = {
					limit = {
						scope:root_scope = scope:host
					}
					every_attending_character = {
						limit = {
							is_knight_of = scope:root_scope
							is_acclaimed = yes
						}
						if = {
							limit = {
								this = scope:host
							}
							accolade = { add_glory = medium_glory_gain }
						}
						else = {
							accolade = { add_glory = minimal_glory_gain }
						}
					}
				}
				# more glory for a primary participant knight
				else = {
					every_attending_character = {
						limit = {
							is_knight_of = scope:root_scope
							is_acclaimed = yes
						}
						if = {
							limit = {
								this = scope:host
							}
							accolade = { add_glory = medium_glory_gain }
						}
						else = {
							accolade = { add_glory = sub_minimal_glory_gain }
						}
					}
				}
			}
		}
	}
	# Otherwise, attending knights without liege only get glory as a spouse
	else_if = {
		limit = {
			scope:root_scope = {
				this = scope:host
				is_acclaimed = yes
				#this acclaimed knight's liege is not present
				exists = liege
				NOT = {
					scope:root_scope.location = liege.location
				}
			}
		}
		scope:activity = {
			add_activity_log_entry = {
				key = knight_accolade_glory_reward
				tags = { completed }
				score = 10
				# this line below adds the entry to the Effects section of the conclusion UI
				show_in_conclusion = yes
				character = scope:root_scope

				scope:root_scope = {
					accolade = { add_glory = minor_glory_gain }
				}
			}
		}
	}
	# attending knights of liege get scraps
	else_if = {
		limit = {
			scope:activity = {
				any_attending_character = {
					is_knight_of = scope:root_scope
					is_acclaimed = yes
				}
			}
		}
		scope:activity = {
			add_activity_log_entry = {
				key = liege_accolades_glory_reward
				tags = { completed }
				score = 10
				# this line below adds the entry to the Effects section of the conclusion UI
				show_in_conclusion = yes
				character = scope:root_scope

				#more glory gain if primary participant
				if = {
					limit = {
						scope:root_scope = scope:host
					}
					every_attending_character = {
						limit = {
							is_knight_of = scope:root_scope
							is_acclaimed = yes
						}
						if = {
							limit = {
								this = scope:host
							}
							accolade = { add_glory = minor_glory_gain }
						}
						else = {
							accolade = { add_glory = sub_minimal_glory_gain }
						}
					}
				}
				# more glory for a primary participant knight
				else = {
					every_attending_character = {
						limit = {
							is_knight_of = scope:root_scope
							is_acclaimed = yes
							this = scope:host
						}
						accolade = { add_glory = minor_glory_gain }
					}
				}
			}
		}
	}
}