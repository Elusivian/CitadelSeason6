agot_has_historical_claim_effect = {
	$TITLE$ = {
		every_past_holder = {
			limit = {
				has_dynasty = yes
				house = {
					any_house_member = { is_alive = yes }
				}
			}
			add_to_temporary_list = past_holders
		}
	}
	ordered_in_list = {
		list = past_holders
		order_by = {
			value = 0
			if = {
				limit = {
					save_temporary_scope_as = this_holder
					any_in_list = {
						list = past_holders
						dynasty = scope:this_holder.dynasty
						count >= 5
					}
				}
				add = 100
			}
			if = {
				limit = {
					save_temporary_scope_as = this_holder
					any_in_list = {
						list = past_holders
						dynasty = scope:this_holder.dynasty
						count >= 10
					}
				}
				add = 100
			}
			if = {
				limit = {
					save_temporary_scope_as = this_holder
					any_in_list = {
						list = past_holders
						dynasty = scope:this_holder.dynasty
						count >= 15
					}
				}
				add = 100
			}
			if = {
				limit = {
					save_temporary_scope_as = this_holder
					any_in_list = {
						list = past_holders
						dynasty = scope:this_holder.dynasty
						count >= 20
					}
				}
				add = 100
			}
			if = {
				limit = {
					save_temporary_scope_as = this_holder
					any_in_list = {
						list = past_holders
						dynasty = scope:this_holder.dynasty
						count >= 25
					}
				}
				add = 100
			}
			if = {
				limit = {
					save_temporary_scope_as = this_holder
					any_in_list = {
						list = past_holders
						dynasty = scope:this_holder.dynasty
						count >= 30
					}
				}
				add = 100
			}
		}
		save_scope_as = past_holder
	}
	scope:past_holder.dynasty = { save_scope_as = dynasty }
	# if = { # Stark
	# 	limit = {
	# 		$TITLE$ = {
	# 			OR = {
	# 				this = title:e_the_north
	# 				this = title:k_the_north
	# 				this = title:d_winterfell
	# 				this = title:c_winterfell
	# 			}
	# 		}
	# 	}
	# 	dynasty:dynn_Stark = {save_scope_as = dynasty }
	# }
	# if = { #Baratheon
	# 	limit = {
	# 		$TITLE$ = {
	# 			OR = {
	# 				this = title:e_the_stormlands
	# 				this = title:k_the_stormlands
	# 				this = title:d_shipbreaker_bay
	# 				this = title:c_storms_end
	# 			}
	# 		}
	# 	}
	# 	dynasty:dynn_Baratheon = {save_scope_as = dynasty }
	# }
	# if = { #Lannister
	# 	limit = {
	# 		$TITLE$ = {
	# 			OR = {
	# 				this = title:e_the_westerlands
	# 				this = title:k_the_westerlands
	# 				this = title:d_casterly_rock
	# 				this = title:c_casterly_rock
	# 			}
	# 		}
	# 	}
	# 	dynasty:dynn_Lannister = {save_scope_as = dynasty }
	# }
	# if = { #Arryn
	# 	limit = {
	# 		$TITLE$ = {
	# 			OR = {
	# 				this = title:e_the_vale
	# 				this = title:k_the_vale
	# 				this = title:d_the_giants_lance
	# 				this = title:c_the_eyrie
	# 			}
	# 		}
	# 	}
	# 	dynasty:dynn_Arryn = {save_scope_as = dynasty }
	# }

	# if = { #Greyjoy
	# 	limit = {
	# 		$TITLE$ = {
	# 			OR = {
	# 				this = title:e_the_iron_islands
	# 				this = title:k_the_iron_islands
	# 				this = title:d_pyke
	# 				this = title:c_pyke
	# 			}
	# 		}
	# 	}
	# 	dynasty:dynn_Greyjoy = {save_scope_as = dynasty }
	# }
	# if = { #Martell
	# 	limit = {
	# 		$TITLE$ = {
	# 			OR = {
	# 				this = title:e_dorne
	# 				this = title:k_dorne
	# 				this = title:d_sunspear
	# 				this = title:c_sunspear
	# 			}
	# 		}
	# 	}
	# 	dynasty:dynn_Martell = {save_scope_as = dynasty }
	# }
	# if = { #Tully
	# 	limit = {
	# 		$TITLE$ = {
	# 			OR = {
	# 				this = title:k_the_riverlands
	# 				this = title:d_riverrun
	# 				this = title:c_riverrun
	# 			}
	# 		}
	# 	}
	# 	dynasty:dynn_Tyrell = {save_scope_as = dynasty }
	# }
	# if = { #Tyrell
	# 	limit = {
	# 		$TITLE$ = {
	# 			OR = {
	# 				this = title:k_the_reach
	# 				this = title:d_highgarden
	# 				this = title:c_highgarden
	# 			}
	# 		}
	# 	}
	# 	dynasty:dynn_Tyrell = {save_scope_as = dynasty }
	# }
	# if = { #Roxton
	# 	limit = {
	# 		$TITLE$ = {
	# 			OR = {
	# 				this = title:d_oldhills
	# 				this = title:c_the_ring
	# 			}
	# 		}
	# 	}
	# 	dynasty:dynn_Roxton = {save_scope_as = dynasty }
	# }
}

agot_set_kingdom_tier_realm_paramountcy = {
	holder ?= {
		every_held_title = {
			limit  = { tier = holder.primary_title.tier }
			set_variable = { name = is_lord_paramount value = yes }
		}
	}
}

agot_set_empire_tier_realm_paramountcy = {
	holder ?= {
		every_held_title = {
			limit  = { tier = holder.primary_title.tier }
			set_variable = { name = is_paramountcy_realm value = yes }
		}
	}
}

agot_get_scenario_story_cycle_scope = {
	random_ruler = {
		limit = { any_owned_story = { story_type = $SCENARIO_STORY$ } }
		random_owned_story = {
			limit = { story_type = $SCENARIO_STORY$ }
			save_scope_as = $SCOPE_NAME$
		}
	}
}

#Ambushes

agot_create_crannogman_ambush = {
	create_character = {
		name = crannogman_leader_name
		gender = male
		template = crannogman_template
		save_scope_as = crannogman
		location = scope:target_location
		culture = culture:crannogman
		faith = faith:old_gods_south
	}
	# Set up title so that war can be declared
	create_dynamic_title = {
		tier = duchy
		name = crannogman_duchy_title
	}
	create_title_and_vassal_change = {
		type = created
		save_scope_as = change
		add_claim_on_loss = no
	}
	scope:new_title = {
		set_capital_county = $TARGET$.capital_county
		set_landless_title = yes
		set_destroy_on_succession = yes
		set_delete_on_destroy = yes
		set_no_automatic_claims = yes
		set_definitive_form = yes
		set_can_be_named_after_dynasty = no
		change_title_holder = {
			holder = scope:crannogman
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change
}
agot_spawn_crannogman_army = { # TARGET
	scope:crannogman = {
		hidden_effect = { add_gold = 100 }
		start_war = {
			cb = crannogman_ambush_cb
			target = $TARGET$
			target_title = $TARGET$.primary_title
		}
		if = {
			limit = {exists = scope:target_location }
			spawn_army = {
				name = crannogman_army_name
				levies = 0
				men_at_arms = {
					type = frog_spears
					stacks = 6
				}
				# men_at_arms = {
				# 	type = regiment_northman_crannog_archers
				# 	stacks = 3
				# }
				location = scope:target_location
			}
		}
		else = {
			spawn_army = {
				name = crannogman_army_name
				levies = 0
				men_at_arms = {
					type = frog_spears
					stacks = 6
				}
				# men_at_arms = {
				# 	type = regiment_northman_crannog_archers
				# 	stacks = 3
				# }
				location = $TARGET$.location
			}
		}
	}
}

agot_prowess_rank_up_effect = {
	if = {
		limit = {
			is_human = yes
		}
		if = {
			limit = {
				NOT = { has_trait = education_martial_prowess }
			}
			add_trait = education_martial_prowess_1
		}
		else_if = {
			limit = {
				NOR = {
					has_trait = education_martial_prowess_4
					has_trait = education_martial_prowess_5
				}
			}
			change_trait_rank = {
				trait = education_martial_prowess
				rank = 1
			}
		}
	}
}

#paramours
agot_become_paramour_effect = {
	scope:noble = {
		create_character_memory = {
			type = agot_got_paramour
			participants = {
				paramour = scope:paramour
			}
		}
	}
	scope:paramour = {
		add_trait = paramour
		set_relation_paramour = scope:noble
		create_character_memory = {
			type = agot_became_paramour
			participants = {
				paramour = scope:noble
			}
		}
		if = {
			limit = {
				scope:noble = { is_landed = yes }
				scope:paramour = { is_landed = no }
				NOR = {
					AND = {
						exists = scope:paramour.host
						scope:noble = scope:paramour.host
					}
					AND = {
						exists = scope:paramour.court_owner
						scope:noble = scope:paramour.court_owner
					}
				}
			}
			scope:paramour = {
				every_traveling_family_member = {
					scope:noble = { add_courtier ?= prev }
					hidden_effect = {
						return_to_court = yes
					}
				}
			}
		}
		else_if = {
			limit = {
				scope:noble = { is_landed = no }
				scope:paramour = { is_landed = no }
				NOR = {
					AND = {
						exists = scope:paramour.host
						scope:noble = scope:paramour.host
					}
					AND = {
						exists = scope:paramour.court_owner
						scope:noble = scope:paramour.court_owner
					}
				}
			}
			scope:paramour = {
				every_traveling_family_member = {
					scope:noble.court_owner = { add_courtier ?= prev }
					hidden_effect = {
						return_to_court = yes
					}
				}
			}
		}
	}
	if = {
		limit = {
			scope:noble = {
				any_secret = {
					secret_type = secret_lover
					secret_target = scope:paramour
				}
			}
		}
		scope:noble = {
			random_secret = {
				limit = {
					secret_type = secret_lover
					secret_target = scope:paramour
				}
				remove_secret = yes
			}
		}
	}
	if = {
		limit = {
			scope:paramour = {
				any_secret = {
					secret_type = secret_lover
					secret_target = scope:noble
				}
			}
		}
		scope:paramour = {
			random_secret = {
				limit = {
					secret_type = secret_lover
					secret_target = scope:noble
				}
				remove_secret = yes
			}
		}
	}
}

#Free captive for CB
agot_free_captive_effect = {
	save_scope_as = captive
	if = {
		limit = {
			is_married = yes
		}
		every_spouse = {
			divorce = prev
		}
	}
	if = {
		limit = {
			exists = betrothed
		}
		if = {
			limit = {
				has_been_promised_grand_wedding = yes
			}
			break_grand_wedding_betrothal_effect = yes
		}
		else = {
			break_betrothal = betrothed
		}
	}
	if = {
		limit = {
			is_concubine = yes
		}
		this.concubinist = {
			remove_concubine = prev
		}
	}

	scope:attacker = {
		remove_list_variable = {
			name = marked_as_captive
			target = scope:captive
		}
	}
	scope:captive = {
		remove_list_variable = {
			name = marked_as_captive_by
			target = scope:attacker
		}
	}
	set_employer = scope:attacker
}

agot_drowned_effect = {
	add_piety_level = 1
	#num_virtuous_traits > 1
	random_list = {
		5 = { #Blub blub blub
			death = {
				death_reason = death_drowned
			}
		}
		85 = { #Become Drowned Man
			add_trait = drowned_man

			random = {
				chance = 60
				if = {
					limit = {
						number_of_personality_traits < personality_trait_limit
					}
					random_list = {
						20 = { add_trait = zealous }
						20 = { add_trait = chaste }
						20 = { add_trait = vengeful }
						20 = { add_trait = temperate }
						20 = { add_trait = brave }
					}
				}
			}
		}
		10 = { #Damphair maker
			add_trait = drowned_man
			add_piety_level = 1

			add_character_modifier = drowned_man_zealot_modifier

			random_list = {
				80 = {}
				15 = { give_nickname = nick_the_drowned }
				5 = { give_nickname = nick_damphair }
			}

			if = {
				limit = {
					number_of_personality_traits < personality_trait_limit
				}
				random_list = {
					20 = { add_trait = zealous }
					20 = { add_trait = chaste }
					20 = { add_trait = vengeful }
					20 = { add_trait = temperate }
					20 = { add_trait = diligent }
				}
			}

			if = {
				limit = {
					has_trait = cynical
				}
				remove_trait = cynical
				add_trait = zealous
			}
			if = {
				limit = {
					has_trait = lazy
				}
				remove_trait = lazy
				add_trait = diligent
			}
			if = {
				limit = {
					has_trait = gluttonous
				}
				remove_trait = gluttonous
				add_trait = temperate
			}
			if = {
				limit = {
					has_trait = craven
				}
				remove_trait = craven
				add_trait = brave
			}
			if = {
				limit = {
					has_trait = forgiving
				}
				remove_trait = forgiving
				add_trait = vengeful
			}
			if = {
				limit = {
					has_trait = lustful
				}
				remove_trait = lustful
				add_trait = chaste
			}

		}
	}
}

agot_end_wildfire = {
	title:b_hookmarket.title_province = {
		if = {
			limit = {
				has_building = special_kings_landing_hoodmarket_destroyed
			}
			remove_building = special_kings_landing_hoodmarket_destroyed
		}
		if = {
			limit = {
				NOT = {
					has_building = special_kings_landing_hoodmarket
				}
			}
			add_building = special_kings_landing_hoodmarket
		}

	}
	title:b_hookmarket.title_province = {
		remove_building = special_kings_landing_hoodmarket
	}
}

agot_depose_effect = {
	if = {
		limit = {
			primary_title = title:k_the_wall
		}
		save_scope_as = depose
		agot_nw_elect_lc = yes #dies in event, can't put here because of race conditions
	}
	else_if = {
		limit = {
			government_has_flag = government_is_nw
			exists = title:k_the_wall.holder
			title:k_the_wall.holder = { has_trait = nightswatch }
		}
		trigger_event = agot_nights_watch.0030
	}
	else = {
		depose = yes
	}
}

agot_cancel_tourneys_effect = {
	if = {
		limit = {
			scope:tourney_host = {
				has_character_flag = holding_epic_tournament
			}
		}
		every_in_list = {
			variable = tourney_participants
			limit = {
				is_alive = yes
			}
			trigger_event = {
				id = agot_tourney.55   #cancel tourney for remaining participants
			}
		}
		trigger_event = {
			id = agot_tourney.54   #cancel tourney for host
			days = 1
		}
	}
	if = {
		limit = {
			scope:tourney_host = {
				any_vassal_or_below = { has_character_flag = holding_epic_tournament }
			}
		}
		scope:tourney_host = {
			every_vassal_or_below = {
				limit = { has_character_flag = holding_epic_tournament }
				every_in_list = {
					variable = tourney_participants
					limit = {
						is_alive = yes
					}
					trigger_event = {
						id = agot_tourney.55   #cancel tourney for remaining participants
					}
				}
				trigger_event = {
					id = agot_tourney.54   #cancel tourney for host
					days = 1
				}
			}
		}
	}
	if = {
		limit = {
			scope:tourney_host = {
				has_character_flag = holding_epic_melee
			}
		}
		scope:tourney_host = {
			every_in_list = {
				variable = melee_participants
				limit = {
					is_alive = yes
				}
				trigger_event = {
					id = agot_melee.55   #cancel melee for remaining participants
				}
			}
			trigger_event = {
				id = agot_melee.54   #cancel melee for host
				days = 1
			}
		}
	}
	if = {
		limit = {
			scope:tourney_host = {
				any_vassal_or_below = { has_character_flag = holding_epic_melee }
			}
		}
		scope:tourney_host = {
			every_vassal_or_below = {
				limit = { has_character_flag = holding_epic_melee }
				every_in_list = {
					variable = melee_participants
					limit = {
						is_alive = yes
					}
					trigger_event = {
						id = agot_melee.55   #cancel melee for remaining participants
					}
				}
				trigger_event = {
					id = agot_melee.54   #cancel melee for host
					days = 1
				}
			}
		}
	}
}

agot_dragon_dream_scheme_discovery_effect = {
	if = {
		limit =  {
			scope:target = {
				OR = {
					has_character_flag = dragon_dreams
					has_trait = dragon_dreams
				}
				NOT = { has_character_flag = dreamt }
			}
		}
		scope:target = { save_scope_as = dragon_dreamer }
	}
	else = {
		scope:target = {
			random_close_or_extended_family_member = {
				limit = {
					age > 5
					OR = {
						has_character_flag = dragon_dreams
						has_trait = dragon_dreams
					}
					NOT = { this = scope:owner}
					NOT = { has_character_flag = dreamt }
					save_temporary_opinion_value_as = {
						name = opinion_of_target
						target = scope:target
					}
					scope:opinion_of_target >= 0
				}
				save_scope_as = dragon_dreamer
			}
		}
	}
	scope:dragon_dreamer = {
		add_character_flag = {
			flag = dreamt
			days = 730
		}
	}
	scope:target.host = { trigger_event = agot_dragon_dreams.0001 }
	save_temporary_scope_value_as = {
		name = discovery_event_happening
		value = yes
	}
}

agot_greensight_scheme_discovery_effect = {  # By: Steelers
	if = {
		limit =  {
			scope:target = {
				OR = {
					has_character_flag = greensight
					has_trait = greensight
				}
				NOT = { has_character_flag = foreseen }
			}
		}
		scope:target = { save_scope_as = greenseer }
	}
	else = {
		scope:target = {
			random_close_or_extended_family_member = {
				limit = {
					age > 5
					OR = {
						has_character_flag = greensight
						has_trait = greensight
					}
					NOT = { this = scope:owner}
					NOT = { has_character_flag = foreseen }
					save_temporary_opinion_value_as = {
						name = opinion_of_target
						target = scope:target
					}
					scope:opinion_of_target >= 0
				}
				save_scope_as = greenseer
			}
		}
	}
	scope:greenseer = {
		add_character_flag = {
			flag = foreseen
			days = 730
		}
	}
	scope:target.host = { trigger_event = agot_greensight.0001 }
	save_temporary_scope_value_as = {
		name = discovery_event_happening
		value = yes
	}
}

# Sets up preventing a harm event via foresight
agot_prevent_harm_event_with_foresight_effect = {
	if = {
		limit = {
			age >= 5
			has_trait = dragon_dreams
		}
		add_character_flag = root_is_dreamer
	}
	else_if = {
		limit = {
			age >= 5
			has_trait = greensight
		}
		add_character_flag = root_is_seer
	}
	else = {
		# Dragon dreams
		random_close_or_extended_family_member = {
			limit = {
				age >= 5
				has_trait = dragon_dreams
				scope_is_close_to_root_trigger = yes
				opinion = {
					target = root
					value >= neutral_opinion
				}
			}
			set_variable = {
				name = dreamer
				value = this
			}
		}
		random_relation = {
			type = friend
			limit = {
				age >= 5
				has_trait = dragon_dreams
				scope_is_close_to_root_trigger = yes
			}
			set_variable = {
				name = dreamer
				value = this
			}
		}
		random_relation = {
			type = best_friend
			limit = {
				age >= 5
				has_trait = dragon_dreams
				scope_is_close_to_root_trigger = yes
			}
			set_variable = {
				name = dreamer
				value = this
			}
		}
		random_relation = {
			type = lover
			limit = {
				age >= 5
				has_trait = dragon_dreams
				scope_is_close_to_root_trigger = yes
			}
			set_variable = {
				name = dreamer
				value = this
			}
		}
		random_relation = {
			type = soulmate
			limit = {
				age >= 5
				has_trait = dragon_dreams
				scope_is_close_to_root_trigger = yes
			}
			set_variable = {
				name = dreamer
				value = this
			}
		}
		random_relation = {
			type = paramour
			limit = {
				age >= 5
				has_trait = dragon_dreams
				scope_is_close_to_root_trigger = yes
			}
			set_variable = {
				name = dreamer
				value = this
			}
		}
		# Greensight
		random_close_or_extended_family_member = {
			limit = {
				age >= 5
				has_trait = greensight
				scope_is_close_to_root_trigger = yes
				opinion = {
					target = root
					value >= neutral_opinion
				}
			}
			set_variable = {
				name = seer
				value = this
			}
		}
		random_relation = {
			type = friend
			limit = {
				age >= 5
				has_trait = greensight
				scope_is_close_to_root_trigger = yes
			}
			set_variable = {
				name = seer
				value = this
			}
		}
		random_relation = {
			type = best_friend
			limit = {
				age >= 5
				has_trait = greensight
				scope_is_close_to_root_trigger = yes
			}
			set_variable = {
				name = seer
				value = this
			}
		}
		random_relation = {
			type = lover
			limit = {
				age >= 5
				has_trait = greensight
				scope_is_close_to_root_trigger = yes
			}
			set_variable = {
				name = seer
				value = this
			}
		}
		random_relation = {
			type = soulmate
			limit = {
				age >= 5
				has_trait = greensight
				scope_is_close_to_root_trigger = yes
			}
			set_variable = {
				name = seer
				value = this
			}
		}
		random_relation = {
			type = paramour
			limit = {
				age >= 5
				has_trait = greensight
				scope_is_close_to_root_trigger = yes
			}
			set_variable = {
				name = seer
				value = this
			}
		}
	}
}

agot_birth_dynasty_effect = {
	hidden_effect = {
		if = {
			limit = {
				exists = scope:child.dynasty
				scope:child.dynasty = { has_dynasty_perk = umber_legacy_1 }
				OR = { # The child must have a real parent of the Dynasty...
					scope:mother.dynasty = scope:child.dynasty
					scope:real_father.dynasty = scope:child.dynasty
				}
				NOR = {
					has_trait = physique_good
					has_trait = physique_bad
				}
			}
			random = {
				chance = blood_legacy_4_chance
				add_trait = physique_good_1
			}
		}
		if = {
			limit = {
				exists = scope:child.dynasty
				scope:child.dynasty = { has_dynasty_modifier = valyrian_heritage_dynasty_modifier }
				OR = { # The child must have a real parent of the Dynasty...
					scope:mother.dynasty = scope:child.dynasty
					scope:real_father.dynasty = scope:child.dynasty
				}
				NOR = {
					has_trait = beauty_good
					has_trait = beauty_bad
				}
			}
			random = {
				chance = blood_legacy_4_chance
				add_trait = beauty_good_1
			}
		}
		if = {
			limit = {
				exists = scope:child.dynasty
				scope:child.dynasty = { has_dynasty_perk = borrell_legacy_1 }
				OR = { # The child must have a real parent of the Dynasty...
					scope:mother.dynasty = scope:child.dynasty
					scope:real_father.dynasty = scope:child.dynasty
				}
			}
			add_trait = the_mark
		}
	}
}

agot_birth_magic_traits_effect = {
	hidden_effect = {
		random_list = {
			9949 = {
				#you win nothing sir, good day
			}
			50 = {
				trigger = {
					any_ancestor = {
						dynasty ?= dynasty:dynn_Targaryen
					}
				}
				modifier = {
					dynasty ?= dynasty:dynn_Targaryen
					factor = 5
				}
				modifier = {
					AND = {
						mother.dynasty ?= dynasty:dynn_Targaryen
						real_father.dynasty ?= dynasty:dynn_Targaryen
					}
					factor = 2
				}
				add_character_flag = dragon_dreams
			}
			1 = {
				trigger = {
					any_ancestor = {
						OR = {
							has_faith = faith:old_gods_south
							has_faith = faith:old_gods_btw
							has_faith = faith:old_gods_frozen_shore
							has_faith = faith:magnaric
							has_culture = culture:crannogman
						}
					}
				}
				modifier = {
					has_faith = faith:old_gods_south
					factor = 5
				}
				modifier = {
					has_faith = faith:old_gods_btw
					factor = 15
				}
				modifier = {
					has_faith = faith:old_gods_frozen_shore
					factor = 15
				}
				modifier = {
					has_faith = faith:magnaric
					factor = 15
				}
				modifier = {
					has_culture = culture:crannogman
					factor = 50
				}
				modifier = {
					AND = {
						mother ?= { has_religion = religion:old_gods_religion }
						real_father ?= { has_religion = religion:old_gods_religion }
					}
					factor = 2
				}
				modifier = {
					AND = {
						mother ?= { has_culture = culture:crannogman }
						real_father ?= { has_culture = culture:crannogman }
					}
					factor = 2
				}
				add_character_flag = greensight
			}
		}
	}
}

agot_redirect_to_appropiate_court_effect = {
	save_scope_as = courtier
	if = {
		limit = {
			has_trait = kingsguard
		}
		#Handled via event
	}
	else_if = {
		limit = {
			has_trait = agot_dummy_trait
		}
		# blank on purpose, dont do shit
	}
	else_if = {
		limit = {
			has_character_flag = being_redirected
		}
		#already moving
	}
	else_if = {
		limit = {
			has_trait = nightswatch
			is_ruler = no
		}
		random_ruler = {
			limit = {
				is_ai = yes
				is_landed = yes
				has_trait = nightswatch
			}
			scope:courtier = {
				add_character_flag = {
					flag = being_redirected
					days = 1
				}
			}
			add_courtier ?= scope:courtier
		}
	}
	else_if = {
		limit = {
			culture = { agot_is_wildling_culture = yes }
		}
		random_ruler = {
			limit = {
				is_ai = yes
				is_landed = yes
				culture = { agot_is_wildling_culture = yes }
				NOR = {
					has_title = title:b_ruins
					has_title = title:b_more_ruin
					has_title = title:b_the_most_ruin
					has_trait = nightswatch
				}
				# Prevent redirection to the realm they were banished from
				NAND = {
					scope:courtier = { has_variable = agot_banisher }
					target_is_same_character_or_above = scope:courtier.var:agot_banisher
				}
			}
			scope:courtier = {
				add_character_flag = {
					flag = being_redirected
					days = 1
				}
			}
			add_courtier ?= scope:courtier
		}
	}
	else = {
		random_ruler = {
			limit = {
				is_ai = yes
				is_landed = yes
				culture = { agot_is_wildling_culture = no }
				NOR = {
					has_title = title:b_ruins
					has_title = title:b_more_ruin
					has_title = title:b_the_most_ruin
					has_trait = nightswatch
				}
				# Prevent redirection to the realm they were banished from
				NAND = {
					scope:courtier = { has_variable = agot_banisher }
					target_is_same_character_or_above = scope:courtier.var:agot_banisher
				}
			}
			scope:courtier = {
				add_character_flag = {
					flag = being_redirected
					days = 1
				}
			}
			add_courtier ?= scope:courtier
		}
	}
}

agot_add_to_silent_sisters_effect = {
	#We need to save this scope for the loc
	save_scope_as = silent_sister_candidate
	consume_imprisonment_reasons = scope:silent_sister_candidate
	if = {
		limit = { has_character_flag = blocked_from_leaving }
		remove_character_flag = blocked_from_leaving
	}
	if = {
		limit = {
			has_trait = kingsguard
		}
		agot_remove_kingsguard_effect = { KINGSGUARD = scope:nightswatch_candidate }
	}
	if = {
		limit = { # Can't be both (probably - lore is scant here)
			has_trait = septon
		}
		remove_trait = septon
	}
	if = {
		limit = { is_imprisoned = yes }

		release_from_prison = yes
	}

	if = {
		limit = { religion = religion:faith_of_the_seven_religion }
		add_piety_level = 1
	}
	else = {
		set_character_faith = title:d_the_silent_sisterhood.holder.faith
	}
	if = {
		limit = { is_ruler = yes }
		depose = yes
	}
	if = {
		limit = {
			is_married = yes
		}
		every_spouse = {
			divorce = scope:silent_sister_candidate
		}
	}
	if = {
		limit = {
			exists = betrothed
		}
		if = {
			limit = {
				has_been_promised_grand_wedding = yes
			}
			break_grand_wedding_betrothal_effect = yes
		}
		else = {
			break_betrothal = betrothed
		}
	}
	if = {
		limit = {
			any_relation = {
				type = guardian
				exists = this
			}
		}
		every_relation = {
			type = guardian
			scope:silent_sister_candidate = {
				remove_relation_guardian = prev
			}
		}
	}
	if = {
		limit = {
			any_relation = {
				type = ward
				exists = this
			}
		}
		every_relation = {
			type = ward
			remove_relation_guardian = prev
		}
	}
	if = {
		limit = {
			is_concubine = yes
		}
		this.concubinist = {
			remove_concubine = scope:silent_sister_candidate
		}
	}
	if = {
		limit = {
			number_of_concubines > 0
		}
		every_concubine = {
			scope:silent_sister_candidate = {
				remove_concubine = prev
			}
		}
	}
	if = {
		limit = {
			has_trait = refusing_marriage
		}
		remove_trait = refusing_marriage
	}
	if = {
		limit = {
			has_character_modifier = training_for_kingsguard
		}
		remove_character_modifier = training_for_kingsguard
	}
	if = {
		limit = { NOT = { has_trait = silent_sister }}
		add_trait = silent_sister
	}
	if = {
		limit = { NOT = { employer = title:d_the_silent_sisterhood.holder } }
		set_employer = title:d_the_silent_sisterhood.holder
	}

	create_character_memory = {
		type = agot_joined_silent_sisters
		participants = {
			silent_mother = title:d_the_silent_sisterhood.holder
		}
	}
}

agot_send_to_silent_sisters_effect = {
	$SILENT_SISTER_CANDIDATE$ = {
		agot_add_to_silent_sisters_effect = yes
	}
	title:d_the_silent_sisterhood.holder = {
		if = {
			limit = { NOT = { this = $ACTOR$ } }
			add_opinion = {
				target = $ACTOR$
				modifier = grateful_opinion
				opinion = 10
			}
		}
	}
}

agot_remove_from_combat = {
	if = {
		limit = { is_knight = yes }
		set_knight_status = not
	}
	if = {
		limit = { exists = commanding_army }
		commanding_army = {
			remove_commander = yes
		}
	}
}

agot_ai_choose_qolab_effect = {
	random_list = {
		#beloved
		150 = {
			trigger = {
				OR = {
					any_spouse = { location = prev.location }
					betrothed ?= { location = prev.location }
					any_relation = {
						type = lover
						location = prev.location
					}
				}
			}
			if = {
				limit = {
					has_activity_intent = woo_attendee_intent
					exists = intent_target
					intent_target = { is_participant_in_activity = scope:activity }
				}
				intent_target = { save_scope_as = chosen_qolab }
			}
			else_if = {
				limit = {
					any_spouse = { location = prev.location }
				}
				random_spouse = { save_scope_as = chosen_qolab }
			}
			else_if = {
				limit = {
					betrothed ?= { location = prev.location }
				}
				betrothed ?= { save_scope_as = chosen_qolab }
			}
			else_if = {
				limit = {
					any_relation = {
						type = lover
						location = prev.location
					}
				}
				random_relation = {
					type = lover
					limit = { location = prev.location }
					save_scope_as = chosen_qolab
				}
			}
		}
		#family member
		25 = {
			trigger = {
				any_close_or_extended_family_member = {
					is_female = yes
					location = prev.location
				}
			}
			random_close_or_extended_family_member = {
				limit = {
					is_female = yes
					location = prev.location
				}
				save_scope_as = chosen_qolab
			}
		}
		#host
		25 = {
			trigger = {
				NOT = { this = scope:host }
				scope:host = {
					OR = {
						is_female = yes
						any_spouse = { location = prev.location }
						betrothed ?= { location = prev.location }
						any_child = {
							location = prev.location
							is_female = yes
							NOT = {
								any_spouse = {
									even_if_dead = yes
									exists = this
								}
							}
						}
						any_close_family_member = {
							location = prev.location
							is_married = no
							is_female = yes
							NOT = {
								any_spouse = {
									even_if_dead = yes
									exists = this
								}
							}
						}
					}
				}
			}

			scope:host = {
				if = {
					limit = {
						is_female = yes
					}
					save_scope_as = chosen_qolab
				}
				else_if = {
					limit = {
						any_spouse = { location = root.location }
					}
					random_spouse = { save_scope_as = chosen_qolab }
				}
				else_if = {
					limit = {
						betrothed ?= { location = root.location }
					}
					betrothed ?= { save_scope_as = chosen_qolab }
				}
				else_if = {
					limit = {
						any_child = {
							location = prev.location
							is_female = yes
							NOT = {
								any_spouse = {
									even_if_dead = yes
									exists = this
								}
							}
						}
					}
					random_child = {
						limit = {
							location = prev.location
							is_female = yes
							NOT = {
								any_spouse = {
									even_if_dead = yes
									exists = this
								}
							}
						}
						save_scope_as = chosen_qolab
					}
				}
				else_if = {
					limit = {
						any_close_family_member = {
							location = prev.location
							is_female = yes
							NOT = {
								any_spouse = {
									even_if_dead = yes
									exists = this
								}
							}
						}
					}
					random_close_family_member = {
						limit = {
							location = prev.location
							is_female = yes
							NOT = {
								any_spouse = {
									even_if_dead = yes
									exists = this
								}
							}
						}
						save_scope_as = chosen_qolab
					}
				}
			}
		}
		#unmarried knights can name employer/spouse
		25 = {
			trigger = {
				is_married = no
				is_betrothed = no
				employer ?= {
					OR = {
						AND = {
							is_female = yes
							location = root.location
						}
						AND = {
							any_spouse = {
								location = root.location
							}
						}
					}
				}
			}

			if = {
				limit = {
					employer = {
						is_female = yes
						location = root.location
					}
				}
				employer = { save_scope_as = chosen_qolab }
			}
			else = {
				employer = {
					random_spouse = {
						limit = { location = root.location }
						save_scope_as = chosen_qolab
					}
				}
			}
		}
		#choose a random
		1 = {
			modifier = {
				OR = {
					has_trait = lustful
					has_trait = rakish
					has_trait = seducer
				}
				NOR = {
					has_trait = loyal
					has_trait = just
				}
				add = 99
			}

			scope:activity = {
				every_attending_character = {
					if = {
						limit = {
							is_female = yes
							is_adult = yes
						}
						add_to_list = possible_characters
					}
					current_travel_plan ?= {
						every_entourage_character ?= {
							limit = {
								is_female = yes
								is_adult = yes
							}
							add_to_list = possible_characters
						}
					}
				}
			}
			random_in_list = {
				list = possible_characters
				weight = {
					base = 40
					modifier = {
						add = -39
						num_of_bad_genetic_traits > 0
					}
					modifier = {
						add = 20
						num_of_good_genetic_traits > 0
					}
					modifier = {
						add = 80
						has_trait = beauty_good
					}
					modifier = {
						add = -39
						is_married = yes
					}
				}
				save_scope_as = chosen_qolab
			}
		}
		#arrogant women names self
		1000 = {
			trigger = {
				is_female = yes
				has_trait = arrogant
			}

			save_scope_as = chosen_qolab
		}
		#kg name queen
		1000 = {
			trigger = {
				has_trait = kingsguard
				employer = {
					OR = {
						AND = {
							is_female = yes
							location = root.location
						}
						AND = {
							any_spouse = {
								location = root.location
							}
						}
					}
				}
			}

			if = {
				limit = {
					employer = {
						is_female = yes
						location = root.location
					}
				}
				employer = { save_scope_as = chosen_qolab }
			}
			else = {
				employer = {
					random_spouse = {
						limit = { location = root.location }
						save_scope_as = chosen_qolab
					}
				}
			}
		}
	}
	scope:chosen_qolab = { agot_name_as_qolab_effect = yes }
}

agot_name_as_qolab_effect = {
	save_scope_as = qolab
	hidden_effect = {
		if = {
			limit = {
				has_global_variable = queen_of_love_and_beauty
				global_var:queen_of_love_and_beauty ?= { is_alive = yes }
			}
			global_var:queen_of_love_and_beauty = {
				save_scope_as = prev_qolab
				remove_character_modifier = queen_of_love_and_beauty_modifier
				if = {
					limit = {
						any_artifact = {
							artifact_owner = scope:prev_qolab
							OR = {
								has_variable = crown_of_qolab_generic_artifact
								has_variable = crown_of_qolab_baelor_artifact
								has_variable = crown_of_qolab_gardener_artifact
								has_variable = crown_of_qolab_winter_roses_artifact
								has_variable = qolab_crown_03_artifact
								has_variable = qolab_crown_04_artifact
								has_variable = qolab_crown_05_artifact
								has_variable = qolab_crown_06_artifact
							}
						}
					}
					random_artifact = {
						limit = {
							artifact_owner = scope:prev_qolab
							OR = {
								has_variable = crown_of_qolab_generic_artifact
								has_variable = crown_of_qolab_baelor_artifact
								has_variable = crown_of_qolab_gardener_artifact
								has_variable = crown_of_qolab_winter_roses_artifact
								has_variable = qolab_crown_03_artifact
								has_variable = qolab_crown_04_artifact
								has_variable = qolab_crown_05_artifact
								has_variable = qolab_crown_06_artifact
							}
						}
						scope:prev_qolab = {
							set_variable = {
								name = old_tourney_location
								value = prev.var:tourney_location
							}
						}
						var:contest_winner = { save_scope_as = old_contest_winner }
						if = {
							limit = { has_variable = crown_of_qolab_generic_artifact }
							scope:prev_qolab = { agot_create_artifact_trinket_of_qolab_generic_effect = { OWNER = scope:prev_qolab } }
						}
						else_if = {
							limit = { has_variable = crown_of_qolab_baelor_artifact }
							scope:prev_qolab = { agot_create_artifact_trinket_of_qolab_baelor_effect = { OWNER = scope:prev_qolab } }
						}
						else_if = {
							limit = { has_variable = crown_of_qolab_gardener_artifact }
							scope:prev_qolab = { agot_create_artifact_trinket_of_qolab_gardener_effect = { OWNER = scope:prev_qolab } }
						}
						else_if = {
							limit = { has_variable = crown_of_qolab_winter_roses_artifact }
							scope:prev_qolab = { agot_create_artifact_trinket_of_qolab_winter_roses_effect = { OWNER = scope:prev_qolab } }
						}
						else_if = {
							limit = { has_variable = qolab_crown_03_artifact }
							scope:prev_qolab = { agot_create_artifact_trinket_of_qolab_03_effect = { OWNER = scope:prev_qolab } }
						}
						else_if = {
							limit = { has_variable = qolab_crown_04_artifact }
							scope:prev_qolab = { agot_create_artifact_trinket_of_qolab_04_effect = { OWNER = scope:prev_qolab } }
						}
						else_if = {
							limit = { has_variable = qolab_crown_05_artifact }
							scope:prev_qolab = { agot_create_artifact_trinket_of_qolab_05_effect = { OWNER = scope:prev_qolab } }
						}
						else_if = {
							limit = { has_variable = qolab_crown_06_artifact }
							scope:prev_qolab = { agot_create_artifact_trinket_of_qolab_06_effect = { OWNER = scope:prev_qolab } }
						}
						destroy_artifact = this
					}
					remove_variable = old_tourney_location
				}
			}
		}
		set_global_variable = {
			name = queen_of_love_and_beauty
			value = scope:qolab
		}
	}
	add_character_modifier = { modifier =  queen_of_love_and_beauty_modifier }
	add_opinion = {
		target = scope:contest_winner
		modifier = named_me_queen_of_love_and_beauty_opinion
	}
	set_variable = {
		name = tourney_location
		value = root.location
	}
	show_as_tooltip = { agot_create_artifact_crown_of_qolab_tooltip_effect = { OWNER = scope:qolab CREATOR = scope:contest_winner } }
	hidden_effect = {
		if = {
			limit = {
				scope:host = {
					OR = {
						culture = { has_cultural_pillar = heritage_first_man }
						capital_province = { has_building = agot_glass_gardens_03 }
					}
				}
			}
			agot_create_artifact_crown_of_qolab_winter_roses_effect = { OWNER = scope:qolab CREATOR = scope:contest_winner }
		}
		else = {
			agot_create_artifact_crown_of_qolab_effect = { OWNER = scope:qolab CREATOR = scope:contest_winner }
		}
	}
	scope:newly_created_artifact = { equip_artifact_to_owner_replace = yes }
	remove_variable = tourney_location
	hidden_effect = {
		if = {
			limit = {
				has_any_nickname = no
				age > 15
			}
			random_list = {
				60 = { }
				5 = {
					if = {
						limit = { is_male = yes }
						give_nickname = nick_monarch_of_beauty_and_noblesse_masc
					}
					else = {
						give_nickname = nick_monarch_of_beauty_and_noblesse
					}
				}
				5 = { give_nickname = nick_the_fair }
				5 = { give_nickname = nick_the_beautiful }
				20 = {
					trigger = {
						OR = {
							dynasty ?= dynasty:dynn_Lannister
							dynasty ?= dynasty:dynn_Reyne
							dynasty ?= dynasty:dynn_Osgrey
						}
					}
					random_list = {
						1 = { give_nickname = nick_the_fair_lion }
						1 = {
							trigger = { dynasty ?= dynasty:dynn_Lannister }
							give_nickname = nick_the_golden
						}
					}
				}
				20 = {
					trigger = {
						OR = {
							dynasty ?= dynasty:dynn_Lannister
							dynasty ?= dynasty:dynn_Reyne
							dynasty ?= dynasty:dynn_Osgrey
						}
					}
					random_list = {
						1 = { give_nickname = nick_the_fair_lion }
						1 = {
							trigger = { dynasty ?= dynasty:dynn_Lannister }
							give_nickname = nick_the_golden
						}
					}
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Stark
					}
					give_nickname = nick_the_fair_wolf
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Targaryen
					}
					give_nickname = nick_the_fair_dragon
				}
				20 = {
					trigger = {
						OR = {
							dynasty ?= dynasty:dynn_Durrandon
							dynasty ?= dynasty:dynn_Baratheon
						}
					}
					give_nickname = nick_the_fair_stag
				}
				20 = {
					trigger = {
						OR = {
							dynasty ?= dynasty:dynn_Durrandon
							dynasty ?= dynasty:dynn_Baratheon
						}
					}
					give_nickname = nick_the_fair_storm
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Martell
					}
					give_nickname = nick_the_fair_spear
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Martell
					}
					give_nickname = nick_the_fair_sun
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Tyrell
					}
					give_nickname = nick_the_fair_rose
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Tully
					}
					give_nickname = nick_the_fair_fish
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Greyjoy
					}
					give_nickname = nick_the_fair_squid
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Arryn
					}
					give_nickname = nick_the_fair_falcon
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Gardener
					}
					give_nickname = nick_the_fair_hand
				}
				20 = {
					trigger = {
						OR = {
							dynasty ?= dynasty:dynn_Hoare
							dynasty ?= dynasty:dynn_Greyjoy
						}
					}
					give_nickname = nick_the_fair_iron
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Velaryon
					}
					give_nickname = nick_the_fair_seahorse
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Florent
					}
					give_nickname = nick_the_fair_fox
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Mormont
					}
					give_nickname = nick_the_fair_bear
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Hightower
					}
					give_nickname = nick_the_fair_tower
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Connington
					}
					give_nickname = nick_the_fair_griffin
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Frey
					}
					give_nickname = nick_the_fair_bridge
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Yronwood
					}
					give_nickname = nick_the_fair_gate
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Dayne
					}
					give_nickname = nick_the_fair_star
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Dayne
					}
					give_nickname = nick_the_fair_sword
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Oakheart
					}
					give_nickname = nick_the_fair_oak
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Manderly
					}
					give_nickname = nick_the_fair_merman
				}
				20 = {
					trigger = {
						OR = {
							dynasty ?= dynasty:dynn_Whent
							dynasty ?= dynasty:dynn_Lothston

						}
					}
					give_nickname = nick_the_fair_bat
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Crakehall
					}
					give_nickname = nick_the_fair_boar
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Lydden
					}
					give_nickname = nick_the_fair_badger
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Royce
					}
					give_nickname = nick_the_fair_bronze
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Swann
					}
					give_nickname = nick_the_fair_swan
				}
				20 = {
					trigger = {
						dynasty ?= dynasty:dynn_Beesbury
					}
					give_nickname = nick_the_fair_bee
				}
			}
		}
	}

	create_character_memory = {
		type = agot_named_as_qolab
		participants = {
			crowner = scope:contest_winner
		}
	}

	scope:contest_winner = {
		create_character_memory = {
			type = agot_named_a_qolab
			participants = {
				qolab = scope:qolab
			}
		}
	}
}

agot_assign_high_septon_effect = { #Hambone
	set_house = house:house_Most_Devout
	if = {
		limit = {
			has_trait = septon
		}
		remove_trait = septon
		add_trait = high_septon
	}
	if = { 
		limit = {
			NOT = { has_trait = septon }
		}
		add_trait = high_septon
	}
	# if = { #Hambone disabled prob cant do oldtown since it is king tier title
	# 	limit = {
	# 		exists = title:d_oldtown.holder
	# 		exists = title:k_the_most_devout.holder
	# 		exists = faith.religious_head
	# 		title:d_oldtown.holder = {
	# 			faith.religious_head = title:k_the_most_devout.holder
	# 		}
	# 	}
	# 	title:d_oldtown.holder = {
	# 		create_title_and_vassal_change = {
	# 			type = swear_fealty
	# 			save_scope_as = change
	# 		}
	# 		title:k_the_most_devout.holder = {
	# 			change_liege = {
	# 				liege = title:d_oldtown.holder
	# 				change = scope:change
	# 			}
	# 			resolve_title_and_vassal_change = scope:change
	# 		}

	# 		create_title_and_vassal_change = {
	# 			type = granted
	# 			save_scope_as = title_change
	# 			add_claim_on_loss = no
	# 		}
	# 		title:b_the_starry_sept= {
	# 			change_title_holder_include_vassals = {
	# 				holder = title:k_the_most_devout.holder
	# 				change = scope:title_change
	# 			}
	# 			resolve_title_and_vassal_change = scope:title_change
	# 		}

	# 		if = {
	# 			limit = {
	# 				exists = cp:councillor_court_chaplain
	# 			}
	# 			set_variable = {
	# 				name = setting_up_high_septon
	# 				value = yes
	# 				days = 1
	# 			}
	# 			fire_councillor = cp:councillor_court_chaplain
	# 		}
	# 		assign_councillor_type = {
	# 			type = councillor_court_chaplain
	# 			target = title:k_the_most_devout.holder
	# 		}
	# 	}
	# }
}

agot_assign_high_septon_nickname_effect = {
	random_list = { #High Septon Nicknames
		10 = {
			trigger = {
				current_year > 8260.1.1
				character:Most_Devout_20 ?= { is_alive = no }
				OR = {
					has_trait = gluttonous
					has_trait = lifestyle_reveler
				}
				NOT = { has_trait = temperate }
			}
			give_nickname = nick_the_other_fat_one
			change_current_weight = 100
		}
		10 = {
			trigger = {
				OR = {
					has_trait = gregarious
					has_trait = lifestyle_reveler
				}
			}
			give_nickname = nick_the_gay_one
		}
		10 = {
			trigger = {
				has_trait = dwarf
			}
			give_nickname = nick_the_small_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = intellect_good
					has_trait = education_learning_4
					has_trait = scholar
				}
			}
			give_nickname = nick_the_sharp_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = intellect_good
					has_trait = education_learning_4
					has_trait = scholar
				}
			}
			give_nickname = nick_the_bright_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = intellect_bad
					has_trait = education_learning_1
				}
			}
			give_nickname = nick_the_dumb_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = intellect_bad
					has_trait = education_learning_1
				}
			}
			give_nickname = nick_the_dull_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = intellect_bad
					has_trait = lazy
				}
			}
			give_nickname = nick_the_slow_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = strong
					has_trait = physique_good
				}
			}
			give_nickname = nick_the_strong_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = beauty_good
					has_trait = fashionable
				}
			}
			give_nickname = nick_the_pretty_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = beauty_bad
					has_trait = maimed
				}
			}
			give_nickname = nick_the_gross_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = lunatic
					has_trait = lunatic_1
					has_trait = lunatic_genetic
					has_trait = possessed
					has_trait = paranoid
				}
			}
			give_nickname = nick_the_weird_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = compassionate
					has_trait = generous
				}
			}
			give_nickname = nick_the_nice_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = compassionate
					has_trait = trusting
					has_trait = forgiving
				}
			}
			give_nickname = nick_the_kind_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = sadistic
					has_trait = disloyal
				}
			}
			give_nickname = nick_the_vile_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = sadistic
					has_trait = disloyal
					has_trait = arbitrary
					has_trait = vengeful
					has_trait = uncouth
					has_trait = beauty_bad
				}
			}
			give_nickname = nick_the_loathsome_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = uncouth
				}
			}
			give_nickname = nick_the_smelly_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = shy
				}
			}
			give_nickname = nick_the_quiet_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = just
					has_trait = honest
				}
			}
			give_nickname = nick_the_fair_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = chaste
				}
			}
			give_nickname = nick_the_pure_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = calm
					has_trait = content
					has_trait = patient
				}
			}
			give_nickname = nick_the_tranquil_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = gregarious
				}
			}
			give_nickname = nick_the_funny_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = humble
				}
			}
			give_nickname = nick_the_modest_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = humble
					has_trait = shy
					has_trait = fickle
				}
			}
			give_nickname = nick_the_meek_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = brave
				}
			}
			give_nickname = nick_the_bold_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = vengeful
					has_trait = wrathful
				}
			}
			give_nickname = nick_the_fierce_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = lustful
				}
			}
			give_nickname = nick_the_raunchy_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = fickle
				}
			}
			give_nickname = nick_the_dithering_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = generous
					has_trait = forgiving
				}
			}
			give_nickname = nick_the_magnanimous_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = impatient
					has_trait = depressed
				}
			}
			give_nickname = nick_the_moody_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = ambitious
					has_trait = loyal
					has_trait = stubborn
					has_trait = zealous
				}
			}
			give_nickname = nick_the_staunch_one
		}
		10 = {
			trigger = {
				OR = {
					has_trait = diligent
					has_trait = loyal
					has_trait = stubborn
				}
			}
			give_nickname = nick_the_stalwart_one
		}
		5 = { #rare
			trigger = {
				OR = {
					has_trait = strong
					has_trait = giant
					has_trait = physique_good
					has_trait = stubborn
					has_trait = whole_of_body
				}
			}
			give_nickname = nick_the_high_aurochs
		}
		5 = {  #rare
			trigger = {
				OR = {
					has_trait = craven
					has_trait = eunuch
				}
			}
			give_nickname = nick_the_high_capon
		}
		5 = {  #rare
			trigger = {
				OR = {
					has_trait = vengeful
					has_trait = wrathful
				}
			}
			give_nickname = nick_the_high_hawk
		}
		5 = {  #rare
			trigger = {
				OR = {
					has_trait = humble
					has_trait = shy
					has_trait = fickle
				}
			}
			give_nickname = nick_the_high_mouse
		}
		5 = {  #rare
			trigger = {
				OR = {
					has_trait = deceitful
					has_trait = callous
				}
			}
			give_nickname = nick_the_high_serpent
		}
		5 = {  #rare
			trigger = {
				OR = {
					has_trait = content
					has_trait = trusting
				}
			}
			give_nickname = nick_the_high_sheep
		}
		5 = {  #rare
			trigger = {
				OR = {
					has_trait = deceitful
					has_trait = arbitrary
				}
			}
			give_nickname = nick_the_high_spider
		}
		5 = {  #rare
			trigger = {
				OR = {
					has_trait = greedy
					has_trait = lustful
					has_trait = paranoid
					has_trait = impatient
				}
			}
			give_nickname = nick_the_high_squirrel
		}
		5 = {  #rare
			trigger = {
				OR = {
					has_trait = sadistic
					has_trait = disloyal
					has_trait = arbitrary
					has_trait = vengeful
					has_trait = uncouth
					has_trait = beauty_bad
				}
			}
			give_nickname = nick_the_high_swine
		}
		2 = {  #rarer
			trigger = {
				OR = {
					has_trait = lisping
					has_trait = stuttering
				}
			}
			give_nickname = nick_the_high_bespawler
		}
		2 = {  #rarer
			trigger = {
				AND = {
					has_trait = arrogant
					has_trait = intellect_bad
				}
			}
			give_nickname = nick_the_high_coxcomb
		}
		2 = {  #rarer
			trigger = {
				OR = {
					has_trait = arbitrary
					has_trait = content
				}
			}
			give_nickname = nick_the_high_cumberworld
		}
		2 = {  #rarer
			trigger = {
				OR = {
					has_trait = craven
					has_trait = fickle
				}
			}
			give_nickname = nick_the_high_milksop
		}
		2 = {  #rarer
			trigger = {
				has_trait = uncouth
			}
			give_nickname = nick_the_high_muckspout
		}
		2 = {  #rarer
			trigger = {
				AND = {
					has_trait = arbitrary
					has_trait = stubborn
				}
			}
			give_nickname = nick_the_high_mumpsimus
		}
		2 = {  #rarer
			trigger = {
				has_trait = intellect_bad
			}
			give_nickname = nick_the_high_ninnyhammer
		}
		2 = {  #rarer
			trigger = {
				OR = {
					has_trait = compassionate
					has_trait = trusting
					has_trait = forgiving
					has_trait = generous
					has_trait = trusting
					has_trait = loyal
				}
			}
			give_nickname = nick_the_high_prickmedainty
		}
		2 = {  #rarer
			trigger = {
				has_trait = intellect_bad
			}
			give_nickname = nick_the_high_saddlegoose
		}
		2 = {  #rarer
			trigger = {
				OR = {
					has_trait = gluttonous
					has_trait = lifestyle_reveler
				}
			}
			give_nickname = nick_the_high_smellfeast
		}
		2 = {  #rarer
			trigger = {
				OR = {
					has_trait = ambitious
					has_trait = disloyal
				}
			}
			give_nickname = nick_the_high_snollygoster
		}
		1 = {
			trigger = {
				always = yes
			}
			give_nickname = nick_the_high_septon #fallback
		}
	}
}

agot_duel_effect = {
	$DUELIST_1$ = { save_scope_as = duelist_1 }
	$DUELIST_2$ = { save_scope_as = duelist_2 }
	random_list = {
		0 = {
			modifier = {
				#one tier difference
				OR = {
					AND = {
						scope:duelist_1 = { has_trait = education_martial_prowess_1 }
						scope:duelist_2 = {
							NOT = { has_trait = education_martial_prowess }
						}
					}
					AND = {
						scope:duelist_1 = { has_trait = education_martial_prowess_2 }
						scope:duelist_2 = { has_trait = education_martial_prowess_1 }
					}
					AND = {
						scope:duelist_1 = { has_trait = education_martial_prowess_3 }
						scope:duelist_2 = { has_trait = education_martial_prowess_2 }
					}
					AND = {
						scope:duelist_1 = { has_trait = education_martial_prowess_4 }
						scope:duelist_2 = { has_trait = education_martial_prowess_3 }
					}
					AND = {
						scope:duelist_1 = { has_trait = education_martial_prowess_5 }
						scope:duelist_2 = { has_trait = education_martial_prowess_4 }
					}
				}
				add = 80
			}
			modifier = {
				#two tier difference
				OR = {
					AND = {
						scope:duelist_1 = { has_trait = education_martial_prowess_2 }
						scope:duelist_2 = {
							NOT = { has_trait = education_martial_prowess }
						}
					}
					AND = {
						scope:duelist_1 = { has_trait = education_martial_prowess_3 }
						scope:duelist_2 = { has_trait = education_martial_prowess_1 }
					}
					AND = {
						scope:duelist_1 = { has_trait = education_martial_prowess_4 }
						scope:duelist_2 = { has_trait = education_martial_prowess_2 }
					}
					AND = {
						scope:duelist_1 = { has_trait = education_martial_prowess_5 }
						scope:duelist_2 = { has_trait = education_martial_prowess_3 }
					}
				}
				add = 160
			}
			modifier = {
				#three tier difference
				OR = {
					AND = {
						scope:duelist_1 = { has_trait = education_martial_prowess_3 }
						scope:duelist_2 = {
							NOT = { has_trait = education_martial_prowess }
						}
					}
					AND = {
						scope:duelist_1 = { has_trait = education_martial_prowess_4 }
						scope:duelist_2 = { has_trait = education_martial_prowess_1 }
					}
					AND = {
						scope:duelist_1 = { has_trait = education_martial_prowess_5 }
						scope:duelist_2 = { has_trait = education_martial_prowess_2 }
					}
				}
				add = 320
			}
			modifier = {
				#four tier difference
				OR = {
					AND = {
					scope:duelist_1 = { has_trait = education_martial_prowess_4 }
						scope:duelist_2 = {
							NOT = { has_trait = education_martial_prowess }
						}
					}
					AND = {
						scope:duelist_1 = { has_trait = education_martial_prowess_5 }
						scope:duelist_2 = { has_trait = education_martial_prowess_1 }
					}
				}
				add = 640
			}
			modifier = {
				#five tier difference
				AND = {
					scope:duelist_1 = { has_trait = education_martial_prowess_5 }
					scope:duelist_2 = {
						NOT = { has_trait = education_martial_prowess }
					}
				}
				add = 1280
			}
			modifier = {
				scope:duelist_1 = { has_trait = lifestyle_blademaster }
				add = 40
			}
			modifier = {
				scope:duelist_1 = { has_trait = lifestyle_blademaster }
				scope:duelist_1 = {
					has_trait_xp = {
						trait = lifestyle_blademaster
						value >= 50
					}
				}
				add = 40
			}
			modifier = {
				scope:duelist_1 = { has_trait = lifestyle_blademaster }
				scope:duelist_1 = {
					has_trait_xp = {
						trait = lifestyle_blademaster
						value >= 100
					}
				}
				add = 40
			}
			modifier = {
				scope:duelist_1 = { prowess < 10 }
				add = -80
			}
			modifier = {
				scope:duelist_1 = { prowess > 10 }
				add = scope:duelist_1.prowess
			}
			modifier = {
				scope:duelist_1 = { prowess > 10 }
				add = -10
			}
			modifier = {
				scope:duelist_1 = { prowess > 20 }
				add = scope:duelist_1.prowess
			}
			modifier = {
				scope:duelist_1 = { prowess > 20 }
				add = scope:duelist_1.prowess
			}
			modifier = {
				scope:duelist_1 = { prowess > 20 }
				add = -40
			}
			scope:duelist_1 = { save_scope_as = winner }
			scope:duelist_2 = { save_scope_as = loser }
		}
		0 = {
			modifier = {
				#one tier difference
				OR = {
					AND = {
						scope:duelist_2 = { has_trait = education_martial_prowess_1 }
						scope:duelist_1 = {
							NOT = { has_trait = education_martial_prowess }
						}
					}
					AND = {
						scope:duelist_2 = { has_trait = education_martial_prowess_2 }
						scope:duelist_1 = { has_trait = education_martial_prowess_1 }
					}
					AND = {
						scope:duelist_2 = { has_trait = education_martial_prowess_3 }
						scope:duelist_1 = { has_trait = education_martial_prowess_2 }
					}
					AND = {
						scope:duelist_2 = { has_trait = education_martial_prowess_4 }
						scope:duelist_1 = { has_trait = education_martial_prowess_3 }
					}
					AND = {
						scope:duelist_2 = { has_trait = education_martial_prowess_5 }
						scope:duelist_1 = { has_trait = education_martial_prowess_4 }
					}
				}
				add = 80
			}
			modifier = {
				#two tier difference
				OR = {
					AND = {
						scope:duelist_2 = { has_trait = education_martial_prowess_2 }
						scope:duelist_1 = {
							NOT = { has_trait = education_martial_prowess }
						}
					}
					AND = {
						scope:duelist_2 = { has_trait = education_martial_prowess_3 }
						scope:duelist_1 = { has_trait = education_martial_prowess_1 }
					}
					AND = {
						scope:duelist_2 = { has_trait = education_martial_prowess_4 }
						scope:duelist_1 = { has_trait = education_martial_prowess_2 }
					}
					AND = {
						scope:duelist_2 = { has_trait = education_martial_prowess_5 }
						scope:duelist_1 = { has_trait = education_martial_prowess_3 }
					}
				}
				add = 160
			}
			modifier = {
				#three tier difference
				OR = {
					AND = {
						scope:duelist_2 = { has_trait = education_martial_prowess_3 }
						scope:duelist_1 = {
							NOT = { has_trait = education_martial_prowess }
						}
					}
					AND = {
						scope:duelist_2 = { has_trait = education_martial_prowess_4 }
						scope:duelist_1 = { has_trait = education_martial_prowess_1 }
					}
					AND = {
						scope:duelist_2 = { has_trait = education_martial_prowess_5 }
						scope:duelist_1 = { has_trait = education_martial_prowess_2 }
					}
				}
				add = 320
			}
			modifier = {
				#four tier difference
				OR = {
					AND = {
					scope:duelist_2 = { has_trait = education_martial_prowess_4 }
						scope:duelist_1 = {
							NOT = { has_trait = education_martial_prowess }
						}
					}
					AND = {
						scope:duelist_2 = { has_trait = education_martial_prowess_5 }
						scope:duelist_1 = { has_trait = education_martial_prowess_1 }
					}
				}
				add = 640
			}
			modifier = {
				#five tier difference
				AND = {
					scope:duelist_2 = { has_trait = education_martial_prowess_5 }
					scope:duelist_1 = {
						NOT = { has_trait = education_martial_prowess }
					}
				}
				add = 1280
			}
			modifier = {
				scope:duelist_2 = { has_trait = lifestyle_blademaster }
				add = 40
			}
			modifier = {
				scope:duelist_2 = { has_trait = lifestyle_blademaster }
				scope:duelist_2 = {
					has_trait_xp = {
						trait = lifestyle_blademaster
						value >= 50
					}
				}
				add = 40
			}
			modifier = {
				scope:duelist_2 = { has_trait = lifestyle_blademaster }
				scope:duelist_2 = {
					has_trait_xp = {
						trait = lifestyle_blademaster
						value >= 100
					}
				}
				add = 40
			}
			modifier = {
				scope:duelist_2 = { prowess < 10 }
				add = -80
			}
			modifier = {
				scope:duelist_2 = { prowess > 10 }
				add = scope:duelist_2.prowess
			}
			modifier = {
				scope:duelist_2 = { prowess > 10 }
				add = -10
			}
			modifier = {
				scope:duelist_2 = { prowess > 20 }
				add = scope:duelist_2.prowess
			}
			modifier = {
				scope:duelist_2 = { prowess > 20 }
				add = scope:duelist_2.prowess
			}
			modifier = {
				scope:duelist_2 = { prowess > 20 }
				add = -40
			}
			scope:duelist_2 = { save_scope_as = winner }
			scope:duelist_1 = { save_scope_as = loser }
		}
	}
}

agot_add_building_if_possible = {
	if = {
		limit = { has_free_building_slot = yes }
		add_building = $BUILDING$
	}
}

agot_pirate_convert_whole_realm_to_feudalism_effect = {
	custom_tooltip = all_pirate_holding_will_change
	if = {
		limit = {
			OR = {
				agot_is_valid_lp_feudal_government_target = yes
				any_liege_or_above = { agot_is_valid_lp_feudal_government_target = yes }
			}
			NOT = {
				any_liege_or_above = { has_trait = nightswatch }
			}
		}
		custom_tooltip = pirate_vassals_will_convert_lp
	}
	else = {
		custom_tooltip = pirate_vassals_will_convert
	}

	hidden_effect = {
		##Sort out new buildings for liege and all vassals
		every_vassal_or_below = {
			limit = { government_has_flag = government_is_pirate }
			if = {
				limit = {
					OR = {
						agot_is_valid_lp_feudal_government_target = yes
						any_liege_or_above = { agot_is_valid_lp_feudal_government_target = yes }
					}
					NOT = {
						any_liege_or_above = { has_trait = nightswatch }
					}
				}
				change_government = lp_feudal_government
			}
			else = {
				change_government = feudal_government
			}
			every_held_title = {
				limit = { has_title_law = pirate_succession_law }
				clear_title_laws = yes
			}
		}

		every_realm_province = {
			limit = {
				has_holding_type = pirate_den_holding
				NOT = { is_in_list = feudal_conversion }
			}
			add_to_list = feudal_conversion

		}
		every_vassal_or_below = {
			every_realm_province = {
				limit = {
					has_holding_type = pirate_den_holding
					NOT = { is_in_list = feudal_conversion }
				}
				add_to_list = feudal_conversion
			}
		}
		every_in_list = {
			list = feudal_conversion
			set_variable = {
				name = pirate_to_feudal_building_level
				value = combined_building_level
				days = 1
			}
			set_holding_type = castle_holding
			while = {
				limit = {
					var:pirate_to_feudal_building_level > 1
				}
				generate_building = yes
				change_variable = {
					name = pirate_to_feudal_building_level
					subtract = 1
				}
			}
			if = {
				limit = {
					has_building = generic_dragon_pit_01
				}
				remove_building = generic_dragon_pit_01
			}
			remove_variable = pirate_to_feudal_building_level
			remove_from_list = feudal_conversion
		}
	}

	if = {
		limit = {
			OR = {
				agot_is_valid_lp_feudal_government_target = yes
				any_liege_or_above = { agot_is_valid_lp_feudal_government_target = yes }
			}
			NOT = {
				any_liege_or_above = { has_trait = nightswatch }
			}
		}
		change_government = lp_feudal_government
	}
	else = {
		change_government = feudal_government
	}
	hidden_effect = {
		every_held_title = {
			limit = { has_title_law = pirate_succession_law }
			clear_title_laws = yes
		}
	}
}

agot_sent_to_essos_effect = {		# Banish, then send to Essos
	$TARGET$ = { save_scope_as = target }
	$ACTOR$ = { save_scope_as = actor }
	custom_tooltip = {
		text = agot_banish_to_essos
		scope:target = {
			if = {
				limit = { is_pool_character = no }
				agot_banish_effect = { BANISHER = scope:actor }
			}
			every_claim = {
				prev = {
					remove_claim = prev
				}
			}
			trigger_event = agot_events_generic.0010

		}
	}
}

agot_banish_effect = {
	if = {
		limit = {
			NOT = { target_is_liege_or_above = $BANISHER$ }
		}
		debug_log = "Trying to banish a character from a different realm"
		debug_log_scopes = yes
	}
	set_variable = {
		name = agot_banisher
		value = $BANISHER$
		days = 1
	}
	banish = yes
}

agot_init_legit_level_effect = {
	add_legitimacy = -2500 # Make it zero first
	while = {
		limit = { legitimacy_level > $LEVEL$ }
		count < 50
		add_legitimacy = -50
	}
	while = {
		limit = { legitimacy_level < $LEVEL$ }
		count < 50
		add_legitimacy = 50
	}
}

agot_remove_heterochromia_eyes_effect = {
	if = {
		limit = {
			has_inactive_trait = heterochromia_green1
		}
		make_trait_active = heterochromia_green1
		remove_trait = heterochromia_green1
	}
	if = {
		limit = {
			has_inactive_trait = heterochromia_green2
		}
		make_trait_active = heterochromia_green2
		remove_trait = heterochromia_green2
	}
	if = {
		limit = {
			has_inactive_trait = heterochromia_blue1
		}
		make_trait_active = heterochromia_blue1
		remove_trait = heterochromia_blue1
	}
	if = {
		limit = {
			has_inactive_trait = heterochromia_blue2
		}
		make_trait_active = heterochromia_blue2
		remove_trait = heterochromia_blue2
	}
	if = {
		limit = {
			has_inactive_trait = heterochromia_grey
		}
		make_trait_active = heterochromia_grey
		remove_trait = heterochromia_grey
	}
	if = {
		limit = {
			has_inactive_trait = heterochromia_black1
		}
		make_trait_active = heterochromia_black1
		remove_trait = heterochromia_black1
	}
	if = {
		limit = {
			has_inactive_trait = heterochromia_black2
		}
		make_trait_active = heterochromia_black2
		remove_trait = heterochromia_black2
	}
	if = {
		limit = {
			has_inactive_trait = heterochromia_brown1
		}
		make_trait_active = heterochromia_brown1
		remove_trait = heterochromia_brown1
	}
	if = {
		limit = {
			has_inactive_trait = heterochromia_brown2
		}
		make_trait_active = heterochromia_brown2
		remove_trait = heterochromia_brown2
	}
	if = {
		limit = {
			has_inactive_trait = heterochromia_brown3
		}
		make_trait_active = heterochromia_brown3
		remove_trait = heterochromia_brown3
	}
	if = {
		limit = {
			has_inactive_trait = heterochromia_purple1
		}
		make_trait_active = heterochromia_purple1
		remove_trait = heterochromia_purple1
	}
	if = {
		limit = {
			has_inactive_trait = heterochromia_purple2
		}
		make_trait_active = heterochromia_purple2
		remove_trait = heterochromia_purple2
	}
	if = {
		limit = {
			has_inactive_trait = heterochromia_purple3
		}
		make_trait_active = heterochromia_purple3
		remove_trait = heterochromia_purple3
	}
	if = {
		limit = {
			has_inactive_trait = heterochromia_purple4
		}
		make_trait_active = heterochromia_purple4
		remove_trait = heterochromia_purple4
	}
	if = {
		limit = {
			has_inactive_trait = heterochromia_red
		}
		make_trait_active = heterochromia_red
		remove_trait = heterochromia_red
	}
	if = {
		limit = {
			has_inactive_trait = heterochromia_gold
		}
		make_trait_active = heterochromia_gold
		remove_trait = heterochromia_gold
	}
}

agot_inactive_heterochromia_eyes_effect = {
	if = {
		limit = {
			has_trait = heterochromia_green1
		}
		make_trait_inactive = heterochromia_green1
	}
	if = {
		limit = {
			has_trait = heterochromia_green2
		}
		make_trait_inactive = heterochromia_green2
	}
	if = {
		limit = {
			has_trait = heterochromia_blue1
		}
		make_trait_inactive = heterochromia_blue1
	}
	if = {
		limit = {
			has_trait = heterochromia_blue2
		}
		make_trait_inactive = heterochromia_blue2
	}
	if = {
		limit = {
			has_trait = heterochromia_grey
		}
		make_trait_inactive = heterochromia_grey
	}
	if = {
		limit = {
			has_trait = heterochromia_black1
		}
		make_trait_inactive = heterochromia_black1
	}
	if = {
		limit = {
			has_trait = heterochromia_black2
		}
		make_trait_inactive = heterochromia_black2
	}
	if = {
		limit = {
			has_trait = heterochromia_brown1
		}
		make_trait_inactive = heterochromia_brown1
	}
	if = {
		limit = {
			has_trait = heterochromia_brown2
		}
		make_trait_inactive = heterochromia_brown2
	}
	if = {
		limit = {
			has_trait = heterochromia_brown3
		}
		make_trait_inactive = heterochromia_brown3
	}
	if = {
		limit = {
			has_trait = heterochromia_purple1
		}
		make_trait_inactive = heterochromia_purple1
	}
	if = {
		limit = {
			has_trait = heterochromia_purple2
		}
		make_trait_inactive = heterochromia_purple2
	}
	if = {
		limit = {
			has_trait = heterochromia_purple3
		}
		make_trait_inactive = heterochromia_purple3
	}
	if = {
		limit = {
			has_trait = heterochromia_purple4
		}
		make_trait_inactive = heterochromia_purple4
	}
	if = {
		limit = {
			has_trait = heterochromia_red
		}
		make_trait_inactive = heterochromia_red
	}
	if = {
		limit = {
			has_trait = heterochromia_gold
		}
		make_trait_inactive = heterochromia_gold
	}
}

agot_add_random_trait_effect = {
	random_list = {
		1 = { add_trait = brave }
		1 = { add_trait = craven }
		1 = { add_trait = lustful }
		1 = { add_trait = chaste }
		1 = { add_trait = calm }
		1 = { add_trait = forgiving }
		1 = { add_trait = vengeful }
		1 = { add_trait = generous }
		1 = { add_trait = greedy }
		1 = { add_trait = temperate }
		1 = { add_trait = gluttonous }
		1 = { add_trait = trusting }
		1 = { add_trait = paranoid }
		1 = { add_trait = diligent }
		1 = { add_trait = lazy }
		1 = { add_trait = patient }
		1 = { add_trait = impatient }
		1 = { add_trait = arrogant }
		1 = { add_trait = humble }
		1 = { add_trait = gregarious }
		1 = { add_trait = shy }
		1 = { add_trait = honest }
		1 = { add_trait = deceitful }
		1 = { add_trait = ambitious }
		1 = { add_trait = content }
		1 = { add_trait = just }
		1 = { add_trait = arbitrary }
		1 = { add_trait = cynical }
		1 = { add_trait = zealous }
		1 = { add_trait = compassionate }
		1 = { add_trait = sadistic }
		1 = { add_trait = callous }
		1 = { add_trait = stubborn }
		1 = { add_trait = fickle }
		1 = { add_trait = eccentric }
		1 = { add_trait = rude }
		1 = { add_trait = authoritative }
		1 = { add_trait = inquisitive }
	}
}

agot_add_random_education_effect = {
	random_list = {
		3 = { add_trait = education_diplomacy_1 }
		7 = { add_trait = education_diplomacy_2 }
		5 = { add_trait = education_diplomacy_3 }
		4 = { add_trait = education_diplomacy_4 }

		3 = { add_trait = education_intrigue_1 }
		7 = { add_trait = education_intrigue_2 }
		5 = { add_trait = education_intrigue_3 }
		4 = { add_trait = education_intrigue_4 }

		3 = { add_trait = education_stewardship_1 }
		7 = { add_trait = education_stewardship_2 }
		5 = { add_trait = education_stewardship_3 }
		4 = { add_trait = education_stewardship_4 }

		3 = { add_trait = education_learning_1 }
		7 = { add_trait = education_learning_2 }
		5 = { add_trait = education_learning_3 }
		4 = { add_trait = education_learning_4 }

		3 = { add_trait = education_martial_1 }
		7 = { add_trait = education_martial_2 }
		5 = { add_trait = education_martial_3 }
		4 = { add_trait = education_martial_4 }
	}
}

agot_house_customizer_spawn_dummies_effect = {
	## NORTH ##
	if = {
		limit = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Amber_1 }
		}
		create_character = {
			gender = male
			location = title:c_kings_landing.holder.capital_province
			faith = faith:the_seven_main
			culture = title:c_kings_landing.holder.culture
			dynasty_house = house:house_Amber_dummy
			save_scope_as = hc_amber
		}
		scope:hc_amber = {
			add_character_flag = house_customizer_placeholder
			add_to_global_variable_list = {
				name = hc_dummies
				target = this
			}
			house = {
				add_to_global_variable_list = {
					name = dummy_houses_for_hc
					target = this
				}
			}
		}
	}
	if = {
		limit = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Greenwood_1 }
		}
		create_character = {
			gender = male
			location = title:c_kings_landing.holder.capital_province
			faith = faith:the_seven_main
			culture = title:c_kings_landing.holder.culture
			dynasty_house = house:house_Greenwood_dummy
			save_scope_as = hc_greenwood
		}
		scope:hc_greenwood = {
			add_character_flag = house_customizer_placeholder
			add_to_global_variable_list = {
				name = hc_dummies
				target = this
			}
			house = {
				add_to_global_variable_list = {
					name = dummy_houses_for_hc
					target = this
				}
			}
		}
	}
	if = {
		limit = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Frost_1 }
		}
		create_character = {
			gender = male
			location = title:c_kings_landing.holder.capital_province
			faith = faith:the_seven_main
			culture = title:c_kings_landing.holder.culture
			dynasty_house = house:house_Frost_dummy
			save_scope_as = hc_frost
		}
		scope:hc_frost = {
			add_character_flag = house_customizer_placeholder
			add_to_global_variable_list = {
				name = hc_dummies
				target = this
			}
			house = {
				add_to_global_variable_list = {
					name = dummy_houses_for_hc
					target = this
				}
			}
		}
	}
	if = {
		limit = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Woodfoot_1 }
		}
		create_character = {
			gender = male
			location = title:c_kings_landing.holder.capital_province
			faith = faith:the_seven_main
			culture = title:c_kings_landing.holder.culture
			dynasty_house = house:house_Woodfoot_dummy
			save_scope_as = hc_woodfoot
		}
		scope:hc_woodfoot = {
			add_character_flag = house_customizer_placeholder
			add_to_global_variable_list = {
				name = hc_dummies
				target = this
			}
			house = {
				add_to_global_variable_list = {
					name = dummy_houses_for_hc
					target = this
				}
			}
		}
	}
	## TRIDENT ##
	if = {
		limit = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Fisher_riverlands_duplicate_1 }
		}
		create_character = {
			gender = male
			location = title:c_kings_landing.holder.capital_province
			faith = faith:the_seven_main
			culture = title:c_kings_landing.holder.culture
			dynasty_house = house:house_Fisher_dummy
			save_scope_as = hc_fisher_trident
		}
		scope:hc_fisher_trident = {
			add_character_flag = house_customizer_placeholder
			add_to_global_variable_list = {
				name = hc_dummies
				target = this
			}
			house = {
				add_to_global_variable_list = {
					name = dummy_houses_for_hc
					target = this
				}
			}
		}
	}
	if = {
		limit = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Harroway_5 }
		}
		create_character = {
			gender = male
			location = title:c_kings_landing.holder.capital_province
			faith = faith:the_seven_main
			culture = title:c_kings_landing.holder.culture
			dynasty_house = house:house_Harroway_dummy
			save_scope_as = hc_harroway
		}
		scope:hc_harroway = {
			add_character_flag = house_customizer_placeholder
			add_to_global_variable_list = {
				name = hc_dummies
				target = this
			}
			house = {
				add_to_global_variable_list = {
					name = dummy_houses_for_hc
					target = this
				}
			}
		}
	}
	if = {
		limit = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Justman_1 }
		}
		create_character = {
			gender = male
			location = title:c_kings_landing.holder.capital_province
			faith = faith:the_seven_main
			culture = title:c_kings_landing.holder.culture
			dynasty_house = house:house_Justman_dummy
			save_scope_as = hc_justman
		}
		scope:hc_justman = {
			add_character_flag = house_customizer_placeholder
			add_to_global_variable_list = {
				name = hc_dummies
				target = this
			}
			house = {
				add_to_global_variable_list = {
					name = dummy_houses_for_hc
					target = this
				}
			}
		}
	}
	if = {
		limit = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Qoherys_1 }
		}
		create_character = {
			gender = male
			location = title:c_kings_landing.holder.capital_province
			faith = faith:the_seven_main
			culture = title:c_kings_landing.holder.culture
			dynasty_house = house:house_Qoherys_dummy
			save_scope_as = hc_qoherys
		}
		scope:hc_qoherys = {
			add_character_flag = house_customizer_placeholder
			add_to_global_variable_list = {
				name = hc_dummies
				target = this
			}
			house = {
				add_to_global_variable_list = {
					name = dummy_houses_for_hc
					target = this
				}
			}
		}
	}
	if = {
		limit = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Teague_1 }
		}
		create_character = {
			gender = male
			location = title:c_kings_landing.holder.capital_province
			faith = faith:the_seven_main
			culture = title:c_kings_landing.holder.culture
			dynasty_house = house:house_Teague_dummy
			save_scope_as = hc_teague
		}
		scope:hc_teague = {
			add_character_flag = house_customizer_placeholder
			add_to_global_variable_list = {
				name = hc_dummies
				target = this
			}
			house = {
				add_to_global_variable_list = {
					name = dummy_houses_for_hc
					target = this
				}
			}
		}
	}
	if = {
		limit = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Towers_1 }
		}
		create_character = {
			gender = male
			location = title:c_kings_landing.holder.capital_province
			faith = faith:the_seven_main
			culture = title:c_kings_landing.holder.culture
			dynasty_house = house:house_Towers_dummy
			save_scope_as = hc_towers
		}
		scope:hc_towers = {
			add_character_flag = house_customizer_placeholder
			add_to_global_variable_list = {
				name = hc_dummies
				target = this
			}
			house = {
				add_to_global_variable_list = {
					name = dummy_houses_for_hc
					target = this
				}
			}
		}
	}
	## VALE ##
	if = {
		limit = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Shell_Vale_1 }
		}
		create_character = {
			gender = male
			location = title:c_kings_landing.holder.capital_province
			faith = faith:the_seven_main
			culture = title:c_kings_landing.holder.culture
			dynasty_house = house:house_Shell_Vale_dummy
			save_scope_as = hc_shell_vale
		}
		scope:hc_shell_vale = {
			add_character_flag = house_customizer_placeholder
			add_to_global_variable_list = {
				name = hc_dummies
				target = this
			}
			house = {
				add_to_global_variable_list = {
					name = dummy_houses_for_hc
					target = this
				}
			}
		}
	}
	if = {
		limit = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Brightstone_1 }
		}
		create_character = {
			gender = male
			location = title:c_kings_landing.holder.capital_province
			faith = faith:the_seven_main
			culture = title:c_kings_landing.holder.culture
			dynasty_house = house:house_Brightstone_dummy
			save_scope_as = hc_brightstone
		}
		scope:hc_brightstone = {
			add_character_flag = house_customizer_placeholder
			add_to_global_variable_list = {
				name = hc_dummies
				target = this
			}
			house = {
				add_to_global_variable_list = {
					name = dummy_houses_for_hc
					target = this
				}
			}
		}
	}
	## DORNE ##
	if = {
		limit = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Dryland_1 }
		}
		create_character = {
			gender = male
			location = title:c_kings_landing.holder.capital_province
			faith = faith:the_seven_main
			culture = title:c_kings_landing.holder.culture
			dynasty_house = house:house_Dryland_dummy
			save_scope_as = hc_dryland
		}
		scope:hc_dryland = {
			add_character_flag = house_customizer_placeholder
			add_to_global_variable_list = {
				name = hc_dummies
				target = this
			}
			house = {
				add_to_global_variable_list = {
					name = dummy_houses_for_hc
					target = this
				}
			}
		}
	}
	## WESTERLANDS ##
	if = {
		limit = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Casterly_1 }
		}
		create_character = {
			gender = male
			location = title:c_kings_landing.holder.capital_province
			faith = faith:the_seven_main
			culture = title:c_kings_landing.holder.culture
			dynasty_house = house:house_Casterly_dummy
			save_scope_as = hc_casterly
		}
		scope:hc_casterly = {
			add_character_flag = house_customizer_placeholder
			add_to_global_variable_list = {
				name = hc_dummies
				target = this
			}
			house = {
				add_to_global_variable_list = {
					name = dummy_houses_for_hc
					target = this
				}
			}
		}

	}
	if = {
		limit = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Parren_1 }
		}
		create_character = {
			gender = male
			location = title:c_kings_landing.holder.capital_province
			faith = faith:the_seven_main
			culture = title:c_kings_landing.holder.culture
			dynasty_house = house:house_Parren_dummy
			save_scope_as = hc_parren
		}
		scope:hc_parren = {
			add_character_flag = house_customizer_placeholder
			add_to_global_variable_list = {
				name = hc_dummies
				target = this
			}
			house = {
				add_to_global_variable_list = {
					name = dummy_houses_for_hc
					target = this
				}
			}
		}
	}
	## IRON ISLANDS (EUGH) ##
	if = {
		limit = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Greyiron_1 }
		}
		create_character = {
			gender = male
			location = title:c_kings_landing.holder.capital_province
			faith = faith:the_seven_main
			culture = title:c_kings_landing.holder.culture
			dynasty_house = house:house_Greyiron_dummy
			save_scope_as = hc_greyiron
		}
		scope:hc_greyiron = {
			add_character_flag = house_customizer_placeholder
			add_to_global_variable_list = {
				name = hc_dummies
				target = this
			}
			house = {
				add_to_global_variable_list = {
					name = dummy_houses_for_hc
					target = this
				}
			}
		}
	}
	## OLD VALYRIAN FAMILIES ##
	if = {
		limit = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Varezys_1 }
		}
		create_character = {
			gender = male
			location = title:c_kings_landing.holder.capital_province
			faith = faith:the_seven_main
			culture = title:c_kings_landing.holder.culture
			dynasty_house = house:house_Varezys_dummy
			save_scope_as = hc_varezys
		}
		scope:hc_varezys = {
			add_character_flag = house_customizer_placeholder
			add_to_global_variable_list = {
				name = hc_dummies
				target = this
			}
			house = {
				add_to_global_variable_list = {
					name = dummy_houses_for_hc
					target = this
				}
			}
		}
	}
	if = {
		limit = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Mataeryon_1 }
		}
		create_character = {
			gender = male
			location = title:c_kings_landing.holder.capital_province
			faith = faith:the_seven_main
			culture = title:c_kings_landing.holder.culture
			dynasty_house = house:house_Mataeryon_dummy
			save_scope_as = hc_mataeryon
		}
		scope:hc_mataeryon = {
			add_character_flag = house_customizer_placeholder
			add_to_global_variable_list = {
				name = hc_dummies
				target = this
			}
			house = {
				add_to_global_variable_list = {
					name = dummy_houses_for_hc
					target = this
				}
			}
		}
	}
	if = {
		limit = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Belaerys_1 }
		}
		create_character = {
			gender = male
			location = title:c_kings_landing.holder.capital_province
			faith = faith:the_seven_main
			culture = title:c_kings_landing.holder.culture
			dynasty_house = house:house_Belaerys_dummy
			save_scope_as = hc_belaerys
		}
		scope:hc_belaerys = {
			add_character_flag = house_customizer_placeholder
			add_to_global_variable_list = {
				name = hc_dummies
				target = this
			}
			house = {
				add_to_global_variable_list = {
					name = dummy_houses_for_hc
					target = this
				}
			}
		}
	}
}

#Temporary set_designated_heir - !!! Make sure TARGET_HEIR has both father and mother before using it !!!
agot_set_designated_heir = {
	#Saving Parents and House
	$TARGET_PARENT$ = {
		if = {
			limit = { is_male = yes }
			save_scope_as = new_father
			if = {
				limit = { exists = $TARGET_HEIR$.father }
				$TARGET_HEIR$.father = { save_scope_as = old_father }
			}
		}
		else = {
			save_scope_as = new_mother
			if = {
				limit = { exists = $TARGET_HEIR$.mother }
				$TARGET_HEIR$.mother = { save_scope_as = old_mother }
			}
		}
		#Increase Age (so older characters can become heirs too)
		change_age = 100
	}
	if = {
		limit = { exists = $TARGET_HEIR$.house }
		$TARGET_HEIR$.house = { save_scope_as = old_house }
	}
	else = { save_scope_as = heir_is_lowborn }

	#Temporarily Set New Parents
	$TARGET_HEIR$ = {
		if = {
			limit = { exists = scope:new_father }
			set_father = scope:new_father
		}
		else_if = {
			limit = { exists = scope:new_mother }
			set_mother = scope:new_mother
		}
	}

	#Set Designated Heir
	$TARGET_PARENT$ = {
		set_designated_heir = $TARGET_HEIR$
	}

	#Reset Parents and House
	$TARGET_HEIR$ = {
		if = {
			limit = { exists = scope:old_father }
			set_father = scope:old_father
		}
		else_if = {
			limit = { exists = scope:old_father }
			set_mother = scope:old_mother
		}
	}
	if = {
		limit = { exists = scope:heir_is_lowborn }
		if = {
			limit = { NOT = { is_lowborn = yes } }
			$TARGET_HEIR$ = { set_to_lowborn = yes }
		}
	}
	else_if = {
		limit = { NOT = { $TARGET_HEIR$.house = scope:old_house } }
		$TARGET_HEIR$ = { set_house = scope:old_house }
	}
	#Reset Age
	$TARGET_PARENT$ = { change_age = -100 }
}