agot_create_artifact_uller_skull_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_masterwork = yes
	create_artifact = {
		name = uller_skull
		visuals = uller_skull
		description = uller_skull_desc
		type = pedestal
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		history = {
			type = created_before_history
		}
		modifier = uller_skull_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
	}
}

agot_create_hands_hand_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_famed = yes
	create_artifact = {
		name = hands_hand
		visuals = hands_hand
		description = hands_hand_desc
		type = pedestal
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		history = {
			type = created_before_history
		}
		modifier = hands_hand_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
	}
}

agot_create_smugglers_fingers_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_famed = yes
	create_artifact = {
		name = smugglers_fingers
		creator = character:Baratheon_3
		visuals = smugglers_fingers
		description = smugglers_fingers_desc
		type = miscellaneous
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		history = {
			type = created
			date = 8284.1.1
			recipient = character:Seaworth_1
			location = province:4439
		}
		modifier = smugglers_fingers_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
}

agot_create_aemond_eye_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_famed = yes
	create_artifact = {
		name = aemond_eye
		visuals = aemond_eye
		description = aemond_eye_desc
		type = pedestal
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		history = {
			type = created_before_history
		}
		modifier = aemond_eye_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact = {
		save_scope_as = epic
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = aemond_eye_artifact value = yes }
	}
}

agot_create_fox_wedding_cloak_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_famed = yes
	create_artifact = {
		name = fox_wedding_cloak
		visuals = fox_wedding_cloak
		description = fox_wedding_cloak_desc
		type = chest
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		history = {
			type = created_before_history
		}
		modifier = fox_wedding_cloak_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact = {
		save_scope_as = epic
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = fox_wedding_cloak_artifact value = yes }
	}
}

agot_create_stars_of_hugor_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_illustrious = yes
	create_artifact = {
		name = stars_of_hugor
		visuals = stars_of_hugor
		description = stars_of_hugor_desc
		type = pedestal
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		history = {
			type = created_before_history
		}
		modifier = stars_of_hugor_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact = {
		save_scope_as = epic
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = stars_of_hugor_artifact value = yes }
	}
}

agot_create_harp_of_the_bard_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_famed = yes
	create_artifact = {
		name = harp_of_the_bard
		visuals = harp_of_the_bard
		description = harp_of_the_bard_desc
		type = pedestal
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		history = {
			type = created_before_history
		}
		modifier = harp_of_the_bard_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact = {
		save_scope_as = epic
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = harp_of_the_bard_artifact value = yes }
	}
}

agot_create_symeon_left_eye_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_illustrious = yes
	create_artifact = {
		name = symeon_left_eye
		visuals = symeon_eye
		description = symeon_eye_desc
		type = miscellaneous
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		history = {
			type = created_before_history
		}
		modifier = symeon_eye_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact = {
		save_scope_as = epic
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = symeon_left_eye_artifact value = yes }
	}
}

agot_create_symeon_right_eye_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_illustrious = yes
	create_artifact = {
		name = symeon_right_eye
		visuals = symeon_eye
		description = symeon_eye_desc
		type = miscellaneous
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		history = {
			type = created_before_history
		}
		modifier = symeon_eye_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact = {
		save_scope_as = epic
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = symeon_right_eye_artifact value = yes }
	}
}

agot_create_oily_black_stone_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_masterwork = yes
	create_artifact = {
		name = oily_black_stone
		visuals = oily_black_stone
		description = oily_black_stone_desc
		type = miscellaneous
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		history = {
			type = created_before_history
		}
		modifier = oily_black_stone_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact = {
		save_scope_as = epic
	}
}

agot_create_giants_tooth_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_masterwork = yes
	create_artifact = {
		name = giants_tooth
		visuals = giants_tooth
		description = giants_tooth_desc
		type = pedestal
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		history = {
			type = created_before_history
		}
		modifier = giants_tooth_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact = {
		save_scope_as = epic
		save_scope_value_as = {
			name = giants_tooth
			value = yes
		}
	}
}

agot_create_forgotten_magnars_drinking_horn_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_famed = yes
	create_artifact = {
		name = forgotten_magnars_drinking_horn
		visuals = forgotten_magnars_drinking_horn
		description = forgotten_magnars_drinking_horn_desc
		type = pedestal
		wealth = scope:wealth
		quality = scope:quality
		template = forgotten_magnars_drinking_horn_artifact_template
		history = {
			type = created_before_history
		}
		modifier = forgotten_magnars_drinking_horn_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact = {
		save_scope_as = epic
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = forgotten_magnars_drinking_horn_artifact value = yes }
	}
}

agot_create_eggs_boot_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_famed = yes
	create_artifact = {
		name = eggs_boot
		visuals = eggs_boot
		description = eggs_boot_desc
		type = miscellaneous
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		history = {
			type = created_before_history
		}
		modifier = eggs_boot_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact = {
		save_scope_as = epic
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = eggs_boot_artifact value = yes }
	}
}

agot_create_harmund_tongue_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_masterwork = yes
	create_artifact = {
		name = harmund_tongue
		visuals = harmund_tongue
		description = harmund_tongue_desc
		type = miscellaneous
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		history = {
			type = created_before_history
		}
		modifier = harmund_tongue_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact = {
		save_scope_as = epic
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = harmund_tongue_artifact value = yes }
	}
}

agot_create_rhaegar_ruby_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_illustrious = yes
	create_artifact = {
		name = rhaegar_ruby
		visuals = rhaegar_ruby
		description = rhaegar_ruby_desc
		type = miscellaneous
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		history = {
			type = created_before_history
		}
		modifier = rhaegar_ruby_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact = {
		save_scope_as = epic
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = rhaegar_ruby_artifact value = yes }
	}
}

agot_create_bran_set_square_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_famed = yes
	create_artifact = {
		name = bran_set_square
		visuals = bran_set_square
		description = bran_set_square_desc
		type = pedestal
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		history = {
			type = created_before_history
		}
		modifier = bran_set_square_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact = {
		save_scope_as = epic
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = bran_set_square_artifact value = yes }
	}
}

agot_create_artifact_bittersteel_skull_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_illustrious = yes
	create_artifact = {
		name = bittersteel_skull
		visuals = bittersteel_skull
		description = bittersteel_skull_desc
		type = pedestal
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		history = {
			type = created
			date = 8241.1.1
			recipient = character:Blackfyre_13
			location = province:7472
		}
		modifier = bittersteel_skull_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact = {
		save_scope_as = epic
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = bittersteel_skull_artifact value = yes }
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8252.11.11
			RECIPIENT = character:Blackfyre_14
		}
	}
}

agot_create_artifact_maelys_skull_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_illustrious = yes
	create_artifact = {
		name = maelys_skull
		visuals = maelys_skull
		description = maelys_skull_desc
		type = pedestal
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		history = {
			type = created_before_history
		}
		modifier = maelys_skull_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact = {
		save_scope_as = epic
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = maelys_skull_artifact value = yes }
	}
}

agot_create_artifact_daemon_blackfyre_skull_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_illustrious = yes
	create_artifact = {
		name = daemon_blackfyre_skull
		visuals = daemon_blackfyre_skull
		description = daemon_blackfyre_skull_desc
		type = pedestal
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		history = {
			type = created
			date = 8252.11.11
			recipient = character:Blackfyre_14
			location = province:7472
		}
		modifier = daemon_blackfyre_skull_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact = {
		save_scope_as = epic
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = daemon_blackfyre_skull_artifact value = yes }
	}
}

agot_create_artifact_seahorse_statue_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		type = sculpture
		template = seahorse_statue_template
		visuals = seahorse_statue
		wealth = scope:wealth
		quality = scope:quality
		name = seahorse_statue
		description = seahorse_statue_desc
		history = {
			type = created_before_history
		}
		modifier = seahorse_statue_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
	}
}

agot_create_artifact_iron_throne_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		type = throne_special
		template = iron_throne_template
		visuals = iron_throne
		wealth = scope:wealth
		quality = scope:quality
		name = iron_throne
		description = iron_throne_desc
		history = {
			type = created_before_history
		}
		modifier = iron_throne_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = iron_throne
		set_variable = historical_throne
		set_variable = {
			name = artifact_succession_title
			value = title:c_kings_landing
		}
	}
}

agot_create_fake_iron_throne_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		type = throne_special
		template = iron_throne_template
		visuals = iron_throne
		wealth = 1
		quality = 1
		name = iron_throne
		description = iron_throne_desc
		history = {
			type = created_before_history
		}
		modifier = iron_throne_modifier
		save_scope_as = fake_artifact
	}

	scope:newly_created_artifact ?= {
		set_variable = historical_throne
		set_variable = {
			name = artifact_succession_title
			value = title:c_kings_landing
		}
	}
}

agot_create_artifact_seastone_chair_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		type = throne_special
		template = seastone_chair_template
		visuals = seastone_chair
		wealth = scope:wealth
		quality = scope:quality
		name = seastone_chair
		description = seastone_chair_desc
		history = {
			type = created_before_history
		}
		modifier = seastone_chair_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = seastone_chair
		set_variable = {
			name = artifact_succession_title
			value = title:c_pyke
		}
	}
}

agot_create_artifact_gilded_throne_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		type = throne_special
		template = gilded_throne_template
		visuals = gilded_throne
		wealth = scope:wealth
		quality = scope:quality
		name = gilded_throne
		description = gilded_throne_desc
		history = {
			type = created_before_history
		}
		modifier = gilded_throne_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = gilded_throne
		set_variable = historical_throne
		set_variable = {
			name = artifact_succession_title
			value = title:c_casterly_rock
		}
	}
}

agot_create_artifact_ruined_oakenseat_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		type = throne_special
		template = oakenseat_template
		visuals = ruined_oakenseat
		wealth = scope:wealth
		quality = scope:quality
		name = ruined_oakenseat
		description = ruined_oakenseat_desc
		history = {
			type = created_before_history
		}
		modifier = ruined_oakenseat_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = oakenseat
		set_variable = ruined_oakenseat
		set_variable = historical_throne
		set_variable = {
			name = artifact_succession_title
			value = title:c_highgarden
		}
	}
}

agot_create_artifact_restored_oakenseat_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		type = throne_special
		template = oakenseat_template
		visuals = restored_oakenseat
		wealth = scope:wealth
		quality = scope:quality
		name = restored_oakenseat
		description = restored_oakenseat_desc
		modifier = restored_oakenseat_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = artifact_succession_title
			value = title:c_highgarden
		}
		set_variable = oakenseat
		set_variable = restored_oakenseat
		set_variable = historical_throne
	}
}

agot_create_artifact_painted_table_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		type = throne_special
		template = painted_table_template
		visuals = painted_table
		wealth = scope:wealth
		quality = scope:quality
		name = painted_table
		description = painted_table_desc
		modifier = painted_table_modifier
		history = {
			type = created
			date = 7996.1.2
			recipient = character:Targaryen_27 # Aegon Targaryen
			location = province:4415
		}
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = painted_table
		set_variable = historical_throne
		set_variable = {
			name = artifact_succession_title
			value = title:c_dragonstone
		}
		add_artifact_title_history = {
			target = title:d_dragonstone
			date = 7996.1.2
		}
	}
}

agot_create_artifact_high_seat_of_winter_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		type = throne_special
		template = high_seat_of_winter_template
		visuals = high_seat_of_winter_visuals
		wealth = scope:wealth
		quality = scope:quality
		name = high_seat_of_winter_name
		description = high_seat_of_winter_desc
		modifier = high_seat_of_winter_modifier
		history = {
			type = created_before_history
		}
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = high_seat_of_winter
		set_variable = historical_throne
		set_variable = {
			name = artifact_succession_title
			value = title:c_winterfell
		}
		add_artifact_title_history = {
			target = title:d_winterfell
		}
	}
}
