agot_create_artifact_winter_rose_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_masterwork = yes

	create_artifact = {
		name = agot_artifact_winter_rose
		description = agot_artifact_winter_rose_desc
		visuals = winter_rose
		type = miscellaneous
		modifier = artifact_monthly_minor_prestige_8_modifier
		save_scope_as = newly_created_artifact
		wealth = scope:wealth
		quality = scope:quality
	}
}

agot_recreate_artifact_the_white_book_effect = {
	set_artifact_rarity_illustrious = yes
	create_artifact = {
		name = the_white_book_name
		visuals = white_book_visuals
		description = the_white_book_desc
		type = miscellaneous
		wealth = 100
		quality = 100
		template = vs_adders_fang_template
		modifier = the_white_book_modifier
		save_scope_as = white_book_created
		decaying = no
	}
	scope:white_book_created = {
		set_variable = {
			name = white_book
			value = yes
		}
		set_variable = {
			name = historical_unique_artifact
			value = yes
		}
	}
}

agot_create_artifact_the_white_book_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	$CREATOR$ = {
		save_scope_as = creator
	}
	set_artifact_rarity_illustrious = yes
	create_artifact = {
		name = the_white_book_name
		creator = $CREATOR$
		visuals = white_book_visuals
		description = the_white_book_desc
		type = miscellaneous
		wealth = scope:wealth
		quality = scope:quality
		template = vs_adders_fang_template
		history = {
			type = created
			date = 8010.1.1
			recipient = character:Velaryon_15  # Corlys Velaryon
			location = province:4151 #The Red Keep
			actor = scope:creator
		}
		modifier = the_white_book_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact = {
		set_variable = {
			name = white_book
			value = yes
		}
		set_variable = {
			name = historical_unique_artifact
			value = yes
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8030.1.1
			RECIPIENT = character:Errol_12 #Serwyn Errol
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8038.1.1
			RECIPIENT = character:Swyft_15 #The Bastard of Cornfield
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8042.9.1
			RECIPIENT = character:Langward_12 #Harold Langward
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8048.3.7
			RECIPIENT = character:Morrigen_16 #Gyles Morrigen
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8082.1.1
			RECIPIENT = character:Redwyne_32 #Ryam Redwyne
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8105.1.1
			RECIPIENT = character:Westerling_23 #Harold Westerling
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8112.1.1
			RECIPIENT = character:Cole_11 #Criston the Kingmaker
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8130.4.4
			RECIPIENT = character:Fell_27 #Willis Fell
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8133.5.1
			RECIPIENT = character:Massey_39 #Robin Massey - Removed by Unwin Peake
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8133.5.2
			RECIPIENT = character:Kingsguard_6 #Marston Waters
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8136.1.1
			RECIPIENT = character:Ruskyn_12 #Raynard Ruskyn
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8140.1.1
			RECIPIENT = character:Coldwater_22 #Orin Coldwater
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8146.1.1
			RECIPIENT = character:Caron_33 #Reynard Caron
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8161.6.9
			RECIPIENT = character:Targaryen_89 #Aemon The Dragonknight
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8178.6.1
			RECIPIENT = character:Darry_48 # Demon of Darry
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8194.1.1
			RECIPIENT = character:Serry_36 # Red Robert Flowers
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8213.1.1
			RECIPIENT = character:Connington_41 #The Pale Griffin
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8236.3.2
			RECIPIENT = character:Tall_1 #Duncan the Tall
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8259.6.1
			RECIPIENT = character:Hightower_3 # The White Bull
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8283.10.20
			RECIPIENT = character:Selmy_3 #Barristan the Bold
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8298.12.23
			RECIPIENT = character:Lannister_7 #Jaime the Kingslayer
		}
	}
}

agot_create_artifact_lucerys_gun_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_illustrious = yes

	create_artifact = {
		name = lucerys_gun_name
		description = lucerys_gun_desc
		visuals = sword
		type = sword
		modifier = lucerys_gun_modifier
		save_scope_as = newly_created_artifact
		wealth = scope:wealth
		quality = scope:quality
	}
}

agot_create_artifact_trinket_of_qolab_generic_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_masterwork = yes

	create_artifact = {
		name = agot_artifact_trinket_of_qolab
		description = agot_artifact_trinket_of_qolab_desc
		visuals = crown_of_qolab_generic_visuals
		type = miscellaneous
		modifier = queen_of_love_and_beauty_artifact_modifier
		save_scope_as = newly_created_artifact
		wealth = scope:wealth
		quality = scope:quality
	}
}

agot_create_artifact_trinket_of_qolab_baelor_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_masterwork = yes

	create_artifact = {
		name = agot_artifact_trinket_of_qolab
		description = agot_artifact_trinket_of_qolab_desc
		visuals = baelors_crown_visuals
		type = miscellaneous
		modifier = queen_of_love_and_beauty_artifact_modifier
		save_scope_as = newly_created_artifact
		wealth = scope:wealth
		quality = scope:quality
	}
}

agot_create_artifact_trinket_of_qolab_03_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_masterwork = yes

	create_artifact = {
		name = agot_artifact_trinket_of_qolab
		description = agot_artifact_trinket_of_qolab_desc
		visuals = qolab_crown_03_visuals
		type = miscellaneous
		modifier = queen_of_love_and_beauty_artifact_modifier
		save_scope_as = newly_created_artifact
		wealth = scope:wealth
		quality = scope:quality
	}
}

agot_create_artifact_trinket_of_qolab_04_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_masterwork = yes

	create_artifact = {
		name = agot_artifact_trinket_of_qolab
		description = agot_artifact_trinket_of_qolab_desc
		visuals = qolab_crown_04_visuals
		type = miscellaneous
		modifier = queen_of_love_and_beauty_artifact_modifier
		save_scope_as = newly_created_artifact
		wealth = scope:wealth
		quality = scope:quality
	}
}

agot_create_artifact_trinket_of_qolab_05_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_masterwork = yes

	create_artifact = {
		name = agot_artifact_trinket_of_qolab
		description = agot_artifact_trinket_of_qolab_desc
		visuals = qolab_crown_05_visuals
		type = miscellaneous
		modifier = queen_of_love_and_beauty_artifact_modifier
		save_scope_as = newly_created_artifact
		wealth = scope:wealth
		quality = scope:quality
	}
}

agot_create_artifact_trinket_of_qolab_06_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_masterwork = yes

	create_artifact = {
		name = agot_artifact_trinket_of_qolab
		description = agot_artifact_trinket_of_qolab_desc
		visuals = qolab_crown_06_visuals
		type = miscellaneous
		modifier = queen_of_love_and_beauty_artifact_modifier
		save_scope_as = newly_created_artifact
		wealth = scope:wealth
		quality = scope:quality
	}
}

agot_create_artifact_trinket_of_qolab_gardener_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_masterwork = yes

	create_artifact = {
		name = agot_artifact_trinket_of_qolab
		description = agot_artifact_trinket_of_qolab_desc
		visuals = crown_of_gardener_peace_visuals
		type = miscellaneous
		modifier = queen_of_love_and_beauty_artifact_modifier
		save_scope_as = newly_created_artifact
		wealth = scope:wealth
		quality = scope:quality
	}
}

agot_create_artifact_trinket_of_qolab_winter_roses_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_illustrious = yes

	create_artifact = {
		name = agot_artifact_trinket_of_qolab
		description = agot_artifact_trinket_of_qolab_desc
		visuals = crown_of_winter_roses_visuals
		type = miscellaneous
		modifier = queen_of_love_and_beauty_artifact_modifier
		save_scope_as = newly_created_artifact
		wealth = scope:wealth
		quality = scope:quality
	}
}

agot_create_artifact_chain_link_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_common = yes

	create_artifact = {
		name = agot_artifact_link_name
		description = agot_artifact_link_desc_no_maester
		visuals = maester_link
		type = maester_link
		template = maester_artifact_template
		modifier = artifact_placeholder_modifier
		save_scope_as = newly_created_artifact
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
	}
	hidden_effect_new_object = {
		scope:newly_created_artifact = {
			clear_artifact_modifiers = yes
			agot_artifact_link_set_modifiers = yes
			agot_artifact_link_set_count = yes
			set_variable = {
				name = links_collected
				value = 1
			}

			if = {
				limit = {
					agot_any_maester_in_citadel = yes
				}
				agot_random_maester_in_location_effect = { LOCATION = global_var:citadel_title.title_province }

				set_artifact_description = agot_artifact_link_desc
			}

			set_variable = {
				name = maesterwork
				value = yes
			}
			set_variable = {
				name = creator
				value = scope:owner
			}
		}
	}
}

agot_create_artifact_grandmaester_chain_effect = {
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	create_artifact = {
		name = artifact_grandmaester_chain
		description = artifact_grandmaester_chain_desc
		visuals = grandmaester_chain
		type = grandmaester_chain
		template = maester_artifact_template
		modifier = artifact_placeholder_modifier
		history = {
			type = created_before_history
		}
		save_scope_as = newly_created_artifact
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
	}

	hidden_effect_new_object = {
		scope:newly_created_artifact = {
			clear_artifact_modifiers = yes
			add_artifact_modifier = artifact_monthly_prestige_5_modifier
			set_variable = {
				name = maesterwork
				value = yes
			}
			add_artifact_history = {
				type = given
				recipient = scope:owner
			}
		}
	}
}

agot_create_artifact_archmaester_mask_effect = {
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	create_artifact = {
		name = agot_artifact_archmaester_mask_name
		description = agot_artifact_archmaester_mask_desc
		visuals = archmaester_mask
		type = archmaester_mask
		template = maester_artifact_template
		modifier = artifact_placeholder_modifier
		history = {
			type = created_before_history
		}
		save_scope_as = newly_created_artifact
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
	}
	hidden_effect_new_object = {
		scope:newly_created_artifact = {
			clear_artifact_modifiers = yes
			agot_artifact_archmaester_set_specialty_effect = yes

			set_variable = {
				name = maesterwork
				value = yes
			}
			add_artifact_history = {
				type = given
				recipient = scope:owner
			}
			equip_artifact_to_owner_replace = yes
		}
	}
}

agot_create_artifact_archmaester_ring_effect = {
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	create_artifact = {
		name = agot_artifact_archmaester_ring_name
		description = agot_artifact_archmaester_ring_desc
		visuals = archmaester_ring
		type = archmaester_ring
		template = maester_artifact_template
		modifier = artifact_placeholder_modifier
		history = {
			type = created_before_history
		}
		save_scope_as = newly_created_artifact
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
	}
	hidden_effect_new_object = {
		scope:newly_created_artifact = {
			clear_artifact_modifiers = yes
			agot_artifact_archmaester_set_specialty_effect = yes

			set_variable = {
				name = maesterwork
				value = yes
			}
			add_artifact_history = {
				type = given
				recipient = scope:owner
			}
			equip_artifact_to_owner_replace = yes
		}
	}
}

agot_create_artifact_archmaester_rod_effect = {
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	create_artifact = {
		name = agot_artifact_archmaester_rod_name
		description = agot_artifact_archmaester_rod_desc
		visuals = archmaester_rod
		type = archmaester_rod
		template = maester_artifact_template
		modifier = artifact_placeholder_modifier
		history = {
			type = created_before_history
		}
		save_scope_as = newly_created_artifact
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
	}
	hidden_effect_new_object = {
		scope:newly_created_artifact = {
			clear_artifact_modifiers = yes
			agot_artifact_archmaester_set_specialty_effect = yes

			set_variable = {
				name = maesterwork
				value = yes
			}
			add_artifact_history = {
				type = given
				recipient = scope:owner
			}
			equip_artifact_to_owner_replace = yes
		}
	}
}

agot_create_artifact_glass_candle_effect = {
	$OWNER$ = { save_scope_as = owner }

	save_scope_value_as = {
		name = candle_color
		value = flag:$COLOR$
	}

	set_artifact_rarity_illustrious = yes

	create_artifact = {
		name = artifact_glass_candle
		description = placeholder
		visuals = glass_candle
		type = glass_candle
		template = glass_candle_artifact_template
		modifier = glass_candle_modifier
		history = {
			type = created_before_history
		}
		save_scope_as = newly_created_artifact
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
	}
	hidden_effect_new_object = {

		scope:newly_created_artifact = {
			set_variable = {
				name = glass_candle
				value = yes
			}

			set_artifact_feature_group = glass_candle_color
			set_artifact_description = agot_artifact_glass_candle_desc

			add_artifact_history = {
				type = given
				recipient = scope:owner
			}

			if = {
				limit = {
					scope:owner = {
						has_trait = archmaester
					}
				}
				set_variable = {
					name = maesterwork
					value = yes
				}
			}

			if = {
				limit = {
					global_var:magic_level = 2
				}
				reforge_artifact = {
					type = glass_candle
					description = agot_artifact_glass_candle_desc
					modifier = glass_candle_modifier_higher
					generate_history = no
				}
			}
		}
	}
}

agot_create_artifact_saans_scrolls_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_illustrious = yes

	create_artifact = {
		name = agot_artifact_saans_scrolls_name
		description = agot_artifact_saans_scrolls_desc
		visuals = scroll
		type = miscellaneous
		modifier = saans_scrolls_artifact_modifier
		save_scope_as = newly_created_artifact
		wealth = scope:wealth
		quality = scope:quality
		history = { type = created_before_history }
	}
}

agot_create_artifact_moons_rod_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = agot_artifact_moons_rod_name
		description = agot_artifact_moons_rod_desc
		type = pedestal
		modifier = moons_rod_modifier
		visuals = moons_rod_visuals
		wealth = scope:wealth
		quality = scope:quality
		template = moons_rod_template
		history = {
			type = created
			date = 8048.6.1
				recipient = character:Poor_Fellows_4 # Septon Moon
			location = province:3508
		}
		#modifier = shieraseastar_necklace_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
	}
}

agot_create_artifact_myrish_lace_effect = {
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_masterwork = yes

	# Create the artifact
	create_artifact = {
		name = agot_artifact_myrish_lace_name
		description = agot_artifact_myrish_lace_desc
		type = miscellaneous
		modifier = myrish_lace_modifier
		visuals = myrish_lace_visuals
		wealth = scope:wealth
		quality = scope:quality
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		save_scope_as = epic
	}
}

agot_create_artifact_norvoshi_bear_carving_effect = {
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_common = yes

	# Create the artifact
	create_artifact = {
		name = agot_artifact_norvoshi_bear_carving_name
		description = agot_artifact_norvoshi_bear_carving_desc
		type = miscellaneous
		template = norvoshi_bear_carving_template
		modifier = norvoshi_bear_carving_modifier
		visuals = norvoshi_bear_carving_visuals
		wealth = scope:wealth
		quality = scope:quality
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		save_scope_as = epic
	}
}

agot_create_artifact_pentoshi_cheese_effect = {
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_common = yes

	# Create the artifact
	create_artifact = {
		name = agot_artifact_pentoshi_cheese_name
		description = agot_artifact_pentoshi_cheese_desc
		type = miscellaneous
		modifier = pentoshi_cheese_modifier
		visuals = pentoshi_cheese_visuals
		wealth = scope:wealth
		quality = scope:quality
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		save_scope_as = epic
	}
}

agot_create_artifact_dothraki_bow_effect = {
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_masterwork = yes

	save_scope_value_as = { # Needed to avoid errors with feature groups we don't use
		name = bow_type
		value = flag:artifact_bow_type_composite
	}
	# Create the artifact
	create_artifact = {
		name = agot_artifact_dothraki_bow_name
		description = agot_artifact_dothraki_bow_desc
		type = bow
		modifier = dothraki_bow_modifier
		visuals = dothraki_bow_visuals
		wealth = scope:wealth
		quality = scope:quality
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = { # For bow artifact, has required features
		# set_artifact_feature_group = bow_wood
		# set_artifact_feature_group = bow_string
		save_scope_as = epic
	}
}

agot_create_artifact_bloodraven_longbow_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_famed = yes
	save_scope_value_as = { # Needed to avoid errors with feature groups we don't use
		name = bow_type
		value = flag:artifact_bow_type_longbow
	}
	# Create the artifact
	create_artifact = {
		name = bloodraven_longbow_name
		description = bloodraven_longbow_description
		visuals = weirwood_longbow_visuals
		type = longbow
		wealth = scope:wealth
		quality = scope:quality
		template = weirwood_longbow_template
		history = {
			type = created
			date = 8184.1.1 # Year he got greensight trait
			recipient = character:Targaryen_96
			location = province:1686
		}
		modifier = bloodraven_longbow_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact ?= {
		set_variable = {
			name = bloodraven_longbow_artifact
			value = yes
		}
		set_variable = {
			name = historical_unique_artifact
			value = yes
		}
	}
}

agot_create_artifact_weirwood_longbow_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_masterwork = yes
	save_scope_value_as = { # Needed to avoid errors with feature groups we don't use
		name = bow_type
		value = flag:artifact_bow_type_longbow
	}
	# Create the artifact
	create_artifact = {
		name = weirwood_longbow_name
		description = weirwood_longbow_description
		visuals = weirwood_longbow_visuals
		type = longbow
		wealth = scope:wealth
		quality = scope:quality
		template = weirwood_longbow_template
		modifier = weirwood_longbow_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact ?= {
		equip_artifact_to_owner_replace = yes
		set_variable = {
			name = weirwood_longbow_artifact
			value = yes
		}
	}
}

agot_create_artifact_dragonbone_longbow_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_masterwork = yes
	save_scope_value_as = { # Needed to avoid errors with feature groups we don't use
		name = bow_type
		value = flag:artifact_bow_type_longbow
	}
	# Create the artifact
	create_artifact = {
		name = dragonbone_longbow_name
		description = dragonbone_longbow_description
		visuals = dragonbone_longbow_visuals
		type = longbow
		wealth = scope:wealth
		quality = scope:quality
		template = dragonbone_longbow_template
		modifier = dragonbone_longbow_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact ?= {
		equip_artifact_to_owner_replace = yes
		set_variable = {
			name = dragonbone_longbow_artifact
			value = yes
		}
	}
}

agot_create_artifact_dragon_skull_effect = {
	$OWNER$ = { save_scope_as = owner }
	$DRAGON$ = { save_scope_as = dragon }

	# Set rarity
	if = { # Historic dragon skulls get defined values
		limit = {
			OR = {
				scope:dragon = character:dragon_balerion
				scope:dragon = character:dragon_vhagar
				scope:dragon = character:dragon_meraxes
			}
		}
		set_artifact_rarity_illustrious = yes
	}
	else_if = { # Else go by size
		limit = {
			scope:dragon.dragon_size >= large_dragon_size_value
		}
		set_artifact_rarity_illustrious = yes
	}
	else_if = {
		limit = {
			scope:dragon.dragon_size >= medium_dragon_size_value
		}
		set_artifact_rarity_famed = yes
	}
	else = {
		set_artifact_rarity_masterwork = yes
	}

	create_artifact = {
		name = agot_artifact_dragon_skull_name
		description = agot_artifact_dragon_skull_name
		visuals = dragon_skull
		type = dragon_skull
		template = dragon_skull_template
		modifier = dragon_skull_modifier
		save_scope_as = newly_created_artifact
		wealth = scope:wealth
		quality = scope:quality
		decaying = no
		generate_history = no
	}

	hidden_effect_new_object = {
		scope:newly_created_artifact = {

			set_variable = {
				name = dragon
				value = scope:dragon
			}

			set_variable = {
				name = killer
				value = $KILLER$
			}

			# Get better dragon riders
			if = {
				limit = {
					scope:dragon = character:dragon_balerion
					exists = character:Targaryen_27
					# In case of pre aegon taming bookmark
					title:c_ruins.holder = {
						any_owned_story = {
							story_type = story_dragon_variable_storage
							var:dragon_id ?= scope:dragon
							any_in_list = {
								variable = past_riders
								this = character:Targaryen_27
							}
						}
					}
				}
				set_variable = {
					name = famous_rider
					value = character:Targaryen_27
				}
			}

			if = {
				limit = {
					NOT = { has_variable = famous_rider }
					title:c_ruins.holder = {
						any_owned_story = {
							story_type = story_dragon_variable_storage
							var:dragon_id ?= scope:dragon
							has_variable_list = past_riders
						}
					}
				}
				title:c_ruins.holder = {
					random_owned_story = {
						limit = {
							story_type = story_dragon_variable_storage
							var:dragon_id ?= scope:dragon
							has_variable_list = past_riders
						}

						set_local_variable = {
							name = count
							value = -1
						}

						every_in_list = {
							variable = past_riders
							change_local_variable = {
								name = count
								add = 1
							}
						}

						ordered_in_list = {
							variable = past_riders
							position = local_var:count
							save_scope_as = past_rider
						}
						remove_local_variable = count
					}
				}
				set_variable = {
					name = rider
					value = scope:past_rider
				}
			}

			set_artifact_feature_group = dragon_skull_size
			set_artifact_description = agot_artifact_dragon_skull_desc

			if = {
				limit = { scope:quality = 70 }
				reforge_artifact = {
					type = dragon_skull
					modifier = dragon_skull_modifier_famed
				}
			}
			else_if = {
				limit = { scope:quality = 100 }
				reforge_artifact = {
					type = dragon_skull
					modifier = dragon_skull_modifier_illustrious
				}
			}

			if = {
				limit = {
					OR = {
						has_artifact_feature = dragon_skull_size_small
					}
				}
				reforge_artifact = {
					type = pedestal
					visuals = dragon_skull_tiny
					generate_history = no
				}
			}
			if = {
				limit = {
					trigger_if = {
						limit = {
							exists = root
						}
						NOT = { scope:owner = root }
					}
					trigger_else = {
						always = yes
					}
				}

				set_owner = {
					target = scope:owner
					#generate_history = no
				}
			}
		}
	}
}

agot_create_artifact_dragon_horn_effect = {
	$OWNER$ = { save_scope_as = owner }
	$DRAGON$ = { save_scope_as = dragon }

	set_artifact_rarity_illustrious = yes

	create_artifact = {
		name = artifact_dragon_horn
		description = artifact_dragon_horn
		visuals = dragon_horn
		type = dragon_horn
		template = dragon_horn_template
		modifier = dragon_horn_modifier
		generate_history = no
		save_scope_as = newly_created_artifact
		wealth = scope:wealth
		quality = scope:quality
	}

	hidden_effect_new_object = {
		scope:newly_created_artifact = {
			if = { # We set dragon's scope to owner for horns of old valyria
				limit = {
					NOT = { scope:dragon = scope:owner }
				}
				set_variable = {
					name = dragon
					value = scope:dragon
				}
				# Any new horns are created by owner
				set_variable = {
					name = creator
					value = scope:owner
				}
				add_artifact_history = {
					type = created
					recipient = scope:owner
				}
			}
			else = { # Otherwise created in old valyria
				add_artifact_history = {
					type = created_before_history
				}
				add_artifact_history = {
					type = given
					recipient = scope:owner
				}
			}
			set_artifact_description = agot_artifact_dragon_horn_desc
		}
	}
}

agot_create_artifact_dragon_doll_01_effect = { 
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_masterwork = yes
	create_artifact = {
		name = dragon_doll_01
		visuals = dragon_doll_01
		description = dragon_doll_01_desc
		type = dragon_doll
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		modifier = dragon_doll_01_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = dragondoll_01 value = yes	}
	}
}

agot_create_artifact_dragon_doll_02_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_masterwork = yes
	create_artifact = {
		name = dragon_doll_02
		visuals = dragon_doll_02
		description = dragon_doll_02_desc
		type = dragon_doll
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		modifier = dragon_doll_02_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = dragondoll_02 value = yes	}
	}
}

agot_create_artifact_dragon_doll_03_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	$CREATOR$ = {
		save_scope_as = creator
	}
	set_artifact_rarity_masterwork = yes
	create_artifact = {
		name = dragon_doll_03
		creator = $CREATOR$
		visuals = dragon_doll_03
		description = dragon_doll_03_desc
		type = dragon_doll
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		modifier = dragon_doll_02_modifier
		save_scope_as = newly_created_artifact
		history = {
			type = created
			date = 8053.7.1
			recipient = character:Targaryen_44 # Daenerys
			location = province:4415 # Dragonstone
			actor = scope:creator
		}
		decaying = no
	}
	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = dragondoll_03 value = yes	}
		
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8060.6.1
			RECIPIENT = character:Targaryen_47 # Alyssa
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8062.1.1
			RECIPIENT = character:Targaryen_48 # Maegelle
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8064.1.1
			RECIPIENT = character:Targaryen_50 # Daella
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8067.1.1
			RECIPIENT = character:Targaryen_51 # Saera
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8071.1.1
			RECIPIENT = character:Targaryen_52 # Viserra
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8080.6.1
			RECIPIENT = character:Targaryen_55 # Gael
		}
	}
}

agot_create_artifact_dragon_doll_04_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	$CREATOR$ = {
		save_scope_as = creator
	}
	set_artifact_rarity_masterwork = yes
	create_artifact = {
		name = dragon_doll_04
		creator = $CREATOR$
		visuals = dragon_doll_04
		description = dragon_doll_04_desc
		type = pedestal
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		modifier = dragon_doll_02_modifier
		save_scope_as = newly_created_artifact
		history = {
			type = created
			date = 8052.1.1
			recipient = character:Targaryen_43 # Aegon
			location = province:4415 # Dragonstone
			actor = scope:creator
		}
		decaying = no
	}
	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = dragondoll_04 value = yes	}
		
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8055.1.1
			RECIPIENT = character:Targaryen_45 # Aemon
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8057.1.1
			RECIPIENT = character:Targaryen_46 # Baelon
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8063.1.1
			RECIPIENT = character:Targaryen_49 # Vaegon
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8073.10.1
			RECIPIENT = character:Targaryen_53 # Gaemon
		}
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8077.1.15
			RECIPIENT = character:Targaryen_54 # Valerion
		}
	}
}

agot_create_artifact_dragon_doll_05_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	$CREATOR$ = {
		save_scope_as = creator
	}
	set_artifact_rarity_masterwork = yes
	create_artifact = {
		name = dragon_doll_05
		creator = $CREATOR$
		visuals = dragon_doll_05
		description = dragon_doll_05_desc
		type = dragon_doll
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		modifier = dragon_doll_02_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = dragondoll_05 value = yes	}
	}
}

agot_create_artifact_viserra_mirror_effect = {
	$OWNER$ = {
		save_scope_as = owner
	}
	set_artifact_rarity_illustrious = yes
	create_artifact = {
		name = viserra_mirror
		visuals = viserra_mirror
		description = viserra_mirror_desc
		type = mirror
		wealth = scope:wealth
		quality = scope:quality
		template = general_unique_template
		modifier = viserra_mirror_modifier
		history = {
			type = created
			date = 7856.1.1
			recipient = character:Targaryen_13_C  # Elaena
			location = province:4415 # Dragonstone
		}
		decaying = no
	}
	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 7878.1.1
			RECIPIENT = character:Targaryen_15  # Daenys
		}
		
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 7930.1.1
			RECIPIENT = character:Targaryen_21  # Rhaella
		}
		
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 7955.6.1
			RECIPIENT = character:Targaryen_138  # Rhae
		}
		
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 7981.1.1
			RECIPIENT = character:Targaryen_137  # Ariana
		}
		
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 7994.1.1
			RECIPIENT = character:Targaryen_29  # Queen Rhaenys
		}
		
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8027.1.1
			RECIPIENT = character:Targaryen_32  # Queen Rhaena
		}
		
		agot_add_artifact_history = {
			ARTIFACT = this
			TYPE = inherited
			DATE = 8080.1.1
			RECIPIENT = character:Targaryen_52 # Viserra
		}
	}
}

agot_create_artifact_horn_of_herrock_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	# Create the artifact
	create_artifact = {
		name = horn_of_herrock_name
		description = horn_of_herrock_desc
		type = horn
		visuals = horn_of_herrock
		wealth = scope:wealth
		quality = scope:quality
		template = horn_of_herrock_template
		history = {
			type = created
			date = 5334.1.1
			recipient = character:KenningK_4 # Herrock "the Whoreson" Kenning
			location = province:2863
		}
		modifier = horn_of_herrock_modifier
		save_scope_as = newly_created_artifact
	}

	scope:newly_created_artifact = {
		set_variable = { name = horn_of_herrock_artifact value = yes }
		set_variable = { name = historical_unique_artifact value = yes }
		add_artifact_title_history = {
			target = title:c_kayce
			date = 5365.1.1
		}
		if = {
			limit = { exists = var:horn_of_herrock_artifact }
			#To prevent 'unused except in loc' errors :catto:
		}
	}
}

agot_create_weirwood_flute_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes

	create_artifact = {
		name = weirwood_flute_name
		description = weirwood_flute_desc
		type = horn
		visuals = weirwood_flute_visuals
		wealth = scope:wealth
		quality = scope:quality
		template = weirwood_flute_template
		modifier = weirwood_flute_modifier
		save_scope_as = newly_created_artifact
	}
}

agot_create_brewing_herbs_effect = {
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_common = yes

	create_artifact = {
		name = brewing_herbs_name
		description = brewing_herbs_desc
		type = miscellaneous
		visuals = brewing_herbs_visuals
		wealth = scope:wealth
		quality = scope:quality
		modifier = brewing_herbs_modifier
		save_scope_as = newly_created_artifact
	}
}