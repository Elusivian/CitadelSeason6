agot_mw_switch_sides_modifier = {
	modifier = {
		add = -50
		trigger = {
			scope:mega_war_switch_sides = yes
		}
		desc = "SWITCH_SIDES_NEGATIVE_REASON"
	}
	modifier = {
		add = 20
		trigger = {
			scope:mega_war_switch_sides = yes
		}
		primary_heir = { is_imprisoned = yes }
		desc = "SWITCH_SIDES_HEIR_IMPRISONED"
	}
	modifier = {
		add = -100
		trigger = {
			scope:mega_war_switch_sides = yes
		}
		has_trait = loyal
		desc = "SWITCH_SIDES_LOYAL"
	}
	modifier = {
		add = 50
		trigger = {
			scope:mega_war_switch_sides = yes
		}
		has_trait = disloyal
		desc = "SWITCH_SIDES_DISLOYAL"
	}
	modifier = {
		add = 35
		trigger = {
			scope:mega_war_switch_sides = yes
		}
		NOT = { completely_controls = scope:recipient.capital_province.barony }
		desc = "SWITCH_SIDES_CONTROLS_CAPITAL"
	}
	#modifier = {
	#	add = 35
	#	trigger = {
	#		scope:mega_war_switch_sides = yes
	#	}
	#	scope:actor.var:chosen_rebel_leader = { # AGOT TODO
	#		any_owned_story = {
	#			story_type = story_agot_mw_rebel
	#			any_in_list = {
	#				variable = mw_wars
	#				trigger_if = {
	#					limit = {
	#						is_attacker = scope:actor
	#						#is_defender = scope:recipient
	#					}
	#					attacker_war_score > 3
	#				}
	#			}
	#		}
	#	}
	#	desc = "SWITCH_SIDES_LOSING_WAR"
	#}
}

agot_mw_choose_stance_modifier = {
	modifier = { # check crown's dread
		agot_mw_crown_dread > 0

		add = {
			if = { # crown stance
				limit = { $TARGET$ = scope:mw_crown.primary_title }
				add = agot_mw_crown_dread
			}
			else_if = { # rebel stance
				limit = { $TARGET$ = scope:mw_rebel_leader.primary_title }
				add = {
					value = 0
					subtract = agot_mw_crown_dread
				}
			}
		}
	}

	# Script value based modifiers
	modifier = { # most vassals follow liege
		#highest_held_title_tier < tier_kingdom
		#OR = {
		#	exists = liege
		#	exists = liege.liege
		#}
		#root = { opinion = { target = liege value > 0 } } # vassal only cares for his liege's opinion if they have positive relations

		add = {
			if = { # liege is crown, rebel leader or independence rebel leader
				limit = {
					exists = liege
					highest_held_title_tier < tier_kingdom # don't apply this to LPs
					OR = {
						AND = { # check crown option
							$TARGET$ = scope:mw_crown.primary_title
							liege = scope:mw_crown
						}
						AND = { # check rebel option
							$TARGET$ = scope:mw_rebel_leader.primary_title
							liege = scope:mw_rebel_leader
						}
						AND = { # check independence option
							$TARGET$ = root.capital_barony
							agot_mw_in_LIST_of_trigger = { STORY_OWNER = scope:mw_crown TYPE = crown LIST_NAME = mw_independence_rebel_leader_list TARGET = root.liege }
						}
					}
				}

				add = {
					add = scope:mw_liege_is_main_actor_value

					if = { # counts are more likely to follow their liege
						limit = { highest_held_title_tier = tier_county }
						multiply = scope:mw_follow_lieges_choice_county_bonus_factor
					}
				}
			}
			if = { # bonus for choice of direct liege (if liege is nor crown nor rebel leader)
				limit = {
					exists = liege
					OR = {
						AND = { # check crown option
							$TARGET$ = scope:mw_crown.primary_title
							agot_mw_in_LIST_of_trigger = { STORY_OWNER = scope:mw_crown TYPE = crown LIST_NAME = mw_loyalist_list TARGET = root.liege }
						}
						AND = { # check neutral option
							$TARGET$ = root.primary_title
							agot_mw_in_LIST_of_trigger = { STORY_OWNER = scope:mw_crown TYPE = crown LIST_NAME = mw_neutral_list TARGET = root.liege }
						}
						AND = { # check rebel option
							$TARGET$ = scope:mw_rebel_leader.primary_title
							agot_mw_in_LIST_of_trigger = { STORY_OWNER = scope:mw_rebel_leader TYPE = rebel LIST_NAME = mw_rebel_supporter_list TARGET = root.liege }
						}
						AND = { # check independence option
							$TARGET$ = root.capital_barony
							any_liege_or_above = { is_target_in_variable_list = { name = mw_independence_rebels_list target = root.liege } }
						}
					}
				}

				add = {
					add = scope:mw_follow_lieges_choice_value

					if = { # counts are more likely to follow their liege
						limit = { highest_held_title_tier = tier_county }
						multiply = scope:mw_follow_lieges_choice_county_bonus_factor
					}
				}
			}
			if = { # consider your liege's liege choice (if liege's liege is neither crown nor rebel leader)
				limit = {
					exists = liege.liege
					NOT = { liege = liege.liege }
					always = no # AGOT TODO currently disabled since we don't want counts to break with their duke liege yet
					OR = {
						AND = { # check crown option
							$TARGET$ = scope:mw_crown.primary_title
							agot_mw_in_LIST_of_trigger = { STORY_OWNER = scope:mw_crown TYPE = crown LIST_NAME = mw_loyalist_list TARGET = root.liege.liege }
						}
						AND = { # check neutral option
							$TARGET$ = root.primary_title
							agot_mw_in_LIST_of_trigger = { STORY_OWNER = scope:mw_crown TYPE = crown LIST_NAME = mw_neutral_list TARGET = root.liege.liege }
						}
						AND = { # check rebel option
							$TARGET$ = scope:mw_rebel_leader.primary_title
							agot_mw_in_LIST_of_trigger = { STORY_OWNER = scope:mw_rebel_leader TYPE = rebel LIST_NAME = mw_rebel_supporter_list TARGET = root.liege.liege }
						}
						AND = { # check independence option
							$TARGET$ = root.capital_barony
							any_liege_or_above = { is_target_in_variable_list = { name = mw_independence_rebels_list target = root.liege.liege } }
						}
					}
				}

				add = scope:mw_lieges_liege_choice_value
			}
		}
	}
	modifier = { # Consider alliances
		add = {
			if = { # check alliances with TARGET/liege/liege.liege
				limit = {
					OR = {
						is_allied_to = $TARGET$.holder
						AND = { # check crown option
							$TARGET$ = scope:mw_crown.primary_title
							agot_mw_in_LIST_of_trigger = { STORY_OWNER = scope:mw_crown TYPE = crown LIST_NAME = mw_loyalist_list TARGET = root.liege }
							is_allied_to = liege
						}
						AND = { # check rebel option
							$TARGET$ = scope:mw_rebel_leader.primary_title
							agot_mw_in_LIST_of_trigger = { STORY_OWNER = scope:mw_rebel_leader TYPE = rebel LIST_NAME = mw_rebel_supporter_list TARGET = root.liege }
							is_allied_to = liege
						}
					}
				}

				add = scope:mw_has_alliance_with_side
			}

			if = {
				limit = {
					NOT = { $TARGET$.holder ?= root } # don't check alliances with yourself
					any_ally = { is_allied_to = $TARGET$.holder }
				}

				add = scope:mw_ally_has_alliance_with_side
			}
		}
	}
	modifier = { # consider marriages of close family
		trigger = {
			OR = {
				$TARGET$ = scope:mw_crown.primary_title
				$TARGET$ = scope:mw_rebel_leader.primary_title
				$TARGET$ = root.capital_barony
			}
			NOT = { $TARGET$.holder ?= root } # don't check relation with yourself
		}

		any_close_family_member = {
			save_temporary_scope_as = close_family
			OR = {
				is_spouse_of = $TARGET$.holder
				$TARGET$.holder = {
					any_close_family_member = {
						is_spouse_of = scope:close_family
					}
				}
			}
		}

		add = scope:mw_close_family_marriage_value
	}
	modifier = { # consider legitimacy of crown and claimant | add delta
		trigger = {
			exists = scope:claimant
			OR = {
				$TARGET$ = scope:mw_crown.primary_title
				$TARGET$ = scope:mw_rebel_leader.primary_title
			}
			NOT = { $TARGET$.holder ?= root } # don't check relation with yourself
		}

		add = {
			if = {
				limit = {
					$TARGET$ = scope:mw_crown.primary_title
					trigger_if = {
						limit = { scope:claimant = { is_landed = yes } }
						save_temporary_scope_value_as = {
							name = t_mw_claimant_legitimacy
							value = scope:claimant.legitimacy
						}
					}
					trigger_else = {
						scope:claimant = {
							save_temporary_scope_value_as = {
								name = t_mw_claimant_legitimacy
								value = base_legitimacy_value
							}
						}
					}
					scope:mw_crown.legitimacy > scope:t_mw_claimant_legitimacy
				}

				add = {
					value = scope:mw_crown.legitimacy # crown legitimacy is higher
					subtract = scope:t_mw_claimant_legitimacy
					multiply = 0.2
				}
			}
			else_if = {
				limit = {
					$TARGET$ = scope:mw_rebel_leader.primary_title
					trigger_if = {
						limit = { scope:claimant = { is_landed = yes } }
						save_temporary_scope_value_as = {
							name = t_mw_claimant_legitimacy
							value = scope:claimant.legitimacy
						}
					}
					trigger_else = {
						scope:claimant = {
							save_temporary_scope_value_as = {
								name = t_mw_claimant_legitimacy
								value = base_legitimacy_value
							}
						}
					}
					scope:t_mw_claimant_legitimacy > scope:mw_crown.legitimacy
				}

				add = {
					value = scope:t_mw_claimant_legitimacy # claimant legitimacy is higher
					subtract = scope:mw_crown.legitimacy
					multiply = 0.2
				}
			}
		}
	}

	# Family, house and dynasty
	modifier = { # Close family member
		$TARGET$.holder = {
			NOT = { this = root } # don't check relation with yourself
			is_close_family_of = root
		}

		add = scope:mw_close_family_value
	}
	modifier = { # Same Dynasty
		exists = root.dynasty
		exists = $TARGET$.holder.dynasty
		root.dynasty ?= $TARGET$.holder.dynasty
		NOT = { $TARGET$.holder = { is_close_family_of = root } } # We already give bonus for that above

		add = scope:mw_same_dynasty_value
	}

	### General opinion modifiers
	# Based on "classic" "opinion
	modifier = { # check opinion of liege
		exists = liege
		exists = scope:opinion_of_liege
		OR = {
			AND = { # check crown option: only check if liege.liege is not crown --> opinion already checked
				$TARGET$ = scope:mw_crown.primary_title
				NOT = { liege = scope:mw_crown }
				agot_mw_in_LIST_of_trigger = { STORY_OWNER = scope:mw_crown TYPE = crown LIST_NAME = mw_loyalist_list TARGET = root.liege }
			}
			AND = { # check neutral option
				$TARGET$ = root.primary_title
				agot_mw_in_LIST_of_trigger = { STORY_OWNER = scope:mw_crown TYPE = crown LIST_NAME = mw_neutral_list TARGET = root.liege }
			}
			AND = { # check rebel option: only check if liege.liege is not rebel_leader --> opinion already checked
				$TARGET$ = scope:mw_rebel_leader.primary_title
				NOT = { liege = scope:mw_rebel_leader }
				agot_mw_in_LIST_of_trigger = { STORY_OWNER = scope:mw_rebel_leader TYPE = rebel LIST_NAME = mw_rebel_supporter_list TARGET = root.liege }
			}
			AND = { # check independence rebel option
				$TARGET$ = root.capital_barony
				agot_mw_in_LIST_of_trigger = { STORY_OWNER = scope:mw_crown TYPE = crown LIST_NAME = mw_independence_rebels_list TARGET = root.liege }
			}
		}

		add = {
			add = scope:opinion_of_liege
			multiply = scope:mw_opinion_value_factor # modify opinion weight by factor
		}
	}
	modifier = { # check opinion of liege's liege
		exists = liege.liege
		exists = scope:opinion_of_liege_liege
		NOT = { liege = liege.liege }
		OR = {
			AND = { # check crown option: only check if liege.liege is not crown --> opinion already checked
				$TARGET$ = scope:mw_crown.primary_title
				NOT = { liege.liege = scope:mw_crown }
				agot_mw_in_LIST_of_trigger = { STORY_OWNER = scope:mw_crown TYPE = crown LIST_NAME = mw_loyalist_list TARGET = root }
			}
			AND = { # check neutral option
				$TARGET$ = root.primary_title
				agot_mw_in_LIST_of_trigger = { STORY_OWNER = scope:mw_crown TYPE = crown LIST_NAME = mw_neutral_list TARGET = root }
			}
			AND = { # check rebel option: only check if liege.liege is not rebel_leader --> opinion already checked
				$TARGET$ = scope:mw_rebel_leader.primary_title
				NOT = { liege.liege = scope:mw_rebel_leader }
				agot_mw_in_LIST_of_trigger = { STORY_OWNER = scope:mw_rebel_leader TYPE = rebel LIST_NAME = mw_rebel_supporter_list TARGET = root }
			}
		}
		add = {
			add = scope:opinion_of_liege_liege
			multiply = scope:mw_opinion_value_factor # modify opinion weight by factor
		}
	}
	modifier = { # check opinion of TARGET (only crown and rebel leader)
		OR = {
			exists = scope:opinion_of_crown
			exists = scope:opinion_of_rebel_leader
		}
		add = {
			if = { # check opinion of crown
				limit = {
					OR = {
						$TARGET$ = scope:mw_crown.primary_title
						$TARGET$ = root.capital_barony
					}
					exists = scope:opinion_of_crown
				}
				add = {
					add = scope:opinion_of_crown
					multiply = scope:mw_opinion_value_factor # modify opinion weight by factor

					# modify value to be negative
					# --> if opinion is positive value becomes negative, thus decreasing chance for independence stance
					# --> if opinion is negative value becomes positive, thus increasing chance for independence stance
					if = {
						limit = { $TARGET$ = root.capital_barony }

						multiply = -0.5
					}
				}
			}
			else_if = { # check opinion of rebel leader
				limit = {
					$TARGET$ = scope:mw_rebel_leader.primary_title
					exists = scope:opinion_of_rebel_leader
				}
				add = {
					add = scope:opinion_of_rebel_leader
					multiply = scope:mw_opinion_value_factor # modify opinion weight by factor
				}
			}
		}
	}

	# Based on relations
	modifier = {
		add = {
			if = {
				limit = { has_relation_soldier_friend = $TARGET$.holder }
				add = scope:mw_TARGET_is_soldier_friend
			}
			if = {
				limit = { has_relation_friend = $TARGET$.holder }
				add = scope:mw_TARGET_is_friend
			}
			if = {
				limit = { has_relation_best_friend = $TARGET$.holder }
				add = scope:mw_TARGET_is_best_friend
			}
			if = {
				limit = { has_relation_lover = $TARGET$.holder }
				add = scope:mw_TARGET_is_lover
			}
			if = {
				limit = { has_relation_soulmate = $TARGET$.holder }
				add = scope:mw_TARGET_is_soulmate
			}
			if = {
				limit = { has_relation_rival = $TARGET$.holder }
				add = scope:mw_TARGET_is_rival
			}
			if = {
				limit = { has_relation_nemesis = $TARGET$.holder }
				add = scope:mw_TARGET_is_nemesis
			}
		}
	}

	### Other
	modifier = { # check if sworn loyalty
		exists = var:mw_is_loyal_to
		OR = {
			var:mw_is_loyal_to = scope:mw_crown
			var:mw_is_loyal_to = scope:mw_rebel_leader
		}
		add = agot_mw_loyality_value
	}
	modifier = { # check historical loyalties
		exists = house
		OR = { # Target is...
			$TARGET$ = scope:mw_crown.primary_title # ...crown
			$TARGET$ = scope:mw_rebel_leader.primary_title # ...rebel leader
			$TARGET$ = root.capital_barony # ...independence leader
		}
		agot_mw_house_has_historical_loyality_to_tigger = { TO_HOUSE = $TARGET$.holder.house }

		add = scope:mw_historical_loyality_value
	}
	modifier = { # you are diarch and your target is imprisoned by one of the sides
		exists = scope:mw_diarch_target
		scope:mw_diarch_target.diarch = root
		# AGOT TODO maybe make this dependent on diarch's traits/opinion of his target?
		OR = { # Target is...
			AND = {
				OR = {
					$TARGET$ = scope:mw_crown.primary_title # ...crown
					$TARGET$ = root.primary_title # ...neutral
				}
				OR = {
					scope:mw_diarch_target = { is_imprisoned_by = scope:mw_crown }
					scope:mw_crown_story = {
						any_in_list = {
							variable = mw_loyalist_list

							scope:mw_diarch_target = { is_imprisoned_by = prev }
						}
					}
				}
			}
			AND = {
				OR = {
					$TARGET$ = root.primary_title # ...neutral
					$TARGET$ = scope:mw_rebel_leader.primary_title # ...rebel leader
				}
				OR = {
					scope:mw_diarch_target = { is_imprisoned_by = scope:mw_rebel_leader }
					scope:mw_rebel_story = {
						any_in_list = {
							variable = mw_rebel_supporter_list

							scope:mw_diarch_target = { is_imprisoned_by = prev }
						}
					}
				}
			}
		}


		add = scope:mw_diarch_target_is_imprisoned_value
	}
	modifier = { # For conquests, especially fem: if current liege is hated and his faith is considered hostile or worse, activate "liberator" bonus for crown if corwn is of astray or better faith
		scope:mw_crown.faith = {
			faith_hostility_level = { target = root.faith value < faith_hostile_level }
		}
		scope:mw_rebel_leader.faith = {
			faith_hostility_level = { target = root.faith value > faith_astray_level }
		}
		scope:opinion_of_rebel_leader < -75

		add = {
			if = { # ...crown
				limit = { $TARGET$ = scope:mw_crown.primary_title }

				add = scope:mw_liberator_crown_value
			}
			if = { # ...neutral
				limit = { $TARGET$ = root.primary_title }

				add = scope:mw_liberator_neutral_value
			}
			if = { # ...rebel leader
				limit = { $TARGET$ = scope:mw_rebel_leader.primary_title }

				add = scope:mw_liberator_rebel_value
			}
		}
	}
	# Crown stance only modifiers
	modifier = {
		trigger = { $TARGET$ = scope:mw_crown.primary_title }

		add = {
			if = { # You always tend more to be loyal
				limit = { always = yes } # AGOT TODO only if this is civil war

				add = scope:mw_loyalist_stance_bonus_value
			}
			if = { # is root's realm in target_titles?
				limit = {
					any_in_list = {
						list = target_titles
						exists = this

						save_temporary_scope_as = target_title_temp_scope

						root = {
							OR = {
								any_held_title = {
									this = scope:target_title_temp_scope
								}
								any_vassal_or_below = {
									any_held_title = {
										this = scope:target_title_temp_scope
									}
								}
							}
						}
					}
				}
				add = scope:mw_protect_demesne_target_titles_value
			}
			if = { # check if in loyalist list already
				limit = { scope:mw_crown_story = { is_target_in_variable_list = { name = mw_loyalist_list target = root } } }

				add = scope:mw_stay_loyalist_value
			}
			if = { # rebel leader often is disadvantaged by vassal's stance choice, this slightly reduces AI joice towards loyalists if liege is rebel leader
				limit = { liege = scope:mw_rebel_leader }

				add = scope:mw_liege_is_rebel_leader_correction_value
			}
			if = { # Family member is crown
				limit = {
					OR = {
						scope:mw_crown = {
							is_close_or_extended_family_of = root
						}
						scope:mw_crown.primary_heir = {
							is_close_or_extended_family_of = root
						}
						#AND = { # Already checked above
						#	exists = scope:mw_crown.primary_spouse
						#	scope:mw_crown.primary_spouse = {
						#		is_close_or_extended_family_of = root
						#	}
						#}
						AND = {
							exists = scope:mw_crown.primary_heir.primary_spouse
							scope:mw_crown.primary_heir.primary_spouse = {
								is_close_or_extended_family_of = root
							}
						}
					}
				}

				add = scope:mw_family_member_is_crown_value
			}
		}
	}
	# Neutral stance only modifiers
	modifier = {
		trigger = { $TARGET$ = root.primary_title }

		add = {
			if = { # You always tend more to be neutral
				limit = { always = yes }

				add = scope:mw_neutral_stance_bonus_value
			}
			if = { # Doesn't want to get involved
				limit = {
					NOT = { has_trait = ambitious }
					OR = {
						has_trait = humble
						has_trait = content
						has_trait = craven
						has_trait = lazy
						has_trait = depressed_1
						has_trait = depressed_genetic
					}
				}

				add = scope:mw_join_side_reluctance_value
			}
			if = { # Torn between both sides, choose neither
				limit = {
					is_allied_to = scope:mw_crown
					is_allied_to = scope:mw_rebel_leader
				}

				add = scope:mw_torn_between_both_sides_value
			}
			if = { # Less likely to get involved if it doesn't concern your religion
				limit = {
					NAND = {
						root.faith = scope:mw_crown.faith
						root.faith = scope:mw_rebel_leader.faith
						trigger_if = { # If any liege or above is fighting an independence war you are less likely to stay neutral!
							limit = {
								exists = scope:war
								scope:war = { using_cb = agot_independence_war }
							}
							NOT = { any_liege_or_above = { this = scope:mw_rebel_leader } }
						}
					}
				}

				add = {
					add = 50 # AGOT TODO

					if = {
						limit = { # Unless your liege has already gotten involved
							OR = {
								agot_mw_in_LIST_of_trigger = { STORY_OWNER = scope:mw_crown TYPE = crown LIST_NAME = mw_loyalist_list TARGET = root.liege }
								agot_mw_in_LIST_of_trigger = { STORY_OWNER = scope:mw_rebel_leader TYPE = rebel LIST_NAME = mw_rebel_supporter_list TARGET = root.liege }
							}
						}

						subtract = 40 # AGOT TODO
					}
				}
			}
			if = { # Less likely to get involved if you have a different culture heritage than crown/rebel leader
				limit = {
					NAND = {
						culture = { has_same_culture_heritage = scope:mw_crown.culture }
						culture = { has_same_culture_heritage = scope:mw_rebel_leader.culture }
						trigger_if = { # If any liege or above is fighting an independence war you are less likely to stay neutral!
							limit = {
								exists = scope:war
								scope:war = { using_cb = agot_independence_war }
							}
							NOT = { any_liege_or_above = { this = scope:mw_rebel_leader } }
						}
					}
				}

				add = {
					add = 50 # AGOT TODO

					if = {
						limit = { # Unless your liege has already gotten involved
							OR = {
								agot_mw_in_LIST_of_trigger = { STORY_OWNER = scope:mw_crown TYPE = crown LIST_NAME = mw_loyalist_list TARGET = root.liege }
								agot_mw_in_LIST_of_trigger = { STORY_OWNER = scope:mw_rebel_leader TYPE = rebel LIST_NAME = mw_rebel_supporter_list TARGET = root.liege }
							}
						}

						subtract = 40 # AGOT TODO
					}
				}
			}
		}
	}
	# Rebel stance only modifiers
	modifier = {
		trigger = { $TARGET$ = scope:mw_rebel_leader.primary_title }

		add = {
			if = { # less likely to support an independence war that your LP is not a part of
				limit = {
					highest_held_title_tier < tier_kingdom
					exists = scope:war
					scope:war = { using_cb = agot_independence_war }
					any_liege_or_above = {
						OR = {
							this = scope:mw_rebel_leader
							scope:mw_rebel_story = {
								has_variable_list = mw_faction_members_list
								NOR = {
									is_target_in_variable_list = { name = mw_faction_members_list target = root }
									is_target_in_variable_list = { name = mw_faction_members_list target = prev }
								}
							}
						}
					}
				}

				add = scope:mw_independence_war_reluctance
			}
			if = { # if you are in the same faction as the rebel leader, be more likely to support that faction
				limit = {
					scope:mw_rebel_leader = {
						any_owned_story = {
							story_type = story_agot_mw_rebel
							has_variable_list = mw_faction_members_list
							is_target_in_variable_list = { name = mw_faction_members_list target = root }
						}
					}
				}

				add = scope:mw_is_faction_member_value
			}
			if = { # Fight against Tyranny!
				limit = {
					NOR = {
						has_trait = lunatic # Don't care
						has_trait = possessed # Don't care
						has_trait = arbitrary # Don't care
						has_trait = sadistic # Don't care
						has_trait = callous # Don't care
						has_relation_friend = scope:mw_crown
						has_relation_lover = scope:mw_crown
						is_close_family_of = scope:mw_crown
					}
					scope:mw_crown.tyranny >= low_tyranny
				}

				add = {
					add = scope:mw_tyranny_level_value
					if = {
						limit = { tyranny >= medium_tyranny }

						add = scope:mw_tyranny_level_value
					}
					if = {
						limit = { tyranny >= high_tyranny }

						add = scope:mw_tyranny_level_value
					}
				}
			}
		}
	}
	# Independence rebel stance only modifiers
	modifier = {
		trigger = { $TARGET$ = root.capital_barony }

		add = {
			add = scope:mw_seek_independence_reluctance_value

			if = {
				limit = { # AGOT TODO add triggers here to allow positive independence weighting
					scope:mw_crown_story = {
						any_in_list = {
							variable = mw_independence_rebel_leader_list
							this = root.liege
						}
					}
				}

				add = scope:mw_liege_is_indepen_leader_value
			}

			if = {
				limit = { # AGOT TODO add triggers here to allow positive independence weighting
					highest_held_title_tier = tier_kingdom
				}

				if = {
					limit = {
						OR = {
							has_relation_rival = liege
							has_relation_nemesis = liege
							NOT = { culture = { has_same_culture_heritage = root.liege.culture } }
							NOT = { religion = root.liege.religion }
						}
					}

					if = {
						limit = {
							OR = {
								has_relation_rival = liege
								has_relation_nemesis = liege
							}
						}

						add = scope:mw_seeks_independence_value
					}
					if = { # Not the same culture heritage
						limit = { NOT = { culture = { has_same_culture_heritage = root.liege.culture } } }

						add = scope:mw_seeks_independence_value
					}
					if = { # Not the same religion
						limit = { NOT = { religion = root.liege.religion } }

						add = scope:mw_seeks_independence_value
					}
				}
				else = { # If you have no reason to seek independence: decrease chance heavily
					add = -200
				}
			}
		}
	}
	# Loyalist faction
	modifier = {
		exists = liege
		exists = joined_faction
		joined_faction = {
			faction_target = $TARGET$.holder
			faction_is_type = agot_loyalist_faction
		}
		highest_held_title_tier > tier_barony

		add = scope:mw_loyalist_faction_value
	}
	# War of Succession modifier - Based on Rightful Heir's opinion
	modifier = {
		has_character_flag = the_vassal_remembers_legit
		highest_held_title_tier > tier_barony
		$TARGET$.holder = {
			has_character_flag = make_the_vassals_remember_legit
		}
		add = scope:mw_war_of_succession_legit_value
	}
	# War of Succession modifier - Based on Usurper's opinion
	modifier = {
		has_character_flag = the_vassal_remembers_usurper
		highest_held_title_tier > tier_barony
		$TARGET$.holder = {
			has_character_flag = make_the_vassals_remember_usurper
		}
		add = scope:mw_war_of_succession_usurper_value
	}
	# War of Succession modifier - Based on Vassal's honor
	modifier = {
		has_character_flag = the_vassal_is_honorable
		highest_held_title_tier > tier_barony
		$TARGET$.holder = {
			has_character_flag = make_the_vassals_remember_legit
		}
		add = scope:mw_war_of_succession_honorable_value
	}

	##Factor modifiers must be at the bottom, add new "add" modifiers above this
	modifier = { # Don't turn your back on family Dom
		OR = {
			AND = { # check for rebel option
				$TARGET$ = scope:mw_rebel_leader.primary_title
				OR = {
					is_close_family_of = scope:mw_crown
					has_relation_friend = scope:mw_crown
					has_relation_best_friend = scope:mw_crown
					has_relation_lover = scope:mw_crown
					has_relation_soulmate = scope:mw_crown
				}
			}
			AND = { # check for crown option
				$TARGET$ = scope:mw_crown.primary_title
				OR = {
					is_close_family_of = scope:mw_rebel_leader
					has_relation_friend = scope:mw_rebel_leader
					has_relation_best_friend = scope:mw_rebel_leader
					has_relation_lover = scope:mw_rebel_leader
					has_relation_soulmate = scope:mw_rebel_leader
				}
			}
		}

		factor = scope:mw_special_relation_blocker_factor #0.01 weight, will prevent anything but alliances
	}
	modifier = { # if you are directly allied to one side, don't betray that alliance by joining the enemy
		OR = {
			AND = { # check crown option
				$TARGET$ = scope:mw_crown.primary_title
				is_allied_to = scope:mw_rebel_leader
				NOT = { is_allied_to = scope:mw_crown }
			}
			AND = { # check rebel option
				$TARGET$ = scope:mw_rebel_leader.primary_title
				is_allied_to = scope:mw_crown
				NOT = { is_allied_to = scope:mw_rebel_leader }
			}
		}

		factor = scope:mw_dont_betray_alliance_factor
	}
	modifier = { # Currently you never join crown if you are rivals # AGOT TODO why only for crown?
		$TARGET$ = scope:mw_crown.primary_title
		has_relation_rival = scope:mw_crown

		factor = 0
	}
	modifier = { # Join your allies if you only have one with crown OR rebel leader and no other overwhelming factors
		trigger = { $TARGET$ = root.primary_title }

		OR = {
			AND = {
				is_allied_to = scope:mw_crown
				NOR = {
					is_allied_to = scope:mw_rebel_leader

					is_close_family_of = scope:mw_rebel_leader
					has_relation_best_friend = scope:mw_rebel_leader
					has_relation_soulmate = scope:mw_rebel_leader

					has_relation_rival = scope:mw_crown
				}
			}
			AND = {
				is_allied_to = scope:mw_rebel_leader
				NOR = {
					is_allied_to = scope:mw_crown

					is_close_family_of = scope:mw_crown
					has_relation_best_friend = scope:mw_crown
					has_relation_soulmate = scope:mw_crown
				}
			}
		}
		factor = scope:mw_has_alliance_stay_neutral_blocker_factor
	}

	## AGOT TODO ##
	# More modifiers:
	# consider opinion of possible claimant
	# consider character traits (lol)
	# consider your liege's dread
}

agot_mw_faction_demand_chance_reduction = {
	modifier = {
		factor = 0.5
		OR = {
			agot_mw_is_in_loyalist_list_trigger = { TARGET = root.faction_target }
			agot_mw_is_in_rebel_list_trigger = { TARGET = root.faction_target }
		}
	}
}