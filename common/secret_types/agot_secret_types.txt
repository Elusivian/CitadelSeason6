secret_agot_disputed_heritage = {
	category = adultery

	is_valid = {
		scope:secret_target = {
			exists = real_mother
			exists = real_father
			NOT = { mother = real_mother }
			NOT = { father = real_father }
		}
	}

	is_shunned = {
		#bastard_secret_is_shunned = {
		#	TARGET = scope:secret_target
		#	PARTICIPANT = scope:target
		#}
	}

	is_criminal = {
		#bastard_secret_is_criminal = {
		#	TARGET = scope:secret_target
		#	PARTICIPANT = scope:target
		#}
	}

	on_owner_death = {
		save_scope_as = secret
		scope:secret_target = {
			save_scope_as = child
		}

		###SET NEW OWNERSHIP###
		#Should we set new secret owner(s)?
		if = {
			limit = {
				#Child knows about the secret
				is_known_by = scope:child
				scope:child = { is_alive = yes }
			}
			set_secret_owner = scope:child
		}
	}

	on_discover = {
		scope:discoverer = {
			if = {
				limit = { this = scope:secret_target }
				add_secret = {
					type = secret_agot_disputed_heritage
					target = scope:secret_target
				}
			}
		}
	}

	on_expose = {
		# Save scopes and set "knows"-flags for reference in events later on.
		save_scope_as = secret
		scope:secret_owner = { save_scope_as = owner }
		scope:secret_target = {
			set_father = scope:secret_target.real_father
			set_mother = scope:secret_target.real_mother
			set_parent_house_effect = yes
			if = {
				limit = {
					real_paternal_held_iron_throne_claim = yes
				}
				add_unpressed_claim = title:e_the_iron_throne
				add_unpressed_claim = title:k_the_crownlands
				add_unpressed_claim = title:d_kings_landing
				add_unpressed_claim = title:c_kings_landing
				add_unpressed_claim = title:k_dragonstone
				add_unpressed_claim = title:d_dragonstone
				add_unpressed_claim = title:c_dragonstone
				scope:secret = { save_scope_as = heritage_secret }
				save_scope_as = reveal_scope # re-saving scopes to account for different paths
				real_mother = { save_scope_as = real_mother }
				real_father = { save_scope_as = real_father }
				scope:secret_exposer = {
					trigger_event = { # Delayed to ensure logic applied correctly first
						id = agot_events_bastard.0950
						days = 2
					}
				}
			}
		}
		if = { # Trigger Cat reaction event if valid
			limit = {
				scope:secret_target = {
					is_character_stark_7 = yes
				}
				character:Stark_3 = {
					is_landed = yes
					is_spouse_of = character:Tully_4
				}
				character:Tully_4 = {
					is_spouse_of = character:Stark_3
				}
			}
			character:Stark_3 = {
				trigger_event = agot_events_bastard.0911
			}
		}
	}
}

secret_agot_wildling = {
	category = deviancy

	is_valid = {
		secret_agot_wildling_is_valid_trigger = {
			OWNER = scope:secret_owner
		}
	}

	is_shunned = {
		secret_agot_wildling_is_shunned_trigger = {
			OWNER = scope:secret_owner
		}
	}

	is_criminal = {
		secret_agot_wildling_is_criminal_trigger = {
			OWNER = scope:secret_owner
		}
	}

	on_expose = {
		save_scope_as = secret
		scope:secret_owner = {
			if = {
				limit = {
					NOT = {
						this = scope:secret_exposer
					}
				}
				trigger_event = agot_secret_events.0001
			}
		}
		secret_exposed_notification_effect = yes
	}
}

secret_agot_identity = {
	category = identity

	is_valid = {
		secret_agot_identity_is_valid_trigger = {
			OWNER = scope:secret_owner
		}
	}

	is_shunned = {
		secret_agot_identity_is_shunned_trigger = {
			OWNER = scope:secret_owner
		}
	}

	is_criminal = {
		secret_agot_identity_is_criminal_trigger = {
			OWNER = scope:secret_owner
		}
	}

	on_expose = {
		save_scope_as = secret
		if = {
			limit = { scope:secret_owner = character:Stark_5 }

			character:Stark_5 = { trigger_event = agot_secret_events.1001 }

			#block_exposed_secret_general_notifications is borked because of the empty trigger_else, so building this list manually
			character:Targaryen_1 = {
				add_to_list = send_exposed_secret_event_list
			}
			character:Targaryen_3 = {
				add_to_list = send_exposed_secret_event_list
			}
			character:Blount_3 = {
				add_to_list = send_exposed_secret_event_list
			}
			character:Haigh_27 = {
				add_to_list = send_exposed_secret_event_list
			}
			character:Frey_35 = {
				add_to_list = send_exposed_secret_event_list
			}
			character:Stark_5 = {
				every_spouse = {
					add_to_list = send_exposed_secret_event_list
				}
				every_close_family_member = {
					add_to_list = send_exposed_secret_event_list
				}
			}
			secret_exposed_notification_effect = yes
		}
		else_if = {
			limit = { scope:secret_owner = { has_character_flag = generic_secret_identity } }

			scope:secret_owner = {
				save_scope_as = secret_child
				scope:secret_child = { agot_end_secret_identity_effect = yes }
			}

			#block_exposed_secret_general_notifications is borked because of the empty trigger_else, so building this list manually
			scope:secret_owner = {
				every_spouse = {
					add_to_list = send_exposed_secret_event_list
				}
				every_close_family_member = {
					add_to_list = send_exposed_secret_event_list
				}
			}
			secret_exposed_notification_effect = yes
		}
	}
}