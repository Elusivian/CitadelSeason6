# Dragon templates
agot_dragon_template = {
	age = { 28 100 }
	gender_female_chance = dragon_female_chance
	dynasty = none
	trait = dragon
	#Education
	random_traits_list = {
		count = 1
		education_dragon_1 = {}
		education_dragon_2 = {}
		education_dragon_3 = {}
		education_dragon_4 = {}
	}
	#Misc
	after_creation = {
		#personality
		while = {
			limit = {
				number_of_personality_traits < 3
			}
			agot_give_random_dragon_personality_trait = yes
		}

		#physical
		agot_give_random_physical_traits = yes

		# Cannibal trait
		random_list = {
			95 = { }
			5 = {
				add_trait = dragon_cannibal
			}
		}

		save_scope_as = dragon
		# Hide gender
		set_variable = {
			name = dragon_gender_hidden
			value = 1
		}

		if = {
			limit = { exists = scope:sacrifice }
			add_trait = dragon_destined
		}

		# Give story
		create_story = story_dragon_alive

		# Needed for visuals
		set_variable = {
			name = dragon_age
			value = age
		}

		#Set dragon visual gene ranges here.
		agot_back_apply_dragon_aging_effect = yes
		agot_gen_appearance_variables = yes
		# Create and pass the variables to the story cycle
		agot_dragon_transfer_vars_to_story_cycle_effect = { DRAGON = scope:dragon }

		agot_dragon_birth_magic_effect = yes
	}

	prowess = { min_template_decent_skill max_template_high_skill }

	faith = faith:valyrian
	culture = culture:dragon
}

agot_dragon_hatchling_template = {
	age = 0
	gender_female_chance = dragon_female_chance
	dynasty = none
	trait = dragon
	#Misc
	after_creation = {
		#physical
		agot_give_random_physical_traits = yes

		# Hide gender
		set_variable = {
			name = dragon_gender_hidden
			value = 1
		}

		if = {
			limit = { exists = scope:sacrifice }
			add_trait = dragon_destined
		}

		# Give story
		create_story = story_dragon_alive

		# Needed for visuals
		set_variable = {
			name = dragon_age
			value = age
		}
		set_variable = {
			name = dragon_size
			value = 0 # Set to 0 here since they're a baby-the backage effect doesn't update their age. Their size will grow on birthdays.
		}
		set_variable = {
			name = dragon_size_base
			value = 0 # Set to 0 here since they're a baby-the backage effect doesn't update their age. Their size will grow on birthdays.
		}
		set_variable = baby_dragon
		random_list = {
			#White
			1 = {
				trigger = {
					OR = {
						NOT = { exists = scope:egg }
						NOT = { exists = scope:egg.var:dragon_egg_color }
						scope:egg.var:dragon_egg_color ?= flag:tan
						scope:egg.var:dragon_egg_color ?= flag:palebluepink
						scope:egg.var:dragon_egg_color ?= flag:silver
						scope:egg.var:dragon_egg_color ?= flag:rainbow
						scope:egg.var:dragon_egg_color ?= flag:white
						scope:egg.var:dragon_egg_color ?= flag:whitegold
					}
				}
				set_variable = {
					name = color
					value = flag:white
				}
			}
			#Grey
			1 = {
				trigger = {
					OR = {
						NOT = { exists = scope:egg }
						NOT = { exists = scope:egg.var:dragon_egg_color }
						scope:egg.var:dragon_egg_color ?= flag:silver
						scope:egg.var:dragon_egg_color ?= flag:rainbow
						scope:egg.var:dragon_egg_color ?= flag:greengrey
						scope:egg.var:dragon_egg_color ?= flag:grey_1
						scope:egg.var:dragon_egg_color ?= flag:grey_2
					}
				}
				set_variable = {
					name = color
					value = flag:grey
				}
			}
			#Black
			1 = {
				trigger = {
					OR = {
						NOT = { exists = scope:egg }
						NOT = { exists = scope:egg.var:dragon_egg_color }
						scope:egg.var:dragon_egg_color ?= flag:rainbow
						scope:egg.var:dragon_egg_color ?= flag:blackyellow
						scope:egg.var:dragon_egg_color ?= flag:blackred
						scope:egg.var:dragon_egg_color ?= flag:blackgreen
						scope:egg.var:dragon_egg_color ?= flag:black
						scope:egg.var:dragon_egg_color ?= flag:blackDarkRed
					}
				}
				set_variable = {
					name = color
					value = flag:black
				}
			}
			#Red
			1 = {
				trigger = {
					OR = {
						NOT = { exists = scope:egg }
						NOT = { exists = scope:egg.var:dragon_egg_color }
						scope:egg.var:dragon_egg_color ?= flag:red
						scope:egg.var:dragon_egg_color ?= flag:darkred
						scope:egg.var:dragon_egg_color ?= flag:redblackgold
						scope:egg.var:dragon_egg_color ?= flag:magma
						scope:egg.var:dragon_egg_color ?= flag:rainbowgold
						scope:egg.var:dragon_egg_color ?= flag:rainbow
						scope:egg.var:dragon_egg_color ?= flag:blackred
						scope:egg.var:dragon_egg_color ?= flag:blackDarkRed
						scope:egg.var:dragon_egg_color ?= flag:iceFire
					}
				}
				set_variable = {
					name = color
					value = flag:red
				}
			}
			# Orange you glad it's a nice day?
			1 = {
				trigger = {
					OR = {
						NOT = { exists = scope:egg }
						NOT = { exists = scope:egg.var:dragon_egg_color }
						scope:egg.var:dragon_egg_color ?= flag:sunburst
						scope:egg.var:dragon_egg_color ?= flag:orange
						scope:egg.var:dragon_egg_color ?= flag:rainbowgold
						scope:egg.var:dragon_egg_color ?= flag:bronze
						scope:egg.var:dragon_egg_color ?= flag:bluebronze
						scope:egg.var:dragon_egg_color ?= flag:rainbow
						scope:egg.var:dragon_egg_color ?= flag:greenorange
						scope:egg.var:dragon_egg_color ?= flag:brown
						scope:egg.var:dragon_egg_color ?= flag:iceFire
					}
				}
				set_variable = {
					name = color
					value = flag:orange
				}
			}
			# Yellow, nice to meet you!
			1 = {
				trigger = {
					OR = {
						NOT = { exists = scope:egg }
						NOT = { exists = scope:egg.var:dragon_egg_color }
						scope:egg.var:dragon_egg_color ?= flag:flame
						scope:egg.var:dragon_egg_color ?= flag:brownspots
						scope:egg.var:dragon_egg_color ?= flag:rainbowgold
						scope:egg.var:dragon_egg_color ?= flag:rainbow
						scope:egg.var:dragon_egg_color ?= flag:purplegold
						scope:egg.var:dragon_egg_color ?= flag:yellowgreen
						scope:egg.var:dragon_egg_color ?= flag:blackyellow
						scope:egg.var:dragon_egg_color ?= flag:yellow
						scope:egg.var:dragon_egg_color ?= flag:goldpink
						scope:egg.var:dragon_egg_color ?= flag:whitegold
						scope:egg.var:dragon_egg_color ?= flag:gold
						scope:egg.var:dragon_egg_color ?= flag:iceFire
					}
				}
				set_variable = {
					name = color
					value = flag:yellow
				}
			}
			# Green
			1 = {
				trigger = {
					OR = {
						NOT = { exists = scope:egg }
						NOT = { exists = scope:egg.var:dragon_egg_color }
						scope:egg.var:dragon_egg_color ?= flag:rainbow
						scope:egg.var:dragon_egg_color ?= flag:greenorange
						scope:egg.var:dragon_egg_color ?= flag:greengrey
						scope:egg.var:dragon_egg_color ?= flag:yellowgreen
						scope:egg.var:dragon_egg_color ?= flag:green_1
						scope:egg.var:dragon_egg_color ?= flag:green_2
						scope:egg.var:dragon_egg_color ?= flag:greygreenyellow
					}
				}
				set_variable = {
					name = color
					value = flag:green
				}
			}
			# Light Blue
			1 = {
				trigger = {
					OR = {
						NOT = { exists = scope:egg }
						NOT = { exists = scope:egg.var:dragon_egg_color }
						scope:egg.var:dragon_egg_color ?= flag:palebluepink
						scope:egg.var:dragon_egg_color ?= flag:blue
						scope:egg.var:dragon_egg_color ?= flag:frost
						scope:egg.var:dragon_egg_color ?= flag:rainbow
						scope:egg.var:dragon_egg_color ?= flag:iceFire
					}
				}
				set_variable = {
					name = color
					value = flag:teal
				}
			}
			# Blue
			1 = {
				trigger = {
					OR = {
						NOT = { exists = scope:egg }
						NOT = { exists = scope:egg.var:dragon_egg_color }
						scope:egg.var:dragon_egg_color ?= flag:darkblue
						scope:egg.var:dragon_egg_color ?= flag:rainbow
						scope:egg.var:dragon_egg_color ?= flag:bluebronze
						scope:egg.var:dragon_egg_color ?= flag:blue
						scope:egg.var:dragon_egg_color ?= flag:iceFire
					}
				}
				set_variable = {
					name = color
					value = flag:blue
				}
			}
			# Purple
			1 = {
				trigger = {
					OR = {
						NOT = { exists = scope:egg }
						NOT = { exists = scope:egg.var:dragon_egg_color }
						scope:egg.var:dragon_egg_color ?= flag:purple
						scope:egg.var:dragon_egg_color ?= flag:rainbow
						scope:egg.var:dragon_egg_color ?= flag:darkpurple
						scope:egg.var:dragon_egg_color ?= flag:purplegold
					}
				}
				set_variable = {
					name = color
					value = flag:purple
				}
			}
			# Pink
			1 = {
				trigger = {
					OR = {
						NOT = { exists = scope:egg }
						NOT = { exists = scope:egg.var:dragon_egg_color }
						scope:egg.var:dragon_egg_color ?= flag:palepink
						scope:egg.var:dragon_egg_color ?= flag:palebluepink
						scope:egg.var:dragon_egg_color ?= flag:rainbow
						scope:egg.var:dragon_egg_color ?= flag:pinkspot
						scope:egg.var:dragon_egg_color ?= flag:goldpink
						scope:egg.var:dragon_egg_color ?= flag:pink
					}
				}
				set_variable = {
					name = color
					value = flag:pink
				}
			}
			# Fuschia / Lighter Red at the end of Palette
			1 = {
				trigger = {
					OR = {
						NOT = { exists = scope:egg }
						NOT = { exists = scope:egg.var:dragon_egg_color }
						scope:egg.var:dragon_egg_color ?= flag:rainbow
						scope:egg.var:dragon_egg_color ?= flag:rainbowgold
						scope:egg.var:dragon_egg_color ?= flag:palered
					}
				}
				set_variable = {
					name = color
					value = flag:fuschia
				}
			}
		}
		# Store dragon egg color for later use
		if = {
			limit = {
				exists = scope:egg
				exists = scope:egg.var:dragon_egg_color
			}
			set_variable = {
				name = egg_color
				value = scope:egg.var:dragon_egg_color
			}
		}
		#Set dragon visual gene ranges here.
		agot_back_apply_dragon_aging_effect = yes # This won't really do anything since the age check returns false on the while trigger, but forwarding it over to keep parity with how it was before.
		agot_gen_appearance_variables = yes
		agot_dragon_transfer_vars_to_story_cycle_effect = { DRAGON = scope:dragon }

		agot_dragon_birth_magic_effect = yes

	}

	faith = faith:valyrian
	culture = culture:dragon
}

agot_young_dragon_template = {
	age = { 20 40 }
	gender_female_chance = dragon_female_chance
	dynasty = none
	trait = dragon
	#Education
	random_traits_list = {
		count = 1
		education_dragon_1 = {}
		education_dragon_2 = {}
		education_dragon_3 = {}
		education_dragon_4 = {}
	}
	#Misc
	after_creation = {
		#personality
		while = {
			limit = {
				number_of_personality_traits < 3
			}
			agot_give_random_dragon_personality_trait = yes
		}

		#physical
		agot_give_random_physical_traits = yes

		# Cannibal trait
		random_list = {
			95 = { }
			5 = {
				add_trait = dragon_cannibal
			}
		}

		save_scope_as = dragon
		# Hide gender
		set_variable = {
			name = dragon_gender_hidden
			value = 1
		}

		# Give story
		create_story = story_dragon_alive

		# Needed for visuals
		set_variable = {
			name = dragon_age
			value = age
		}

		#Set dragon visual gene ranges here.
		agot_back_apply_dragon_aging_effect = yes
		agot_gen_appearance_variables = yes
		agot_dragon_transfer_vars_to_story_cycle_effect = { DRAGON = scope:dragon }

		agot_dragon_birth_magic_effect = yes
	}

	prowess = { min_template_decent_skill max_template_high_skill }

	faith = faith:valyrian
	culture = culture:dragon
}

agot_adult_dragon_template = {
	age = { 40 100 }
	gender_female_chance = dragon_female_chance
	dynasty = none
	trait = dragon
	#Education
	random_traits_list = {
		count = 1
		education_dragon_1 = {}
		education_dragon_2 = {}
		education_dragon_3 = {}
		education_dragon_4 = {}
	}
	#Misc
	after_creation = {
		#personality
		while = {
			limit = {
				number_of_personality_traits < 3
			}
			agot_give_random_dragon_personality_trait = yes
		}

		#physical
		agot_give_random_physical_traits = yes

		# Cannibal trait
		random_list = {
			95 = { }
			5 = {
				add_trait = dragon_cannibal
			}
		}

		save_scope_as = dragon
		# Hide gender
		set_variable = {
			name = dragon_gender_hidden
			value = 1
		}

		# Give story
		create_story = story_dragon_alive

		# Needed for visuals
		set_variable = {
			name = dragon_age
			value = age
		}

		#Set dragon visual gene ranges here.
		agot_back_apply_dragon_aging_effect = yes
		agot_gen_appearance_variables = yes
		agot_dragon_transfer_vars_to_story_cycle_effect = { DRAGON = scope:dragon }

		agot_dragon_birth_magic_effect = yes
	}

	prowess = { min_template_decent_skill max_template_high_skill }

	faith = faith:valyrian
	culture = culture:dragon
}

agot_old_dragon_template = {
	age = { 100 160 }
	gender_female_chance = dragon_female_chance
	dynasty = none
	trait = dragon
	#Education
	random_traits_list = {
		count = 1
		education_dragon_1 = {}
		education_dragon_2 = {}
		education_dragon_3 = {}
		education_dragon_4 = {}
	}
	#Misc
	after_creation = {
		#personality
		while = {
			limit = {
				number_of_personality_traits < 3
			}
			agot_give_random_dragon_personality_trait = yes
		}

		#physical
		agot_give_random_physical_traits = yes

		# Cannibal trait
		random_list = {
			95 = { }
			5 = {
				add_trait = dragon_cannibal
			}
		}

		save_scope_as = dragon
		# Hide gender
		set_variable = {
			name = dragon_gender_hidden
			value = 1
		}

		# Give story
		create_story = story_dragon_alive

		# Needed for visuals
		set_variable = {
			name = dragon_age
			value = age
		}

		#Set dragon visual gene ranges here.
		agot_back_apply_dragon_aging_effect = yes

		agot_gen_appearance_variables = yes
		agot_dragon_transfer_vars_to_story_cycle_effect = { DRAGON = scope:dragon }

		agot_dragon_birth_magic_effect = yes
	}

	prowess = { min_template_decent_skill max_template_high_skill }

	faith = faith:valyrian
	culture = culture:dragon
}

agot_monster_dragon_template = {
	age = { 160 200 }
	gender_female_chance = dragon_female_chance
	dynasty = none
	trait = dragon
	#Education
	random_traits_list = {
		count = 1
		education_dragon_1 = {}
		education_dragon_2 = {}
		education_dragon_3 = {}
		education_dragon_4 = {}
	}
	#Misc
	after_creation = {
		#personality
		while = {
			limit = {
				number_of_personality_traits < 3
			}
			agot_give_random_dragon_personality_trait = yes
		}

		#physical
		agot_give_random_physical_traits = yes

		# Cannibal trait
		random_list = {
			95 = { }
			5 = {
				add_trait = dragon_cannibal
			}
		}

		save_scope_as = dragon
		# Hide gender
		set_variable = {
			name = dragon_gender_hidden
			value = 1
		}

		# Give story
		create_story = story_dragon_alive

		# Needed for visuals
		set_variable = {
			name = dragon_age
			value = age
		}

		#Set dragon visual gene ranges here.
		agot_back_apply_dragon_aging_effect = yes
		agot_gen_appearance_variables = yes
		agot_dragon_transfer_vars_to_story_cycle_effect = { DRAGON = scope:dragon }

		agot_dragon_birth_magic_effect = yes
	}

	prowess = { min_template_decent_skill max_template_high_skill }

	faith = faith:valyrian
	culture = culture:dragon
}

# Dragonkeeper templates

agot_head_dragonkeeper_grand_funding_template = {
	age = { 25 45 }
	gender = male
	dynasty = none
	learning = { min_template_high_skill max_template_high_skill }
	stewardship = { min_template_high_skill max_template_high_skill }
	intrigue = { min_template_average_skill max_template_average_skill }
	martial = { min_template_average_skill max_template_average_skill }
	diplomacy = { min_template_average_skill max_template_average_skill }
	prowess = { min_template_decent_skill max_template_high_skill }
	trait = loyal
	random_traits_list = {
		count = 1
		education_learning_4 = {}
		education_stewardship_4 = {}
	}
	random_traits = yes
	random_traits_list = {
		count = 3
		diligent = {weight = { base = 20 }}
		temperate = {weight = { base = 5 }}
		patient = {}
		calm = {}
		humble = {}
		shy = {}
		content = {}
		ambitious = {}
		just = {}
	}
	random_traits_list = {
		count = 1
		scholar = {}
		administrator = {}
		shrewd = {}
	}
	after_creation = {
		#add_character_flag = highest_fund
		if = {
			limit = {
				NOT = {
					knows_language = language_valyrian
				}
			}
			learn_language = language_valyrian
		}
	}
}

agot_head_dragonkeeper_high_funding_template = {
	age = { 30 45 }
	gender = male
	dynasty = none
	learning = { min_template_medium_skill max_template_decent_skill }
	stewardship = { min_template_medium_skill max_template_decent_skill }
	prowess = { min_template_medium_skill max_template_decent_skill }
	random_traits = yes
	trait = loyal
	random_traits_list = {
		count = 1
		education_learning_3 = {}
		education_learning_4 = {}
		education_stewardship_3 = {}
		education_stewardship_4 = {}
	}
	random_traits_list = {
		count = 2
		chaste = {}
		diligent = {}
		patient = {}
		calm = {}
		humble = {}
		shy = {}
		content = {}
		cynical = {}
	}
	random_traits_list = {
		count = 1
		scholar = {}
		theologian = {}
		lifestyle_mystic = {}
		administrator = {}
		shrewd = {}
	}
	after_creation = {
		#add_character_flag = high_fund
		if = {
			limit = {
				NOT = {
					knows_language = language_valyrian
				}
			}
			learn_language = language_valyrian
		}
	}
}

agot_head_dragonkeeper_med_funding_template = {
	age = { 35 50 }
	gender = male
	dynasty = none
	learning = { min_template_medium_skill max_template_medium_skill }
	stewardship = { min_template_medium_skill max_template_medium_skill }
	prowess = { min_template_average_skill max_template_medium_skill }
	random_traits = yes
	random_traits_list = {
		count = 1
		education_learning_2 = {}
		education_learning_3 = {}
		education_stewardship_2 = {}
		education_stewardship_3 = {}
	}
	random_traits_list = {
		count = 1
		patient = {}
		calm = {}
		shy = {}
		content = {}
		arrogant = {}
		lazy = {}
		impatient = {}
		brave = {}
	}
	random_traits_list = {
		count = 1
		impatient = {}
		craven = {}
		lazy = {}
		arrogant = {}
		stubborn = {}
		callous = {}
		profligate = {}
	}
	after_creation = {
		#add_character_flag = med_fund
		if = {
			limit = {
				NOT = {
					knows_language = language_valyrian
				}
			}
			learn_language = language_valyrian
		}
	}
}

agot_head_dragonkeeper_low_funding_template = {
	age = { 45 55 }
	gender = male
	dynasty = none
	learning = { min_template_low_skill max_template_average_skill }
	stewardship = { min_template_low_skill max_template_average_skill }
	prowess = { min_template_low_skill max_template_average_skill }
	random_traits = yes
	random_traits_list = {
		count = 1
		education_learning_1 = {}
		education_learning_2 = { weight = { base = 30 } }
		education_stewardship_1 = {}
		education_stewardship_2 = {}
	}
	random_traits_list = {
		count = 2
		impatient = {}
		craven = {}
		lazy = {}
		arrogant = {}
		stubborn = {}
		callous = {}
		profligate = {}
	}
	after_creation = {
		#add_character_flag = low_fund
		if = {
			limit = {
				NOT = {
					knows_language = language_valyrian
				}
			}
			learn_language = language_valyrian
		}
	}
}

agot_head_dragonkeeper_lowest_funding_template = {
	age = { 50 55 }
	gender = male
	dynasty = none
	#learning = { min_template_low_skill max_template_low_skill }
	#stewardship = { min_template_low_skill max_template_low_skill }
	prowess = { min_template_low_skill max_template_low_skill }
	trait = education_learning_1
	random_traits = yes
	random_traits_list = {
		count = 2
		impatient = {}
		craven = {}
		lazy = {}
		arrogant = {}
		callous = {}
		profligate = {}
	}
	#after_creation = {
	#	add_character_flag = lowest_fund
	#}
}

agot_local_dragonseed_template = {
	age = { 14 45 }
	gender_female_chance = 50
	dynasty = none
	faith = root.capital_county.faith
	culture = root.capital_county.culture
	random_traits_list = {
		count = 1
		brave = {}
		arrogant = {}
		ambitious = {}
	}

	after_creation = {
		if = {
			limit = {
				culture = culture:high_valyrian
			}
			if = {
				limit = {
					root.capital_province = {
						geographical_region = world_westeros
					}
				}
				set_culture = culture:westerosi_valyrian
			}
			else = {
				set_culture = culture:essosi_valyrian
			}
		}
		random_list = {
			2 = {
				add_character_flag = dragonseed_potential_low
			}
			1 = {
				add_character_flag = dragonseed_potential_medium
			}
		}
	}
}

agot_valyrian_dragonseed_template = {
	age = { 14 45 }
	gender_female_chance = 50
	dynasty = none
	faith = faith:valyrian
	culture = culture:high_valyrian
	random_traits_list = {
		count = 1
		brave = {}
		arrogant = {}
		ambitious = {}
	}


	after_creation = {
		if = {
			limit = {
				root.capital_province = {
					geographical_region = world_westeros
				}
			}
			set_culture = culture:westerosi_valyrian
			set_character_faith = title:c_dragonstone.holder.faith
		}
		else = {
			set_culture = culture:essosi_valyrian
			random_list = {
				1 = {
					set_character_faith = faith:rhllor
				}
				1 = {
					set_character_faith = faith:weeping_lady
				}
			}
		}
		random_list = {
			1 = {
				add_character_flag = dragonseed_potential_low
			}
			2 = {
				add_character_flag = dragonseed_potential_medium
			}
		}
	}
}

agot_scaly_dragonseed_template = {
	age = { 16 45 }
	gender_female_chance = 50
	dynasty = none
	faith = root.capital_county.faith
	culture = root.capital_county.culture
	trait = education_martial_2
	trait = scaly
	trait = brave
	trait = sadistic
	trait = ambitious
	trait = rowdy

	after_creation = {
		copy_inheritable_appearance_from = character:Dummy_Scaly_1
		copy_traits = character:Dummy_Scaly_1
		add_character_flag = has_scripted_appearance
		make_trait_inactive = scripted_appearance
		add_character_flag = is_scaly_allard
		if = {
			limit = {
				culture = culture:high_valyrian
			}
			if = {
				limit = {
					root.capital_province = {
						geographical_region = world_westeros
					}
				}
				set_culture = culture:westerosi_valyrian
			}
			else = {
				set_culture = culture:essosi_valyrian
			}
		}
		random_list = {
			2 = {
				add_character_flag = dragonseed_potential_low
			}
			1 = {
				add_character_flag = dragonseed_potential_medium
			}
		}
		if = {
			limit = {
				is_male = no
			}
			change_first_name = Alys
		}
		else = {
			change_first_name = Allard
		}
		give_nickname = nick_the_scaly_prefix
	}
}