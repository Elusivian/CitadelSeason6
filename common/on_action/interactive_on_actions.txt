on_game_start = {
    on_actions = {
        interactive_game_start
    }
}

on_war_started = {
	on_actions = {
		interactive_civil_wars
		interactive_claims
		interactive_title_holders
		interactive_external_wars
		interactive_bannermen
		interactive_oathbreakers
		interactive_call_player
		interactive_war_participants
	}
}

# To check if More Interactive Vassals is loaded, you can use:
# has_global_variable = miv_is_loaded
interactive_game_start = {
    effect = {
        set_global_variable = {
			name = miv_is_loaded
			value = yes
		}
    }
}

interactive_civil_wars = {
	effect = {
		if = {
			limit = {
				NOT = { has_game_rule = improved_civil_wars_disabled }

				scope:attacker = {
					is_vassal_or_below_of = scope:defender
					is_landed = yes
				}

				any_player = {
					OR = {
						in_diplomatic_range = scope:defender
						in_diplomatic_range = scope:attacker
					}
				}

				OR = { NOT = { interactive_start_date = current_date } has_game_rule = miv_starting_disabled }

				war = {
					NOR = {
						using_cb = populist_war
						using_cb = peasant_war
					}
				}

				scope:attacker = {
					NOT = { 
						AND = {
							exists = joined_faction
							OR = { 
								joined_faction = { faction_is_type = populist_faction }
								joined_faction = { faction_is_type = peasant_faction }
							}
						}
					}
				}

				NOT = { has_global_variable = AGOT_is_loaded }
			}

			scope:defender = {
				every_vassal = { 
					limit = {
						max_military_strength > 100
						NOR = {
							opinion = {
								target = scope:attacker
								value <= -60
							}
							opinion = {
								target = scope:defender
								value >= 60
							}
							this = scope:attacker
							# loyalist faction members side with liege
							AND = {
								exists = joined_faction
								joined_faction = { faction_is_type = crown_loyalist_faction }
							}
							is_allied_to = scope:defender # allies side with liege
							vassal_contract_has_flag = has_warden_contract # wardens side with liege
							is_ai = no # separate player event to handle call to arms
							has_trait = incapable
							is_imprisoned = yes # imprisoned vassals cant rise up against you
							dread_modified_ai_boldness = { # terrified vassals will remain neutral 
								dreaded_character = scope:defender
								value <= -50
							}
							NOT = {
								is_heir_of = scope:defender
							}
							# is_at_war_with = scope:attacker
							# is_at_war_with = scope:defender
						}
						is_landed = yes
						highest_held_title_tier > tier_barony
						OR = {
							AND = { # friends or lovers of attacker joins them
								OR = {
									has_relation_lover = scope:attacker
									has_relation_friend = scope:attacker
									is_allied_to = scope:attacker # allies of attacker that are vassals also side with them
								}
								NOR = {
									has_relation_lover = scope:defender
									has_relation_friend = scope:defender
									is_allied_to = scope:defender # but only if they arent allied with their liege as well
								}
							}
							AND = {
								OR = {
									ai_honor <= -25 # dishonorable vassals prefer to join the rebels and betray their liege
									opinion = {
										target = scope:attacker
										value >= 40
									}
								}
							}
							AND = {
								# vassal likes the attacker significantly more than their liege
								opinion = {
									target = scope:attacker
									value >= 40
								}
								opinion = {
									target = scope:defender
									value <= -40
								}
							}
						}
					}
					save_scope_as = joining_vassal
					hidden_effect = {
						scope:attacker = {
							every_character_war = {
								limit = {
									casus_belli = {
										primary_attacker = scope:attacker
										primary_defender = scope:defender
									}
								}
									add_to_list = war_to_join
							}
						}
						every_in_list = {
							list = war_to_join
							save_temporary_scope_as = WAR_SCOPE
							if = {
								limit = {
									NOT = {
										scope:joining_vassal = {
											is_at_war_with = scope:war.primary_defender
										}
									}
									NOT = {
										scope:joining_vassal = {
											is_at_war_with = scope:war.primary_attacker
										}
									}
								}
								scope:WAR_SCOPE = { add_attacker = scope:joining_vassal }
							}
						}
					}
					hidden_effect = {
						scope:defender = {
							add_opinion = {
								target = prev
								modifier = rebellious_vassal_opinion
							}
						}
					}
				}
				every_vassal = {
					limit = {
						NOT = {
							is_imprisoned = yes # imprisoned vassals cannot join the rebels TODO
						}
						opinion = {
							target = scope:attacker
							value > -60
						}
						max_military_strength > 100
						is_ai = yes
						highest_held_title_tier > tier_barony
						is_landed = yes
						NOT = {
							is_allied_to = scope:defender
						}
						NOT = {
							is_at_war_with = scope:defender
						}
						NOT = { 
							AND = {
								exists = joined_faction
								joined_faction = { faction_is_type = crown_loyalist_faction }
							}
						}
						NOT = {
							is_heir_of = scope:defender
						}
						OR = {
							is_allied_to = scope:attacker
							has_relation_rival = scope:defender
							has_relation_nemesis = scope:defender
							is_a_faction_leader = yes
							is_a_faction_member = yes
							AND = {
								NOT = {
									is_allied_to = scope:defender
								}
								opinion = {
									target = scope:defender
									value <= -40
								}
							}
							opinion = {
								target = scope:defender
								value <= -80 # if vassal allied with liege really hates them, then break the alliance and betray them anyways
							}
						}
					}
					scope:war = { add_attacker = prev }
				}
			}

			scope:defender = {
				every_vassal = {
					limit = {
						NOT = { is_allied_to = scope:attacker }
						max_military_strength > 100
						is_ai = yes
						highest_held_title_tier > tier_barony
						is_landed = yes
						NOT = {
							is_at_war_with = scope:defender
						}
						NOT = {
							is_at_war_with = scope:attacker
						}
						NOT = {
							opinion = {
								target = scope:defender
								value < -10
							}
						}
						OR = {
							has_relation_rival = scope:attacker
							has_relation_nemesis = scope:attacker
							has_trait = loyal # loyal vassals side with their liege
							ai_honor >= 25 # honorable vassals side with liege
							opinion = {
								target = scope:defender
								value >= 40 # vassals that like their liege stay loyal
							}
							is_allied_to = scope:defender # allies will most of the time side with liege
							AND = {
								exists = joined_faction
								joined_faction = { faction_is_type = crown_loyalist_faction } # crown loyalist faction always sides with liege
							}
						}
					}
					scope:war = { add_defender = prev }
				}
			}

			scope:war = {
				every_war_attacker = {
					save_temporary_scope_as = joiner
					if = {
						limit = {
							liege = scope:defender
							is_ai = yes
							max_military_strength > 100
							is_landed = yes
							NOT = { scope:attacker = { this = prev } }
						}
						if = {
							limit = {
								scope:attacker = {
									NOT = { 
										AND = {
											exists = joined_faction
											joined_faction = { faction_is_type = crown_loyalist_faction }
										}
									}
								}
							}
							if = { 
								limit = { 
									OR = {
										scope:defender = { is_ai = no }
										scope:attacker = { is_ai = no }
										scope:war = { any_war_participant = { is_ai = no } }
										any_player = {
											is_vassal_or_below_of = scope:defender
										}
									}
									exists = scope:attacker.joined_faction
									NOT = { this = scope:attacker }
									NOT = {
										scope:attacker.joined_faction = {
											any_faction_member = {
												this = scope:joiner
											}
										}
									}
								 }

								if = {
									limit = {
										exists = joined_faction
									}
									leave_faction = joined_faction
								}

								if = {
									# throws error if you attempt to join when false
									limit = {
										is_adult = yes

										NOT = {
											has_government = theocracy_government # not playable, throws error
										}
									}
									join_faction = scope:attacker.joined_faction
								}
							}

							#if = { limit = { NOT = { has_game_rule = internal_turmoil_disabled } }
							#	add_opinion = {
							#			target = scope:defender
							#			modifier = civil_wars_vassal_opinion
							#			opinion = -15
							#	}
							#}
						}
					}
				}

				# call vassals of vassals to a civil war (off by default)
				if = {
					limit = {
						has_game_rule = civil_war_indirect_vassals_enabled
					}

					every_war_attacker = {
						limit = {
							liege = scope:defender

							OR = {
								is_ai = yes

								# call player's own vassals if they are a faction leader
								AND = {
									is_ai = no
									this = scope:attacker
								}
							}
							
						}
						every_vassal = {
							limit = {
								max_military_strength > 100
								is_landed = yes
								highest_held_title_tier > tier_barony
								is_ai = yes
								OR = {
									AND = {
										exists = joined_faction
										joined_faction = { faction_is_type = crown_loyalist_faction }
									}
									liege = { is_allied_to = prev }
									opinion = {
										target = liege
										value > 20
									}
								}
								NOT = { is_at_war_with = scope:war.primary_attacker }
								NOT = { is_at_war_with = scope:war.primary_defender }
							}
							scope:war = { add_attacker = prev }
						}
					}

					every_war_defender = {
						limit = {
							liege = scope:defender
							is_ai = yes
							NOT = { this = scope:defender }
						}
						every_vassal = {
							limit = {
								max_military_strength > 100
								is_landed = yes
								highest_held_title_tier > tier_barony
								is_ai = yes
								OR = {
									AND = {
										exists = joined_faction
										joined_faction = { faction_is_type = crown_loyalist_faction }
									}
									liege = { is_allied_to = prev }
									opinion = {
										target = liege
										value > 20
									}
								}
								NOT = { is_at_war_with = scope:war.primary_attacker }
								NOT = { is_at_war_with = scope:war.primary_defender }
							}
							scope:war = { add_defender = prev }
						}
					}
				}
			}

			# each time a liege has a civil war, their vassals drift away from them with the modifier: Internal Turmoil
			# loyalists may become neutral, or the undecided may join the rebels next time around
			if = {
				limit = {
					scope:defender = {
						NOT = {
							has_game_rule = internal_turmoil_disabled
						}
						#OR = {
						#	is_ai = no
						#	any_vassal_or_below = { is_ai = no }
						#}
					}
				}
				scope:defender = {
					every_vassal = {
						add_opinion = {
								target = scope:defender
								modifier = internal_turmoil_vassal_opinion
								opinion = -10
						}
					}
				}
			}
		}

		else_if = {
			limit = {
				NOT = { has_game_rule = improved_civil_wars_disabled }

				any_player = {
					OR = {
						in_diplomatic_range = scope:defender
						in_diplomatic_range = scope:attacker
					}
				}

				OR = { NOT = { interactive_start_date = current_date } has_game_rule = miv_starting_disabled } # do not affect starting wars 
	
				war = {
					OR = {
						using_cb = populist_war
						using_cb = peasant_war
						is_civil_war = yes
					}
				}

				#scope:attacker = {
				#	OR = { 
				#		joined_faction = { faction_is_type = populist_faction }
				#		joined_faction = { faction_is_type = peasant_faction }
				#	}
				#}

				NOT =  {
					scope:attacker = {
						is_vassal_or_below_of = scope:defender
					}
				}

				NOT = { has_global_variable = AGOT_is_loaded }
			}

			scope:defender = {
				every_vassal = {
					limit = {
						max_military_strength > 100
						is_landed = yes
						highest_held_title_tier > tier_barony 
						OR = {
							AND = {
								exists = joined_faction
								joined_faction = { faction_is_type = crown_loyalist_faction }
							}
							is_allied_to = scope:defender
						}
					}
					scope:war = { add_defender = prev }
				}
			}
		}
	}
}

interactive_claims = {
	effect = {
		if = {
			limit = {
				NOT = { has_game_rule = vassals_join_claims_disabled }

				any_player = {
					OR = {
						in_diplomatic_range = scope:defender
						in_diplomatic_range = scope:attacker
					}
				}

				NOT = { scope:attacker = { has_character_flag = dont_call_vassals } }
				OR = { NOT = { interactive_start_date = current_date } has_game_rule = miv_starting_disabled }
				scope:war = { using_cb = claim_cb }
				exists = scope:claimant
				scope:claimant = {
					is_vassal_or_below_of = scope:attacker
					NOT = { is_at_war_with = scope:defender }
					NOT = { is_at_war_with = scope:attacker }
					NOT = { is_at_war_with = liege }
				}
			}

			scope:claimant = { 
				scope:war = {
					add_attacker = prev
				}
				if = {
					limit = {
						NOT = { has_game_rule = war_exhaustion_miv_disabled }
					}
					add_opinion = {
						target = liege
						modifier = war_exhaustion_vassal_opinion
						opinion = -5
					}
				}
			}
		}
	}
}

interactive_title_holders = {
	effect = {
		if = {
			limit = {
				NOT = { has_game_rule = vassals_defend_titles_disabled }

				any_player = {
					OR = {
						in_diplomatic_range = scope:defender
						in_diplomatic_range = scope:attacker
					}
				}

				NOT = { scope:defender = { has_character_flag = dont_call_vassals } }
				OR = { NOT = { interactive_start_date = current_date } has_game_rule = miv_starting_disabled }
				NOT = {
					scope:defender = { is_vassal_or_below_of = scope:attacker }
				}
				NOT = {
					scope:defender = { is_liege_or_above_of = scope:attacker }
				}
			}

			scope:war = {
				every_in_list = {
					list = target_titles
					if = {
						limit = {
							exists = holder
							holder = {
								is_vassal_or_below_of = scope:defender
								highest_held_title_tier > tier_barony
								max_military_strength > 100 
								is_landed = yes
								NOT = { is_at_war_with = scope:attacker }
							}
						}
						holder = {
							if = {
								limit = {
									NOT = { is_at_war_with = liege }
								}
								scope:war = { add_defender = prev }
								if = {
									limit = {
										NOT = { has_game_rule = war_exhaustion_miv_disabled }
									}
									add_opinion = {
										target = liege
										modifier = war_exhaustion_vassal_opinion
										opinion = -5
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

interactive_external_wars = {
	effect = {
		if = {
			limit = {
				NOT = { has_game_rule = border_vassals_join_disabled }

				any_player = {
					OR = {
						in_diplomatic_range = scope:defender
						in_diplomatic_range = scope:attacker
					}
				}

				OR = { NOT = { interactive_start_date = current_date } has_game_rule = miv_starting_disabled }
				war = {
					is_civil_war = no
				}
				war = {
					NOR = {
						using_cb = populist_war
						using_cb = peasant_war
					}
				}
				NOT = {
					scope:attacker = {
						is_vassal_or_below_of = scope:defender
					}
				}
			}

			# external wars
			scope:defender = {
				every_vassal_or_below = {
					if = {
						limit = {
							NOT = { scope:defender = { has_character_flag = dont_call_vassals } }
							highest_held_title_tier > tier_barony
							max_military_strength > 100
							any_sub_realm_county = {
								any_neighboring_county = {
									holder = { 
										OR = {
											is_vassal_or_below_of = scope:attacker
											this = scope:attacker
										}
									}
								}
							}
							OR = {
								opinion = {
									target = liege
									value > 5
								}
								has_game_rule = defiant_vassals_disabled
							}

							NOT = { is_at_war_with = scope:attacker }
							NOT = { is_at_war_with = scope:defender }
							NOT = { is_at_war_with = liege }
							liege = { NOT = { is_at_war_with = scope:defender } }
							OR = {
								is_vassal_of = scope:defender
								AND = {
									NOT = { is_vassal_of = scope:defender }
									liege = {
										OR = {
											AND = {
												is_at_war_with = scope:attacker
												opinion = {
													target = liege
													value > -5
												}
											}
											AND = {
												NOT = { is_at_war_with = scope:attacker }
												opinion = {
													target = liege
													value > 5
												}
											}
										}
									}
								}
							}
						}
						scope:war = { add_defender = prev } 
						if = { limit = { NOT = { has_game_rule = war_exhaustion_miv_disabled } }
							add_opinion = {
								target = liege
								modifier = war_exhaustion_vassal_opinion
								opinion = -10
							}
						}
					}
				}
			}

			scope:attacker = {
				every_vassal_or_below = {
					if = {
						limit = {
							NOT = { scope:attacker = { has_character_flag = dont_call_vassals } }
							highest_held_title_tier > tier_barony
							max_military_strength > 100
							any_sub_realm_county = {
								any_neighboring_county = {
									holder = { 
										OR = {
											is_vassal_or_below_of = scope:defender
											this = scope:defender
										}
									}
								}
							}

							OR = {
								opinion = {
									target = liege
									value > 10
								}
								has_game_rule = defiant_vassals_disabled
							}

							NOT = { is_at_war_with = scope:defender }
							NOT = { is_at_war_with = scope:attacker }
							NOT = { is_at_war_with = liege }
							liege = { NOT = { is_at_war_with = scope:attacker } }
							OR = {
								is_vassal_of = scope:attacker
								AND = {
									NOT = { is_vassal_of = scope:attacker }
									liege = {
										OR = {
											AND = {
												is_at_war_with = scope:defender
												opinion = {
													target = liege
													value > -5
												}
											}
											AND = {
												NOT = { is_at_war_with = scope:defender }
												opinion = {
													target = liege
													value > 10
												}
											}
										}
									}
								}
							}
						}
						scope:war = { add_attacker = prev } 
						if = { limit = { NOT = { has_game_rule = war_exhaustion_miv_disabled } }
							add_opinion = {
								target = liege
								modifier = war_exhaustion_vassal_opinion
								opinion = -15
							}
						}
					}
				}
			}
		}
	} 
}

interactive_bannermen = {
	effect = {
		if = {
			limit = {
				has_game_rule = call_the_banners_enabled
				
				any_player = {
					OR = {
						in_diplomatic_range = scope:defender
						in_diplomatic_range = scope:attacker
					}
				}

				OR = { NOT = { interactive_start_date = current_date } has_game_rule = miv_starting_disabled }
				war = {
					is_civil_war = no
				}
				war = {
					NOR = {
						using_cb = populist_war
						using_cb = peasant_war
					}
				}
				NOT = {
					scope:attacker = {
						is_vassal_or_below_of = scope:defender
					}
				}
			}

			# bannermen
			scope:defender = {
				every_vassal = {
					limit = {
						NOT = { scope:defender = { has_character_flag = dont_call_vassals } }
						OR = {
							AND = {
								scope:defender = { highest_held_title_tier < tier_empire }
								NOT = {
									scope:defender = {
										any_held_title = {
											count >= 2
											tier = tier_kingdom
										}
									}
								}
								highest_held_title_tier > tier_barony
							}
							highest_held_title_tier > tier_county
						}
						max_military_strength > 200
						is_landed = yes
					}
					if = {
						limit = {
							opinion = {
								target = scope:defender
								value > 15
							}
							NOT = { is_at_war_with = scope:attacker }
							NOT = { is_at_war_with = scope:defender }
						}
						scope:war = { add_defender = prev } 
						if = { limit = { NOT = { has_game_rule = war_exhaustion_miv_disabled } }
							add_opinion = {
								target = scope:defender
								modifier = war_exhaustion_vassal_opinion
								opinion = -10
							}
						}
					}
				}
			}

			scope:attacker = {
				every_vassal = {
					limit = {
						NOT = { scope:attacker = { has_character_flag = dont_call_vassals } }
						OR = {
							AND = {
								scope:attacker = { highest_held_title_tier < tier_empire }
								NOT = {
									scope:attacker = {
										any_held_title = {
											count >= 2
											tier = tier_kingdom
										}
									}
								}
								highest_held_title_tier > tier_barony
							}
							highest_held_title_tier > tier_county
						}
						max_military_strength > 200
						is_landed = yes
					}
					if = {
						limit = {
							opinion = {
								target = scope:attacker
								value > 20
							}
							NOT = { is_at_war_with = scope:defender }
							NOT = { is_at_war_with = scope:attacker }
						}
						scope:war = { add_attacker = prev } 
						if = { limit = { NOT = { has_game_rule = war_exhaustion_miv_disabled } }
							add_opinion = {
								target = scope:attacker
								modifier = war_exhaustion_vassal_opinion
								opinion = -15
							}
						}
					}
				}
			}
		}
	} 
}

interactive_oathbreakers = {
	effect = {
		if = {
			limit = {
				has_game_rule = miv_oathbreakers_enabled
				
				any_player = {
					OR = {
						in_diplomatic_range = scope:defender
						in_diplomatic_range = scope:attacker
					}
				}

				OR = { NOT = { interactive_start_date = current_date } has_game_rule = miv_starting_disabled }

				war = {
					is_civil_war = no
				}
				war = {
					NOR = {
						using_cb = populist_war
						using_cb = peasant_war
					}
				}
				NOT = {
					scope:attacker = {
						is_vassal_or_below_of = scope:defender
					}
				}
			}

			scope:attacker = {
				every_vassal_or_below = {
					limit = {
						is_ai = yes
						NOT = { is_allied_to = scope:defender }
						NOT = { is_allied_to = scope:attacker }
						OR = {
							has_relation_rival = scope:attacker
							has_relation_nemesis = scope:attacker
						}
						is_landed = yes
						max_military_strength > 200
						highest_held_title_tier > tier_barony
						NOT = {
							is_at_war_with = scope:attacker
						}
						NOT = {
							is_at_war_with = scope:defender
						}
					}

					save_temporary_scope_as = oathbreaker

					scope:attacker = {
						add_opinion = {
							target = scope:oathbreaker
							modifier = miv_oathbreaker
						}
					}

					scope:war = {
						add_defender = scope:oathbreaker
					}

					# TODO make this delayed for ordering
					scope:war = {
						every_war_participant = {
							limit = { is_ai = no }
							hidden_effect = {
								send_interface_toast = {
									type = msg_war_oathbreaker
									title = miv_oathbreaker_defects
				
									left_icon = scope:oathbreaker
				
									custom_description_no_bullet = {
										text = interactive_oathbreaker_notification_text
									}
								}
							}
						}
					}
				}
			}

			scope:defender = {
				every_vassal_or_below = {
					limit = {
						is_ai = yes
						NOT = { is_allied_to = scope:defender }
						NOT = { is_allied_to = scope:attacker }
						OR = {
							has_relation_rival = scope:defender
							has_relation_nemesis = scope:defender
						}
						is_landed = yes
						max_military_strength > 200
						highest_held_title_tier > tier_barony
						NOT = {
							is_at_war_with = scope:attacker
						}
						NOT = {
							is_at_war_with = scope:defender
						}
					}
					save_temporary_scope_as = oathbreaker

					scope:defender = {
						add_opinion = {
							target = scope:oathbreaker
							modifier = miv_oathbreaker
						}
					}

					scope:war = {
						add_attacker = scope:oathbreaker
					}

					# TODO make this delayed for ordering
					scope:war = {
						every_war_participant = {
							limit = { is_ai = no }
							hidden_effect = {
								send_interface_toast = {
									type = msg_war_oathbreaker
									title = miv_oathbreaker_defects
				
									left_icon = scope:oathbreaker
				
									custom_description_no_bullet = {
										text = interactive_oathbreaker_notification_text
									}
								}
							}
						}
					}
				}
			}
		}
	} 
}

interactive_call_player = {
	effect = {
		every_player = {
			limit = {
				is_landed = yes
				NOT = {
					AND = {
						is_at_war_with_liege = yes
						OR = {
							is_a_faction_member = yes 
							is_a_faction_leader = yes
						}
					}
				}
				OR = { NOT = { interactive_start_date = current_date } has_game_rule = miv_starting_disabled }
				is_independent_ruler = no
				OR = {
					is_vassal_or_below_of = scope:attacker
					is_vassal_or_below_of = scope:defender
				}
				NOT = {
					scope:war = {
						prev = scope:attacker
					}
				}
				NOT = {
					scope:war = {
						prev = scope:defender
					}
				}
				scope:war = {
					NOR = {
						# using_cb = populist_war
						using_cb = peasant_war
					}
				}
				NOT = {
					AND = {
						has_global_variable = AGOT_is_loaded
						scope:war = { scope:attacker = { is_vassal_or_below_of = scope:defender } }
					}
				}
			}

			save_temporary_scope_as = player

			if = {
				limit = {
					scope:war = {
						any_war_participant = {
							this = scope:player
						}
					}
				}
				scope:war = {
					remove_participant = scope:player
				}
			}
			if = {
				limit = {
					liege = {
						is_at_war = yes
					}
					is_landed = yes
					max_military_strength > 200
					highest_held_title_tier > tier_barony
				}
				trigger_event = interactive.0001
			}
		}
	}
}

interactive_war_participants = {
	effect = {
		if = {
			limit = {
				#has_game_rule = war_participants_miv_enabled
				always = no

				any_player = {
					OR = {
						in_diplomatic_range = scope:war.primary_defender
						in_diplomatic_range = scope:war.primary_attacker
					}
				}

				scope:war = {
					is_civil_war = no
				}
				scope:war = {
					NOR = {
						using_cb = populist_war
						using_cb = peasant_war
					}
				}
				NOT = {
					scope:war.primary_attacker = {
						is_vassal_or_below_of = scope:war.primary_defender
					}
				}

				OR = { NOT = { interactive_start_date = current_date } has_game_rule = miv_starting_disabled }
			}
			scope:war = {
				every_war_participant = {
					limit = {
						OR = {
							is_vassal_of = scope:war.primary_attacker
							is_vassal_of = scope:war.primary_defender
						}
					}
		
					save_scope_as = participant
		
					scope:participant = {
						every_ally = {
							limit = {
								is_vassal_of = scope:participant
								NOT = { scope:participant = { has_character_flag = dont_call_vassals } }
								highest_held_title_tier > tier_barony
								max_military_strength > 100
								is_landed = yes
								opinion = {
									target = scope:participant
									value >= 80
								}
							}
							if = {
								limit = {
									NOT = { is_at_war_with = scope:war.primary_attacker }
									NOT = { is_at_war_with = scope:war.primary_defender }
								}
		
								if = {
									limit = {
										scope:war = { any_war_defender = { this = scope:participant } }
									}
									scope:war = { add_defender = prev } 
									if = { limit = { NOT = { has_game_rule = war_exhaustion_miv_disabled } }
										add_opinion = {
											target = scope:participant
											modifier = war_exhaustion_vassal_opinion
											opinion = -5
										}
									}
								}
		
								else_if = {
									limit = {
										scope:war = { any_war_attacker = { this = scope:participant } }
									}
									scope:war = { add_attacker = prev } 
									if = { limit = { NOT = { has_game_rule = war_exhaustion_miv_disabled } }
										add_opinion = {
											target = scope:participant
											modifier = war_exhaustion_vassal_opinion
											opinion = -5
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
