demand_trial_by_combat_interaction = {
	icon = icon_combat
	interface_priority = 30
	common_interaction = yes
	category = interaction_category_prison
	popup_on_receive = yes
	pause_on_receive = yes
	desc = demand_trial_by_combat_interaction_desc
	highlighted_reason = challenge_to_trial_by_combat_interaction_HIGHLIGHTED
	use_diplomatic_range = no

	cooldown = { years = 3 }

	greeting = negative
	notification_text = REQUEST_TRIAL_BY_COMBAT_TEXT

	redirect = {
		if = {
			limit = {
				scope:actor = scope:recipient
				exists = scope:actor.imprisoner
			}
			scope:actor.imprisoner = { save_scope_as = recipient }
		}
	}

	is_shown = {
		scope:actor = {
			is_human = yes
			is_imprisoned_by = scope:recipient
		}
		scope:recipient = {
			OR = {
				government_has_flag = government_is_feudal
				government_has_flag = government_is_tribal
				government_has_flag = government_is_clan
				government_has_flag = government_is_nw
			}
		}
		NOT = { scope:actor = { has_character_flag = keep_imprisoned } }
	}

	is_valid_showing_failures_only = {
		scope:recipient = { is_busy_in_events_localised = yes } #Imprisoner
		scope:actor = { is_busy_in_events_localised = yes } #Prisoner
		scope:recipient = {
			custom_description = {
				text = "currently_being_tortured"
				NOT = { has_character_flag = is_being_tortured }
			}
		}
		NOT = {
			scope:actor = { has_character_flag = lost_trial_by_combat }
		}
		NOT = {
			scope:recipient = { is_imprisoned = yes }
		}
		NOT = {
			scope:actor = { has_trait = incapable }
		}
	}

	can_send = {
		scope:actor = {
			custom_description = {
				text = "character_interactions_hostile_actions_disabled_delay"
				NOT = { has_character_flag = flag_hostile_actions_disabled_delay }
			}
		}
	}

	on_send = {
		scope:actor = {
			add_character_flag = {
				flag = flag_hostile_actions_disabled_delay
				days = 10
			}
		}
	}

	on_accept = {
		# Will scope:recipient need to choose a champion?
		scope:recipient = { trigger_event = agot_trial_by_combat.1000 }
		# Your chosen champions will duel
		custom_tooltip = demand_trial_by_combat_duel
		# Clear up hostile actions flag.
		if = {
			limit = {
				scope:actor = { has_character_flag = flag_hostile_actions_disabled_delay }
			}
			scope:actor = { remove_character_flag = flag_hostile_actions_disabled_delay }
		}
	}

	on_decline = {
		# Scope:recipient loses some prestige.
		scope:recipient = { add_prestige = medium_prestige_loss }
		# Scope:actor decline processing.
		scope:actor = {
			# Inform them of the declination.
			trigger_event = agot_trial_by_combat.0001
			add_opinion = {
				target = scope:recipient
				modifier = denied_trial_by_combat_opinion
			}
			# Clear up hostile actions flag.
			if = {
				limit = {
					has_character_flag = flag_hostile_actions_disabled_delay
				}
				remove_character_flag = flag_hostile_actions_disabled_delay
			}
		}
	}

	auto_accept = no

	ai_accept = {
		base = 100

		modifier = { # Say no to rivals
			add = -100
			scope:recipient = {
				has_relation_rival = scope:actor
			}
			desc = "ACTOR_RIVAL_TO_ME_REASON"
		}
		modifier = { # Say no to nemesis
			add = -300
			scope:recipient = {
				has_relation_nemesis = scope:actor
			}
			desc = "ACTOR_NEMESIS_TO_ME_REASON"
		}

		modifier = { # At war
			add = -300
			OR = {
				scope:recipient = {
					is_at_war_with = scope:actor
				}
				scope:recipient = {
					any_liege_or_above = { is_at_war_with = scope:actor }
				}
				scope:actor = {
					any_liege_or_above = { is_at_war_with = scope:recipient }
				}
			}
			desc = "IS_AT_WAR_REASON"
		}

		modifier = { # Family Feud
			add = -50
			trigger = {
				exists = scope:actor.house
				exists = scope:recipient.house
				scope:recipient = {
					house.house_head = {
						any_owned_story = {
							story_type = story_cycle_house_feud
							has_variable = house_feud_house
							var:house_feud_house = scope:actor.house
						}
					}
					has_opinion_modifier = {
						modifier = house_feud_opinion
						target = scope:actor.house.house_head
					}
				}
			}
			desc = INTERACTION_FAMILY_FEUD_REVERSE_REASON
		}
	}

	ai_frequency = 12

	ai_targets = {
		ai_recipients = self
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 0

		modifier = {
			add = 100
			OR = {
				AND = {
					imprisoner = { is_ai = yes }
					time_in_prison = { months >= 12 }
				}
				AND = {
					imprisoner = { is_ai = no }
					time_in_prison = { months >= 3 }
				}
			}
		}

		# If you're not going to get a fair trial don't ask unless brave or trusting
		modifier = {
			add = -300
			imprisoner = {
				has_character_modifier = agot_unjust_trial_by_combat
			}
			NOT = { has_trait = brave }
			NOT = { has_trait = trusting }
		}

		#don't waste tbc request when AI will deny it
		modifier = { # At war
			add = -300
			OR = {
				scope:recipient = {
					is_at_war_with = scope:actor
				}
				scope:recipient = {
					any_liege_or_above = { is_at_war_with = scope:actor }
				}
				scope:actor = {
					any_liege_or_above = { is_at_war_with = scope:recipient }
				}
			}
		}

		#people who can't afford a mercenary or can't fight themselves won't demand a trial
		modifier = {
			add = -1000
			AND = {
				is_lowborn = yes
				NOT = {
					any_spouse = {
						is_landed = yes
					}
				}
				gold < 50
				prowess < 15
				can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = imprisoner }
			}
		}
	}

}